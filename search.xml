<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022年4月26日meme</title>
    <url>/2022/04/26/2022%E5%B9%B44%E6%9C%8826%E6%97%A5meme-2022-4-26-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/04/QQ%E5%9B%BE%E7%89%8720220426120154.jpg" alt="QQ图片20220426120154"><br><img src="/upload/2022/04/DD93CCEE25DADA36130797EC963E5DB0.jpg" alt="DD93CCEE25DADA36130797EC963E5DB0"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
        <tag>番剧</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年4月28日MEME</title>
    <url>/2022/04/28/2022%E5%B9%B44%E6%9C%8828%E6%97%A5MEME-2022-nian-4-yue-28-ri-meme/</url>
    <content><![CDATA[<p><img src="https://mirai.mamoe.net/assets/uploads/files/1651117087539-6c030f1f-7394-40e5-8030-49b8da08bd67-image.png" alt="t1"></p>
<p><img src="https://mirai.mamoe.net/assets/uploads/files/1651105117059-8ce83adc-66b7-412f-863e-d4a7c459fd3c-bs8um-c-eoq-96-t-4-w6zg-m.jpg" alt="t2"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年4月27日MEME</title>
    <url>/2022/04/27/2022%E5%B9%B44%E6%9C%8827%E6%97%A5MEME-2022-nian-4-yue-27-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/04/D782CA53AC871732C14294F02AA494C6.gif" alt="D782CA53AC871732C14294F02AA494C6"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年4月30日MEME</title>
    <url>/2022/04/30/2022%E5%B9%B44%E6%9C%8830%E6%97%A5MEME-2022-nian-4-yue-30-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/04/Screenshot_20220430_200517_gov.pianzong.androidnga_edit_1310217272935487.jpg" alt="Screenshot_20220430_200517_gov.pianzong.androidnga_edit_1310217272935487"><br><img src="/upload/2022/04/QQ%E5%9B%BE%E7%89%8720220430222323.jpg" alt="QQ图片20220430222323"><br><img src="/upload/2022/04/QQ%E5%9B%BE%E7%89%8720220430222352.jpg" alt="QQ图片20220430222352"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月11日MEME</title>
    <url>/2022/05/11/2022%E5%B9%B45%E6%9C%8811%E6%97%A5MEME-2022-nian-5-yue-11-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/68D43033080BB262D1BC9C80F1594E5F.jpg" alt="68D43033080BB262D1BC9C80F1594E5F"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年4月29日MEME</title>
    <url>/2022/04/29/2022%E5%B9%B44%E6%9C%8829%E6%97%A5MEME-2022-nian-4-yue-29-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/04/CEE0D880419C1EADFAFD64FE63B4AED7.jpg" alt="CEE0D880419C1EADFAFD64FE63B4AED7"></p>
<p><img src="/upload/2022/04/4810893A80412E0744924BA2F8044CEF.jpg" alt="4810893A80412E0744924BA2F8044CEF"></p>
<p><img src="/upload/2022/04/0CE13673ECCFEE3A63BAA1AF46698B59.jpg" alt="0CE13673ECCFEE3A63BAA1AF46698B59"></p>
<p><img src="/upload/2022/04/5FAF0360F2123030BB6B4D7AB7DCF626.jpg" alt="5FAF0360F2123030BB6B4D7AB7DCF626"></p>
<p><img src="/upload/2022/04/QQ%E5%9B%BE%E7%89%8720220429110128.jpg" alt="QQ图片20220429110128"></p>
<p>![H%OLF5HISBO&#96;Y%<em>A[CX</em>]TL](&#x2F;upload&#x2F;2022&#x2F;04&#x2F;H%25OLF5HISBO%60Y%25_A%5BCX_%5DTL.jpg)</p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月10日MEME</title>
    <url>/2022/05/10/2022%E5%B9%B45%E6%9C%8810%E6%97%A5MEME-2022-nian-5-yue-10-ri-meme/</url>
    <content><![CDATA[<img src="https://api.vvhan.com/api/moyu">

<p><img src="/upload/2022/05/image-1652165203287.png" alt="image-1652165203287"></p>
<div style="position: relative; padding: 30% 45%;">
<iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="/upload/2022/05/twitter_Hilarious%20and%20Original(@hi1ar10us)_20220509-212107_1523775093897588737_video.mp4"scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>


]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月12日MEME</title>
    <url>/2022/05/13/2022%E5%B9%B45%E6%9C%8812%E6%97%A5MEME-2022-nian-5-yue-12-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/67521781BE5C181B0D3CAA15810D8C9F.jpg" alt="67521781BE5C181B0D3CAA15810D8C9F"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月13日MEME</title>
    <url>/2022/05/13/2022%E5%B9%B45%E6%9C%8813%E6%97%A5MEME-2022-nian-5-yue-13-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/606DC226A2E9C590BB63DCB7213AB23A.jpg" alt="606DC226A2E9C590BB63DCB7213AB23A"><br><img src="/upload/2022/05/image-1652408653635.png" alt="image-1652408653635"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月14日MEME</title>
    <url>/2022/05/15/2022%E5%B9%B45%E6%9C%8814%E6%97%A5MEME-2022-nian-5-yue-14-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/b181707cb6a22230e662fd60e30edf92b1153d64_raw.jpg" alt="b181707cb6a22230e662fd60e30edf92b1153d64_raw"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月15日MEME</title>
    <url>/2022/05/15/2022%E5%B9%B45%E6%9C%8815%E6%97%A5MEME-2022-nian-5-yue-15-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/D95E4326BC47CA5162154A2D9C311950.jpg" alt="D95E4326BC47CA5162154A2D9C311950"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月17日MEME</title>
    <url>/2022/05/17/2022%E5%B9%B45%E6%9C%8817%E6%97%A5MEME-2022-nian-5-yue-16-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/C37BDEF1EB7E57FEB35C95243B001192.jpg" alt="C37BDEF1EB7E57FEB35C95243B001192"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月16日MEME</title>
    <url>/2022/05/17/2022%E5%B9%B45%E6%9C%8816%E6%97%A5MEME-2022-nian-5-yue-17-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220517000057.jpg" alt="QQ图片20220517000057"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月18日MEME</title>
    <url>/2022/05/18/2022%E5%B9%B45%E6%9C%8818%E6%97%A5MEME-2022-nian-5-yue-18-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220518183057.jpg" alt="QQ图片20220518183057"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月19日MEME</title>
    <url>/2022/05/20/2022%E5%B9%B45%E6%9C%8819%E6%97%A5MEME-2022-nian-5-yue-19-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220520164237.jpg" alt="QQ图片20220520164237"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月20日MEME</title>
    <url>/2022/05/20/2022%E5%B9%B45%E6%9C%8820%E6%97%A5MEME-2022-nian-5-yue-20-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/EA48A38CCA422719892D104DB96C37F7.jpg" alt="EA48A38CCA422719892D104DB96C37F7"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月1日MEME</title>
    <url>/2022/05/01/2022%E5%B9%B45%E6%9C%881%E6%97%A5MEME-2022-nian-5-yue-1-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/08B17C63DA2718951B96CCC85C868317.jpg" alt="08B17C63DA2718951B96CCC85C868317"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月21日MEME</title>
    <url>/2022/05/21/2022%E5%B9%B45%E6%9C%8821%E6%97%A5MEME-2022-nian-5-yue-21-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/F3LBSOHOHBI%60A%605QRBN47UO.jpg" alt="F3LBSOHOHBI`A`5QRBN47UO"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月22日MEME</title>
    <url>/2022/05/23/2022%E5%B9%B45%E6%9C%8822%E6%97%A5MEME-2022-nian-5-yue-22-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/F8316B2CC72A3172225DF623077CEE14.jpg" alt="F8316B2CC72A3172225DF623077CEE14"><br><img src="/upload/2022/05/41DB99ED29589C934ED102003C643134.jpg" alt="41DB99ED29589C934ED102003C643134"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月23日MEME</title>
    <url>/2022/05/24/2022%E5%B9%B45%E6%9C%8823%E6%97%A5MEME-2022-nian-5-yue-23-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/96CE701C833865A46109738FB59B779D.jpg" alt="96CE701C833865A46109738FB59B779D"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月24日MEME</title>
    <url>/2022/05/24/2022%E5%B9%B45%E6%9C%8824%E6%97%A5MEME-2022-nian-5-yue-24-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220524003325.jpg" alt="QQ图片20220524003325"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月25日MEME</title>
    <url>/2022/05/25/2022%E5%B9%B45%E6%9C%8825%E6%97%A5MEME-2022-nian-5-yue-25-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/9A7F0B22170F94D99E94C5D19D9BF795.png" alt="9A7F0B22170F94D99E94C5D19D9BF795"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月26日MEME</title>
    <url>/2022/05/26/2022%E5%B9%B45%E6%9C%8826%E6%97%A5MEME-2022-nian-5-yue-26-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/CB754E1D138673A39D1FC4D5CE88883D.jpg" alt="CB754E1D138673A39D1FC4D5CE88883D"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月27日MEME</title>
    <url>/2022/05/27/2022%E5%B9%B45%E6%9C%8827%E6%97%A5MEME-2022-nian-5-yue-27-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/3544B2DB0D795DB9FBC13091B7DCFDA7-1653628903466.jpg" alt="3544B2DB0D795DB9FBC13091B7DCFDA7-1653628903466"><br><img src="/upload/2022/05/C6630EED3D9B717E3550F03A90895525.jpg" alt="C6630EED3D9B717E3550F03A90895525"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月28日MEME</title>
    <url>/2022/05/29/2022%E5%B9%B45%E6%9C%8828%E6%97%A5MEME-2022-nian-5-yue-28-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/EEC22F43E8D322928DC30FB9B928E299.jpg" alt="EEC22F43E8D322928DC30FB9B928E299"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月29日MEME</title>
    <url>/2022/05/29/2022%E5%B9%B45%E6%9C%8829%E6%97%A5MEME-2022-nian-5-yue-29-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220529233605.jpg" alt="QQ图片20220529233605"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月2日MEME</title>
    <url>/2022/05/02/2022%E5%B9%B45%E6%9C%882%E6%97%A5MEME-2022-nian-5-yue-2-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/D30FDBDCFB321104A6BDA1648344562F.jpg" alt="D30FDBDCFB321104A6BDA1648344562F"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月30日MEME</title>
    <url>/2022/05/30/2022%E5%B9%B45%E6%9C%8830%E6%97%A5MEME-2022-nian-5-yue-30-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/B2366F38D159722B41FC33B3C7E79398.jpg" alt="B2366F38D159722B41FC33B3C7E79398"><br><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220530233742.jpg" alt="QQ图片20220530233742"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月3日MEME</title>
    <url>/2022/05/03/2022%E5%B9%B45%E6%9C%883%E6%97%A5MEME-2022-nian-5-yue-3-ri-meme/</url>
    <content><![CDATA[<p>![Q_F{2_1E2_X2B4&#96;PIFSULFO](&#x2F;upload&#x2F;2022&#x2F;05&#x2F;Q_F%7B2_1E2_X2B4%60PIFSULFO.jpg)<br><img src="/upload/2022/05/Cache_-61cd0bc4b829abdc..jpg" alt="Cache_-61cd0bc4b829abdc."></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月31日MEME</title>
    <url>/2022/06/01/2022%E5%B9%B45%E6%9C%8831%E6%97%A5MEME-2022-nian-5-yue-31-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/06/50973AE994450DC4701BD63793E9E322.jpg" alt="50973AE994450DC4701BD63793E9E322"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月4日MEME</title>
    <url>/2022/05/04/2022%E5%B9%B45%E6%9C%884%E6%97%A5MEME-2022-nian-5-yue-4-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/57DF6AE1E3718CA7FCFE5C7BC0785F6E.png" alt="57DF6AE1E3718CA7FCFE5C7BC0785F6E"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月5日MEME</title>
    <url>/2022/05/05/2022%E5%B9%B45%E6%9C%885%E6%97%A5MEME-2022-nian-5-yue-5-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/234BE19D140982DCABFA02EB6910AE1F.png" alt="234BE19D140982DCABFA02EB6910AE1F"><br><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220505230817.jpg" alt="QQ图片20220505230817"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月6日MEME</title>
    <url>/2022/05/06/2022%E5%B9%B45%E6%9C%886%E6%97%A5MEME-2022%E5%B9%B45%E6%9C%886%E6%97%A5meme/</url>
    <content><![CDATA[<p><img src="https://pbs.twimg.com/media/FR6ttFnXMAE-YEQ?format=png&name=small" alt="toilet"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月7日MEME</title>
    <url>/2022/05/07/2022%E5%B9%B45%E6%9C%887%E6%97%A5MEME-2022%E5%B9%B45%E6%9C%887%E6%97%A5meme/</url>
    <content><![CDATA[<p><img src="https://mirai.mamoe.net/assets/uploads/files/1651885081211-cb89841a-8e9d-47d7-96ba-eda2ccfe0ab8-xe5wc-uqpysvkfxum-gdut.jpg"><br><img src="https://mirai.mamoe.net/assets/uploads/files/1651507053727-093636b7-8d54-46ed-b1a4-721238be125c-image.png"><br><img src="https://mirai.mamoe.net/assets/uploads/files/1651481411621-73f13fcb-a7f0-40fa-807e-f122d61b3183-image.png"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月8日MEME</title>
    <url>/2022/05/08/2022%E5%B9%B45%E6%9C%888%E6%97%A5MEME-2022%E5%B9%B45%E6%9C%888%E6%97%A5meme/</url>
    <content><![CDATA[<div style="position: relative; padding: 30% 45%;">
<iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=853785446&bvid=BV1fL4y1c7rD&cid=713551037&page=1"scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月9日MEME</title>
    <url>/2022/05/08/2022%E5%B9%B45%E6%9C%889%E6%97%A5MEME-2022-nian-5-yue-9-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/05/54BCA99D2230A33BD0C2F42F2BE0AE53.jpg" alt="54BCA99D2230A33BD0C2F42F2BE0AE53"></p>
<p><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220509214807.jpg" alt="QQ图片20220509214807"></p>
<p><img src="/upload/2022/05/QQ%E5%9B%BE%E7%89%8720220509214918.jpg" alt="QQ图片20220509214918"></p>
<div id="hans-bolang"></div>
<script src="https://api.vvhan.com/api/bolang"></script>]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月16日MEME</title>
    <url>/2022/06/16/2022%E5%B9%B46%E6%9C%8816%E6%97%A5MEME-2022-nian-6-yue-16-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/06/QQ%E5%9B%BE%E7%89%8720220616211635.jpg" alt="QQ图片20220616211635"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
  </entry>
  <entry>
    <title>2022年6月12日MEME</title>
    <url>/2022/06/12/2022%E5%B9%B46%E6%9C%8812%E6%97%A5MEME-2022-nian-6-yue-12-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/06/QQ%E5%9B%BE%E7%89%8720220612113255.jpg" alt="QQ图片20220612113255"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月1日MEME</title>
    <url>/2022/06/02/2022%E5%B9%B46%E6%9C%881%E6%97%A5MEME-2022-nian-6-yue-1-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/06/QQ%E5%9B%BE%E7%89%8720220602002030.jpg" alt="QQ图片20220602002030"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月22日MEME</title>
    <url>/2022/06/22/2022%E5%B9%B46%E6%9C%8822%E6%97%A5MEME-2022-nian-6-yue-22-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/06/A0A0385C519E61586B2B04C9E231375E.jpg" alt="A0A0385C519E61586B2B04C9E231375E"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月2日MEME</title>
    <url>/2022/06/03/2022%E5%B9%B46%E6%9C%882%E6%97%A5MEME-2022-nian-6-yue-2-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/06/091920BB446DEA9BD09CBEA53EFAF83D.jpg" alt="091920BB446DEA9BD09CBEA53EFAF83D"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月3日MEME</title>
    <url>/2022/06/04/2022%E5%B9%B46%E6%9C%883%E6%97%A5MEME-2022-nian-6-yue-3-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/06/FF703DF8C32B33B11B4296BB0D5AE65F.jpg" alt="FF703DF8C32B33B11B4296BB0D5AE65F"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月6日MEME</title>
    <url>/2022/06/07/2022%E5%B9%B46%E6%9C%886%E6%97%A5MEME-2022-nian-6-yue-6-ri-meme/</url>
    <content><![CDATA[<div style="position: relative; padding: 30% 45%;">
<iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=939730291&bvid=BV1fW4y1C7gF&cid=737145823&page=1"scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月4日MEME</title>
    <url>/2022/06/05/2022%E5%B9%B46%E6%9C%884%E6%97%A5MEME-2022-nian-6-yue-4-ri-meme/</url>
    <content><![CDATA[<p>嘿Siri，我刚刚期末考挂了，能给我讲个笑话吗？<br>Siri：你知道你和你爷爷的区别在哪吗？<br>不知道。<br>Siri：you grandpa passed</p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月8日MEME</title>
    <url>/2022/06/08/2022%E5%B9%B46%E6%9C%888%E6%97%A5MEME-enderman/</url>
    <content><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=596513434&bvid=BV1bB4y1y7GD&cid=719744634&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月7日MEME</title>
    <url>/2022/06/07/2022%E5%B9%B46%E6%9C%887%E6%97%A5MEME-2022-nian-6-yue-7-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/06/QQ%E5%9B%BE%E7%89%8720220607172834.png" alt="QQ图片20220607172834"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年7月1日MEME</title>
    <url>/2022/07/01/2022%E5%B9%B47%E6%9C%881%E6%97%A5MEME-2022-nian-7-yue-1-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/07/BCFFF8CA5999693ACB99D141A8846C63.jpg" alt="BCFFF8CA5999693ACB99D141A8846C63"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年8月4日MEME</title>
    <url>/2022/08/04/2022%E5%B9%B48%E6%9C%884%E6%97%A5MEME-2022-nian-8-yue-4-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/08/6AD8E7AA7A3DA9F248F42731C67A2A98.jpg" alt="6AD8E7AA7A3DA9F248F42731C67A2A98"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年9月16日MEME</title>
    <url>/2022/09/16/2022%E5%B9%B49%E6%9C%8816%E6%97%A5MEME-2022-nian-9-yue-16-ri-meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/09/6232700.jpg" alt="6232700"><br>亚当重锤！！！你该死啊啊啊啊啊啊！！！！！</p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>B站流量密码</title>
    <url>/2022/08/04/B%E7%AB%99%E6%B5%81%E9%87%8F%E5%AF%86%E7%A0%81-b%E7%AB%99%E6%B5%81%E9%87%8F%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<ol>
<li>投稿视频词条不能用太广的，会降低点击率，视频容易沉。</li>
<li></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>2022年8月25日-MEME</title>
    <url>/2022/08/25/2022%E5%B9%B48%E6%9C%8825%E6%97%A5-MEME-2022-nian-8-yue-25-ri--meme/</url>
    <content><![CDATA[<p><img src="/upload/2022/08/FEBE5F66BFFB612EDFF3A496CE7BDD40.jpg" alt="FEBE5F66BFFB612EDFF3A496CE7BDD40"></p>
]]></content>
      <categories>
        <category>各种meme</category>
      </categories>
      <tags>
        <tag>meme</tag>
      </tags>
  </entry>
  <entry>
    <title>ChatGPT体验</title>
    <url>/2022/12/11/ChatGPT%E4%BD%93%E9%AA%8C-chatgpt%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>ChatGPT是OpenAI出一种预先训练的大型自然语言处理（NLP）模型，它能够在与人交谈时产生有意义的响应。它通过学习阅读大量文本来模仿人类语言，并能够理解用户的问题并产生适当的响应。因此，它可以用来开发聊天机器人或在其他应用中使用。<br>科普：OpenAI这家公司老板是马斯克。</p>
<h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><ol>
<li>注册一个<a href="https://sms-activate.org/cn">sms-activate</a>账号，充1$</li>
<li>打开<a href="https://beta.openai.com/signup">openAI</a>官网（不能是大陆IP或者香港IP），注册账号输入邮箱，等到要求输入手机号。</li>
<li>在sms选择一个还有openAI账号的地区，点击openAI租用（一般就是几 ₽，我用的英格兰的有些贵）</li>
<li>在openAI注册填入刚刚选择的sms电话号，等待验证码（会发到sms服务栏上）</li>
</ol>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>初次使用还是很夸张，特别是写代码真的挺离谱的。</p>
<h2 id="Linux后台挂载问题"><a href="#Linux后台挂载问题" class="headerlink" title="Linux后台挂载问题"></a>Linux后台挂载问题</h2><p><img src="/upload/2022/12/20221211101412.png" alt="20221211101412"></p>
<h2 id="写快速排序类"><a href="#写快速排序类" class="headerlink" title="写快速排序类"></a>写快速排序类</h2><p><img src="/upload/2022/12/image.png" alt="image"><br><img src="/upload/2022/12/image-1670725123415.png" alt="image-1670725123415"></p>
<h2 id="写歌词"><a href="#写歌词" class="headerlink" title="写歌词"></a>写歌词</h2><p><img src="/upload/2022/12/image-1670725235555.png" alt="image-1670725235555"></p>
<h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h2><p><img src="/upload/2022/12/20221211102056.png" alt="20221211102056"></p>
<h2 id="番剧问题（开始犯病）"><a href="#番剧问题（开始犯病）" class="headerlink" title="番剧问题（开始犯病）"></a>番剧问题（开始犯病）</h2><p><img src="/upload/2022/12/image-1670725340674.png" alt="image-1670725340674"><br><img src="/upload/2022/12/image-1670725370546.png" alt="image-1670725370546"><br>可以看出AI对具体剧情内容是完全不了解的，即使语言逻辑清晰，也是在一本正经的胡说八道。</p>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>台湾大学李宏毅老师的简单讲解。<br><img src="https://bucket-img.tnlmedia.com/cabinet/2022/12/2c82d110-5ab9-40e2-b67f-f57a2ff24b4c.png?auto=compress&fit=max&w=730" alt="image"></p>
<p><a href="https://www.bilibili.com/video/BV1B14y1K7AP">https://www.bilibili.com/video/BV1B14y1K7AP</a></p>
<div style="position: relative; padding: 30% 45%;">
<iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=776022317&bvid=BV1B14y1K7AP&cid=916409716&page=1"scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>


<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p>注册:<a href="https://juejin.cn/post/7173447848292253704">https://juejin.cn/post/7173447848292253704</a><br>sms-activate官网:<a href="https://sms-activate.org/cn">https://sms-activate.org/cn</a><br>chatGPT官网:<a href="https://chat.openai.com/chat">https://chat.openai.com/chat</a><br>chatGPT原理:<a href="https://www.inside.com.tw/article/30032-chatgpt-possible-4-steps-training">https://www.inside.com.tw/article/30032-chatgpt-possible-4-steps-training</a></p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>黑科技</tag>
      </tags>
  </entry>
  <entry>
    <title>【施工中】DawnCraft黎明世界Mod列表</title>
    <url>/2023/01/04/DawnCraft%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>游戏版本：DawnCraftv0.7<br>本篇涵盖大部分游戏中的mod，不会涉及前置mod或优化mod。</p>
<p>标题带有一个*的是无内置汉化但是有其他的汉化获取渠道。</p>
<p>标题带有两个*的是什么汉化都没有。</p>
<h1 id="mod介绍-amp-地址"><a href="#mod介绍-amp-地址" class="headerlink" title="mod介绍&amp;地址"></a>mod介绍&amp;地址</h1><h2 id="蔚蓝浩空Blue-Skies"><a href="#蔚蓝浩空Blue-Skies" class="headerlink" title="蔚蓝浩空Blue Skies"></a>蔚蓝浩空Blue Skies</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/1563.html">https://www.mcmod.cn/class/1563.html</a></p>
</blockquote>
<p>蔚蓝浩空增加了两个维度，每一个维度都有自己的主题，永昼之地（EverBright）是光明的，但却寒冷，而恒晓之地（Everdawn）是黑暗的，但却温暖。除此之外，每个维度都包含一个具有四个Boss之二的地牢。召唤师、星熠破灭之树或炼金术士、幽咽蛛王，它们都受到了伊拉格斯的启发。</p>
<h2 id="真实物理Physics-mod"><a href="#真实物理Physics-mod" class="headerlink" title="真实物理Physics mod"></a>真实物理Physics mod</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/3460.html">https://www.mcmod.cn/class/3460.html</a></p>
</blockquote>
<p>潜入一个前所未有的新世界——坍塌的洞穴，可交互的布娃娃死亡生物，物品物理以及更多的东西在等着你！</p>
<p>这个模组为死亡的生物和被破坏的方块添加了真实的物理效果，这很容易理解！你可以自定义此模组的各项数值，通过启用或关闭某些功能，以便在你的电脑&#x2F;笔记本电脑上获得更好的性能。</p>
<h2 id="BrassAmber-BattleTowers"><a href="#BrassAmber-BattleTowers" class="headerlink" title="BrassAmber BattleTowers"></a>BrassAmber BattleTowers</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/5549.html">https://www.mcmod.cn/class/5549.html</a></p>
</blockquote>
<p>在世界各处分布着高耸入云的石塔 外面看起来只是普通的建筑物</p>
<p>但当你靠近时，无数的刷怪笼、咆哮着向你涌来的怪物</p>
<p>以及淹没在怪物浪潮中的战利品箱清楚地告诉你：</p>
<p>这里只属于强大的冒险者!</p>
<h2 id="AM-Alex-的生物Alex’s-Mobs"><a href="#AM-Alex-的生物Alex’s-Mobs" class="headerlink" title="[AM]Alex 的生物Alex’s Mobs"></a>[AM]Alex 的生物Alex’s Mobs</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/3318.html">https://www.mcmod.cn/class/3318.html</a></p>
</blockquote>
<p>Alex 的生物是一个将许多生物加入 Minecraft，使游戏变得更加有趣味的模组。</p>
<p>本模组的生物被分为两类：一类为现实生物，另一类则是虚构生物。</p>
<p>所有的新增的生物，都具有自己特有的掉落物、机制和功能，并没有纯粹的仅用来增加游戏美感的生物。</p>
<p>换而言之，它们还有助于在游戏中使某些环境令人感觉更加真实生动。</p>
<p>不同于一些获得材料的方式基本只有杀戮这一条道路的动物模组，Alex 的生物中的很多东西都需要通过运用生物的特殊机制和功能来获取。</p>
<h2 id="Aquamirae-Mod"><a href="#Aquamirae-Mod" class="headerlink" title="Aquamirae Mod*"></a>Aquamirae Mod*</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/5011.html">https://www.mcmod.cn/class/5011.html</a></p>
</blockquote>
<p>有大量的内容可以在生存中探索。</p>
<p>加入了新的战斗元素和机制，和带有套装效果的盔甲以及具有自定义游戏效果的武器。</p>
<p>由专业建造者制作的新结构和地牢。</p>
<p>动态的环境，和生动的实体和模型。以及经验丰富的 CG 艺术家的材质，还有生动的音效和音乐。</p>
<p>成就和提示将引导你推进进度，因此，不必再搜索如何推进。</p>
<h2 id="Danny’s-Expansion"><a href="#Danny’s-Expansion" class="headerlink" title="Danny’s Expansion**"></a>Danny’s Expansion**</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/3675.html">https://www.mcmod.cn/class/3675.html</a></p>
</blockquote>
<p>Danny’s Expansion在游戏中新增了大量的奇幻生物，并且每个生物都拥有精美的模型和流畅的动作。</p>
<p>模组还添加了一些道具、装备，可以通过击杀这些生物来获得。</p>
<h2 id="机械动力Create"><a href="#机械动力Create" class="headerlink" title="机械动力Create"></a>机械动力Create</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/2021.html">https://www.mcmod.cn/class/2021.html</a></p>
</blockquote>
<p>机械动力（Create）是一个围绕着建筑、装饰和机械的新兴模组，所添加的元素旨在为玩家提供全新的建筑与自动化体验，并尽可能多地为玩家预留自定义空间。在机器与能源方面，模组做出了极大的创新。机器不再由传统科技模组中乏味的电线供能，而是需要玩家搭建机械传动系统驱动。加工过程也不再是枯燥的 GUI 里等待进度条一遍遍被填满，机器可以直接与世界中的物品交互，并且加工时有着精美的动画。模组还具有独创的 动态结构 系统，可以使世界中的方块结构作为整体运动，进行各种自动化，并且有着真实的物理效果.</p>
<h2 id="锦致装饰Supplementaries"><a href="#锦致装饰Supplementaries" class="headerlink" title="锦致装饰Supplementaries"></a>锦致装饰Supplementaries</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/3555.html">https://www.mcmod.cn/class/3555.html</a></p>
</blockquote>
<p>它为游戏增加了很多美观且实用的物品，在生活质量、装饰建筑和红石器械上都有非常多的额外内容和调整。模组中几乎每一个物品都与原版的内容具有非常高的互动性，并且其美术风格也能够很好地融入其中。Supplementaries（直译“补充”）正如其名，是对原版体验的补充和增强。</p>
<h2 id="夸克Quark"><a href="#夸克Quark" class="headerlink" title="夸克Quark"></a>夸克Quark</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/527.html">https://www.mcmod.cn/class/527.html</a></p>
</blockquote>
<p>该模组包含了形形色色的对原版游玩元素的改良，使 Minecraft 更加有趣&#x2F;有挑战性&#x2F;友好。值得留意的是，模组中的所有元素都可以通过配置文件禁用或做进一步调整。因此，夸克这样极具脑洞的模组经过时间的积累，一定会成为你整合包中的常客。</p>
<p>夸克旨在创建与原版类似的体验，任何添加到夸克的特性都不损害原版的游戏风格。</p>
<h2 id="MMobs-Mowzie的生物Mowzie’s-Mobs"><a href="#MMobs-Mowzie的生物Mowzie’s-Mobs" class="headerlink" title="[MMobs]Mowzie的生物Mowzie’s Mobs"></a>[MMobs]Mowzie的生物Mowzie’s Mobs</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/984.html">https://www.mcmod.cn/class/984.html</a></p>
</blockquote>
<p>本模组增加了各种虚构的生物，独特的是各具特色的 AI、模型与动画效果。</p>
<h2 id="灾变L-Ender-‘s-Cataclysm"><a href="#灾变L-Ender-‘s-Cataclysm" class="headerlink" title="灾变L_Ender ‘s Cataclysm"></a>灾变L_Ender ‘s Cataclysm</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/5214.html">https://www.mcmod.cn/class/5214.html</a><br>灾变是一个增加了困难的地牢、具有挑战性的 Boss 和强大武器的模组。Boss 的灵感主要来自 Minecraft Dungeons ，与原版 Boss 相比，它们更加独特、复杂和强大。目前，本模组添加了 3 个精细的 Boss，每个 Boss 都有自己的结构和独特技能，以及有特殊能力的掉落物。探索多种结构，挑战并击败 Boss 以证明自己</p>
</blockquote>
<h2 id="Deeper-in-the-Caves"><a href="#Deeper-in-the-Caves" class="headerlink" title="Deeper in the Caves**"></a>Deeper in the Caves**</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/5167.html">https://www.mcmod.cn/class/5167.html</a></p>
</blockquote>
<p>本模组添加了具有声音探测能力的监守者（无法探测鸡蛋和雪球）、一个维度、一些方块、音效和别的一些怪物。</p>
<p>玩家可以在深暗之域洞穴中找到监守者，它们非常强壮，只掉落与幽匿相关的物品。</p>
<p>要前往深暗之域，玩家只需要挖到基岩层，找到基岩中的深暗之域洞穴。挖掉它们，就能前往深暗之域。</p>
<h2 id="荒野更新1-19The-Wild-Update-1-19"><a href="#荒野更新1-19The-Wild-Update-1-19" class="headerlink" title="荒野更新1.19The Wild Update 1.19***"></a>荒野更新1.19The Wild Update 1.19***</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/5351.html">https://www.mcmod.cn/class/5351.html</a></p>
</blockquote>
<p>此mod致力于将所有已公布的1.19内容带到1.16&#x2F;1.17&#x2F;1.18中。(上面那个已经是1.19的内容了，感觉整合包作者加重复了)</p>
<h2 id="血缘Blood-And-Madness"><a href="#血缘Blood-And-Madness" class="headerlink" title="血缘Blood And Madness*"></a>血缘Blood And Madness*</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/4748.html">https://www.mcmod.cn/class/4748.html</a></p>
</blockquote>
<p>本模组受到Fromsoft开发的《血源诅咒》的启发，意图将其中的武器，敌人和其他元素带入Minecraft中。</p>
<p>目前Blood And Madness添加了几种可变形的，有特殊能力的武器，以及带有特殊动画和攻击动作的敌人，还有三个强大的BOSS。将来还会有更多敌人，BOSS，武器和新群系，新结构和新维度一起加入，以及更好的武器模型。</p>
<p>已添加的装备包括猎人套装，锯齿猎刀、Rakuyo(落叶、洛阳)、慈悲之刃等武器，以及各式枪械，采血瓶和水银子弹。</p>
<p>兽化病已经感染这个世界，它将人类转变为有着超人力量和血之饥渴的恐怖野兽。在充满敌意的世界与丑陋的野兽，变得疯狂的人类，以及来自外层空间的伟大存在作战。</p>
<h2 id="Bygone-Nether"><a href="#Bygone-Nether" class="headerlink" title="Bygone Nether"></a>Bygone Nether</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/7349.html">https://www.mcmod.cn/class/7349.html</a></p>
</blockquote>
<p>Bygone Nether是一个下界结构模组，拓展了下界维度背后的传说背景，并在生存游戏模式中提供额外的挑战和引人注目的新玩法。</p>
<p>玩家可以探索绯红森林、诡异森林和灵魂沙峡谷中的新结构，以及这些结构中的新生物。除此之外，作者还重新设计了下界要塞，并让堡垒遗迹可以在所有下界生物群系中生成。</p>
<h2 id="Illage-and-Spillage"><a href="#Illage-and-Spillage" class="headerlink" title="Illage and Spillage*"></a>Illage and Spillage*</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/6343.html">https://www.mcmod.cn/class/6343.html</a></p>
</blockquote>
<p>此模组添加了更多灾厄村民的种类，使得袭击更具挑战性！</p>
<h2 id="尸体"><a href="#尸体" class="headerlink" title="尸体"></a>尸体</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/3007.html">https://www.mcmod.cn/class/3007.html</a></p>
</blockquote>
<p>此模组添加了遗体，遗体会在玩家死亡后生成在该玩家的死亡地点。</p>
<p>在没有开启死亡不掉落的情况下，玩家的物品会存储在遗体里，玩家可以右键遗体并拿回自己的物品，物品一旦拿走就不能再放入遗体里。</p>
<p>遗体会在无物品后 30 秒消失，在有物品的情况下两游戏天（即实际40分钟）后会变成骷髅（非敌对生物中的骷髅）。</p>
<p>遗体占用6格空间，无实体碰撞。</p>
<p>左键无法破坏。</p>
<p>掉入岩浆遗体会浸没在岩浆里，并且物品不会丢失。</p>
<p>掉入虚空会在虚空上方约y&#x3D;0处生成遗体。</p>
<h2 id="史诗战斗Epic-Fight"><a href="#史诗战斗Epic-Fight" class="headerlink" title="史诗战斗Epic Fight"></a>史诗战斗Epic Fight</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/3037.html">https://www.mcmod.cn/class/3037.html</a></p>
</blockquote>
<p>按R键切换战斗和挖掘模式</p>
<h2 id="ER-末地：创世End-Remastered"><a href="#ER-末地：创世End-Remastered" class="headerlink" title="[ER]末地：创世End Remastered"></a>[ER]末地：创世End Remastered</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/3369.html">https://www.mcmod.cn/class/3369.html</a></p>
</blockquote>
<p>末地：创世 旨在让你的生存更具挑战性，添加了12种末影之眼，并在主世界添加了End Castle和End Gate两种结构，用来代替原版的要塞。</p>
<p>由于原版末地传送门失效，为了能够去往末地，你需要搜刮原版建筑或在与怪物的战斗中找齐这12种末影之眼。之后你可以选择跟随它们到达End Gate，或者从制图师那里买来探险家地图寻找End Castle。进入二者之一并找到隐藏的传送门房间，放置12种末影之眼，即可进入末地。</p>
<h2 id="迎战Meet-Your-Fight"><a href="#迎战Meet-Your-Fight" class="headerlink" title="迎战Meet Your Fight"></a>迎战Meet Your Fight</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/4204.html">https://www.mcmod.cn/class/4204.html</a></p>
</blockquote>
<p>迎战（Meet Your Fight）增加了几个战斗的 Boss，每个 Boss 都有独立的战利品，例如有用的饰品或很酷的武器和工具。这些 Boss 接到召唤才会前来，你需要制作合适的召唤物品。</p>
<p>目前有 3 个 Boss，每个都有独立的图案、可制作的物品和召唤仪式。</p>
<h2 id="滑翔伞Paragliders"><a href="#滑翔伞Paragliders" class="headerlink" title="滑翔伞Paragliders*"></a>滑翔伞Paragliders*</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/1344.html">https://www.mcmod.cn/class/1344.html</a></p>
</blockquote>
<p>相信大家一定对塞尔达传说-荒野之息里林克的滑翔伞印象深刻。</p>
<p>现在这个MOD将林克的滑翔伞添加到了MC中</p>
<p>现在可以对滑翔伞进行染色或者附加上德库树叶的皮肤（玩过塞尔达剑技的玩家应该不陌生）</p>
<p>使用方式：拿在手上，在超过三格的地方掉下来就会自动打开滑翔伞。</p>
<p>目前滑翔伞只提供缓慢降落功能，有点类似IC的喷气背包，需要玩家自行移动。</p>
<p>注意事项：</p>
<p>1.放副手（就是放盾牌的地方）是无法起作用的。</p>
<p>2.这不是鞘翅，不是鞘翅，不是鞘翅。只能缓慢降落，不能飞，也不能用烟花加速</p>
<h2 id="黑暗之魂DarkSouls"><a href="#黑暗之魂DarkSouls" class="headerlink" title="黑暗之魂DarkSouls**"></a>黑暗之魂DarkSouls**</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/7437.html">https://www.mcmod.cn/class/7437.html</a></p>
</blockquote>
<p>本模组添加了一些来自游戏黑魂的生物以及设定，如篝火保存存档以及一些攻击方式。</p>
<p>玩法</p>
<p>模组版本 0.3.0 中添加了新的武器类型，如巨剑、矛以及新的怪物攻击方式。</p>
<p>你可以在王国的帐篷里找到战士和士兵，或者在火神庙里找到非敌对的 NPC。</p>
<p>在游玩时要小心晚上在外迷路的恶魔。</p>
<h2 id="PFM-Paladin的家具-Paladin’s-Furniture"><a href="#PFM-Paladin的家具-Paladin’s-Furniture" class="headerlink" title="[PFM] Paladin的家具 (Paladin’s Furniture)"></a>[PFM] Paladin的家具 (Paladin’s Furniture)</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/8455.html">https://www.mcmod.cn/class/8455.html</a></p>
</blockquote>
<p>本模组是为现代 Minecraft 版本提供的全新家具模组。它包含了超过 1000 件家具，既可用于装点建筑，同时兼顾美观和功能性。所有家具都可以合成并在生存模式合成。</p>
<h2 id="Goblins-amp-Dungeons"><a href="#Goblins-amp-Dungeons" class="headerlink" title="Goblins &amp; Dungeons"></a>Goblins &amp; Dungeons</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/7220.html">https://www.mcmod.cn/class/7220.html</a></p>
</blockquote>
<p>Goblins &amp; Dungeons 是一款基于《龙与地下城》等流行的桌面角色扮演游戏的模组。</p>
<p>模組的目标是通过有趣的生物、结构和物品为游戏添加独特的体验，同时也尽量不偏离原版的玩法太远。</p>
<h2 id="哥布林商人Goblin-Traders"><a href="#哥布林商人Goblin-Traders" class="headerlink" title="哥布林商人Goblin Traders"></a>哥布林商人Goblin Traders</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/2353.html">https://www.mcmod.cn/class/2353.html</a></p>
</blockquote>
<p>Goblin Traders添加了哥布林商人，你可以和它们进行交易。</p>
<p>你只能在地下洞穴中发现哥布林商人，它们会出售一些通常你无法获得的，稀有和特殊的物品。</p>
<p>与它们交易，你也会获得一些比正常附魔等级更高的附魔书。</p>
<p>哥布林商人类似于流浪商人，它们会随机在一个玩家的附近生成。当你不买他的东西时会对你造成0伤害的击退（请不要伤害它）</p>
<h2 id="FTBQ-FTB任务FTB-Quests"><a href="#FTBQ-FTB任务FTB-Quests" class="headerlink" title="[FTBQ]FTB任务FTB Quests"></a>[FTBQ]FTB任务FTB Quests</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/1423.html">https://www.mcmod.cn/class/1423.html</a></p>
</blockquote>
<p>一个强大的轻量级，基于团队系统的任务模组，和 Hardcore Questing Mode 类似。</p>
<h2 id="Enlightened-End"><a href="#Enlightened-End" class="headerlink" title="Enlightened End"></a>Enlightened End</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/5607.html">https://www.mcmod.cn/class/5607.html</a></p>
</blockquote>
<p>把它想像成下界更新，但是一个末地版本。</p>
<h2 id="orcz"><a href="#orcz" class="headerlink" title="orcz"></a>orcz</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/6158.html">https://www.mcmod.cn/class/6158.html</a></p>
</blockquote>
<p>目前新增 7 种兽人和 3 种哥布林，兽人和哥布林都制作了复杂的 AI！</p>
<p>探索兽人营地以获得一些战利品并获得一些乐趣，包括沙地的变体和雪地的变体！（可以在配置文件中禁用）</p>
<p>与兽人和哥布林对抗，为你的生存而战，还有更多内容！</p>
<h2 id="下界乐事Nether’s-Delight"><a href="#下界乐事Nether’s-Delight" class="headerlink" title="下界乐事Nether’s Delight"></a>下界乐事Nether’s Delight</h2><blockquote>
<p><a href="https://www.mcmod.cn/class/4563.html">https://www.mcmod.cn/class/4563.html</a></p>
</blockquote>
<p>下界乐事是农夫乐事的拓展模组，基于向下界添加烹饪内容添加了许多新食材和物品。</p>
<p>使用先进的狩猎技术和烹饪技巧，你可以设法准备无数令人作呕的饭菜和长满菌类的小吃，以便在下界生存更长时间。</p>
<p>这个农夫乐事拓展模组专注于为下界提供更多内容，以满足我们吃下界生物的愿望！</p>
<p>目前，你可以吃下界菌类、岩浆怪、炽足兽和疣猪兽。</p>
<p>击败疣猪兽时有几率掉落肉，这些肉可以用来合成一些食物，比如肉拌诡异菌。</p>
<p>你可以把整头疣猪兽做成大盘菜，这个菜可以右键摆在方块上，然后可以用模组内的刀切开，切开后用碗右击可以获得一碗食物，提供的饥饿值和饱和度较高。</p>
<p>这个模组还包含烈焰棒肉串和岩浆怪全家桶。</p>
<p>这些食物的模型都非常精致，总之，是一款非常好玩的模组。</p>
<h2 id="农夫乐事"><a href="#农夫乐事" class="headerlink" title="农夫乐事"></a>农夫乐事</h2><p>老朋友了。</p>
<blockquote>
<p><a href="https://www.mcmod.cn/class/2820.html">https://www.mcmod.cn/class/2820.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>MineCraft</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel制作随机点名</title>
    <url>/2022/12/29/Excel%E5%88%B6%E4%BD%9C%E9%9A%8F%E6%9C%BA%E7%82%B9%E5%90%8D-excel-zhi-zuo-sui-ji-dian-ming/</url>
    <content><![CDATA[<h1 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h1><p>在A列下填写人物名字，按f9刷新后，随机抽取一个人。</p>
<h1 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h1><p>在其他单元格写</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">=<span class="built_in">INDEX</span>(<span class="symbol">A:A</span>,<span class="built_in">RANDBETWEEN</span>(<span class="number">2</span>,<span class="built_in">COUNTA</span>(<span class="symbol">A:A</span>)))</span><br></pre></td></tr></table></figure>


<h2 id="函数解释："><a href="#函数解释：" class="headerlink" title="函数解释："></a>函数解释：</h2><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">=<span class="built_in">INDEX</span>(<span class="symbol">A:A</span>,<span class="built_in">RANDBETWEEN</span>(<span class="number">2</span>,<span class="built_in">COUNTA</span>(<span class="symbol">A:A</span>)))</span><br></pre></td></tr></table></figure>
<p><code>A:A</code>表示A列</p>
<p><code>COUNTA()</code>可以统计区域内非空元素个数</p>
<p><code>RANDBETWEEN (bottom,top)</code>从[bottom,top]随机返回一个整数</p>
<p><code>INDEX(Range,index)</code>返回range范围内id为index的单元格内容。</p>
<p>首先用counta获取A这一列一共有多少数据，然后用randbetween（由于第一行是标题因此是从2开始，Excel是从1计数）从这些数据中获取一个值，用index从a列中选中随机值对应的单元格数据返回。</p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel制作随机点名</title>
    <url>/2022/12/28/Excel%E5%88%B6%E4%BD%9C%E9%9A%8F%E6%9C%BA%E7%82%B9%E5%90%8D/</url>
    <content><![CDATA[<h1 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h1><p>在A列下填写人物名字，按f9刷新后，随机抽取一个人。</p>
<h1 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h1><p>在其他单元格写</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">=<span class="built_in">INDEX</span>(<span class="symbol">A:A</span>,<span class="built_in">RANDBETWEEN</span>(<span class="number">2</span>,<span class="built_in">COUNTA</span>(<span class="symbol">A:A</span>)))</span><br></pre></td></tr></table></figure>


<h2 id="函数解释："><a href="#函数解释：" class="headerlink" title="函数解释："></a>函数解释：</h2><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">=<span class="built_in">INDEX</span>(<span class="symbol">A:A</span>,<span class="built_in">RANDBETWEEN</span>(<span class="number">2</span>,<span class="built_in">COUNTA</span>(<span class="symbol">A:A</span>)))</span><br></pre></td></tr></table></figure>
<p><code>A:A</code>表示A列</p>
<p><code>COUNTA()</code>可以统计区域内非空元素个数</p>
<p><code>RANDBETWEEN (bottom,top)</code>从[bottom,top]随机返回一个整数</p>
<p><code>INDEX(Range,index)</code>返回range范围内id为index的单元格内容。</p>
<p>首先用counta获取A这一列一共有多少数据，然后用randbetween（由于第一行是标题因此是从2开始，Excel是从1计数）从这些数据中获取一个值，用index从a列中选中随机值对应的单元格数据返回。</p>
]]></content>
  </entry>
  <entry>
    <title>FaceSwap换脸</title>
    <url>/2022/11/25/FaceSwap%E6%8D%A2%E8%84%B8-faceswap%E6%8D%A2%E8%84%B8/</url>
    <content><![CDATA[<h1 id="前置约定"><a href="#前置约定" class="headerlink" title="前置约定"></a>前置约定</h1><p>把B的脸换到A上。<br>A:脸应该被替换的数据集<br>B:用于替换A的脸的数据集</p>
<h1 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h1><p>数据集要求：</p>
<p>Training Data</p>
<p>It cannot be overstated enough how important the quality of data is to your model. A smaller model can perform very well with decent data, similarly no model will perform well with poor data. &#x3D;&#x3D;At an absolute minimum there should be 500 varied images in each side of your model（A和B每边至少要500张）&#x3D;&#x3D;, however the more data, and the more varied, the better… up to a point.&#x3D;&#x3D;A sane number of images to use is anywhere between 1,000 and 10,000（数量）&#x3D;&#x3D;. Adding many more images than this can actually hurt training.</p>
<p>Too many similar images will not help your model.&#x3D;&#x3D;You want as many different angles, expressions and lighting conditions as possible（不同角度，不同表情，不同灯光）&#x3D;&#x3D;. It is a common misconception that a model is trained for a specific scene. This is “memorization” and is not what you are trying to achieve. You are trying to train the model to understand a face at all angles, with all expressions in all conditions, and swap it with another face at all angles, with all expressions in all conditions. You therefore want to build a training set from as many different sources as possible for both the A and B set.</p>
<p>&#x3D;&#x3D;Varied angles for each side are highly important&#x3D;&#x3D;. A NN can only learn what it sees. If 95% of the faces are looking straight at the camera and 5% are side on, then it will take a very long time for the model to learn how to create side on faces. It may not be able to create them at all as it sees side on faces so infrequently. Ideally you want as even distribution as possible of face angles, expressions and lighting conditions.</p>
<p>Similarly, &#x3D;&#x3D;it is also important that you have as many matching angles&#x2F;expressions&#x2F;lighting conditions as possible between both the A and B sides（最好是A和B的采样是相似的）&#x3D;&#x3D;. If you have a lot of profile images for the A side, and no profile images for the B side, then the model will never be able to perform swaps in profile, as Decoder B will lack the information required to create profile shots.</p>
<p>The quality of training data should generally not be obscured and should be of a high quality (sharp and detailed). However, it is fine to have some images in the training set that are blurry&#x2F;partially obscured. Ultimately in the final swap some faces will be blurry&#x2F;low resolution&#x2F;obscured, so it is important for the NN to see these types of images too so it can do a faithful recreation.</p>
<p>More detailed information about creating training sets can be found in the Extract guide.</p>
<h1 id="数据集预处理"><a href="#数据集预处理" class="headerlink" title="数据集预处理"></a>数据集预处理</h1><h1 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h1><h2 id="粗训"><a href="#粗训" class="headerlink" title="粗训"></a>粗训</h2><p>先跑个10w Iteration</p>
<h2 id="细训"><a href="#细训" class="headerlink" title="细训"></a>细训</h2><p>勾选NoWarp<br><img src="/upload/2022/11/image.png" alt="image"><br>loss值</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>faceswap Forum：<a href="https://forum.faceswap.dev/index.php">https://forum.faceswap.dev/index.php</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>黑科技</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Halo</title>
    <url>/2022/04/22/Hello%20Halo-hello-halo/</url>
    <content><![CDATA[<h2 id="Hello-Halo"><a href="#Hello-Halo" class="headerlink" title="Hello Halo"></a>Hello Halo</h2><p>如果你看到了这一篇文章，那么证明你已经安装成功了，感谢使用 <a href="https://halo.run/">Halo</a> 进行创作，希望能够使用愉快。</p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul>
<li>官网：<a href="https://halo.run/">https://halo.run</a></li>
<li>文档：<a href="https://docs.halo.run/">https://docs.halo.run</a></li>
<li>社区：<a href="https://bbs.halo.run/">https://bbs.halo.run</a></li>
<li>主题仓库：<a href="https://halo.run/themes.html">https://halo.run/themes.html</a></li>
<li>开源地址：<a href="https://github.com/halo-dev/halo">https://github.com/halo-dev/halo</a></li>
</ul>
<p>在使用过程中，有任何问题都可以通过以上链接找寻答案，或者联系我们。</p>
<blockquote>
<p>这是一篇自动生成的文章，请删除这篇文章之后开始你的创作吧！</p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
  </entry>
  <entry>
    <title>Hello world！</title>
    <url>/2022/04/22/Hello%20world%EF%BC%81-helloworld/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello world！</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>JAVA-lambda表达式</title>
    <url>/2022/12/15/JAVA-lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F-java-lambda-biao-da-shi/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 不需要参数,返回值为 2</span></span><br><span class="line">()-&gt;<span class="number">2</span></span><br><span class="line"><span class="comment">// 2. 接收一个参数(数字类型),返回其2倍的值</span></span><br><span class="line">x-&gt;<span class="number">2</span>*x</span><br><span class="line"><span class="comment">// 3. 接受2个参数(数字),并返回他们的和</span></span><br><span class="line">(x,y) -&gt; x+y</span><br><span class="line"><span class="comment">// 4. 接收2个int型整数,返回他们的乘积</span></span><br><span class="line">(<span class="type">int</span> x,<span class="type">int</span> y) -&gt; x * y</span><br><span class="line"><span class="comment">// 5. 接受一个 string 对象,并在控制台打印,不返回任何值(看起来像是返回void)</span></span><br><span class="line">(String s) -&gt; System.out.print(s)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux使用crontab定期执行脚本</title>
    <url>/2022/11/29/Linux%E4%BD%BF%E7%94%A8crontab%E5%AE%9A%E6%9C%9F%E6%89%A7%E8%A1%8C%E8%84%9A%E6%9C%AC-shi-yong-crontab-ding-qi-zhi-xing-jiao-ben/</url>
    <content><![CDATA[<p>树莓派4b挂载机械硬盘由于usb供电不足，机械硬盘会经常自动断开挂载。所以写了个脚本定期通过UUID挂载机械硬盘。</p>
<p>cron，是一个Linux定时执行工具，可以在无需人工干预的情况下运行作业。 在Ubuntu server 下，cron是被默认安装并启动的。</p>
<h1 id="添加crontab任务"><a href="#添加crontab任务" class="headerlink" title="添加crontab任务"></a>添加crontab任务</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>
<p>使用上面命令后，会打开一个文本，在里面写入任务。</p>
<h2 id="1-直接执行命令行"><a href="#1-直接执行命令行" class="headerlink" title="1. 直接执行命令行"></a>1. 直接执行命令行</h2><p>每2分钟打印一个字符串“Hello World”，保存至文件&#x2F;home&#x2F;laigw&#x2F;cron&#x2F;HelloWorld.txt中，cron 格式如下： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*/2 * * * echo “Hello World.” &gt;&gt; /home/HelloWorld.txt </span><br></pre></td></tr></table></figure>
<h2 id="2-shell-文件"><a href="#2-shell-文件" class="headerlink" title="2. shell 文件"></a>2. shell 文件</h2><p>每3分钟调用一次 &#x2F;home&#x2F;laigw&#x2F;cron&#x2F;test.sh 文件，cron 格式如下： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*/3 * * * /home/laigw/cron/test.sh </span><br></pre></td></tr></table></figure>
<h1 id="重启crontab服务"><a href="#重启crontab服务" class="headerlink" title="重启crontab服务"></a>重启crontab服务</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service cron restart </span><br></pre></td></tr></table></figure>
<h1 id="crontab语法"><a href="#crontab语法" class="headerlink" title="crontab语法"></a>crontab语法</h1><p>可以直接使用在线编辑器查看crontab语句执行时间<a href="https://tool.lu/crontab/">https://tool.lu/crontab/</a></p>
<p>语法如下： </p>
<table>
<thead>
<tr>
<th>Minute</th>
<th>Hour</th>
<th>Day</th>
<th>Month</th>
<th>Dayofweek</th>
<th>command</th>
</tr>
</thead>
<tbody><tr>
<td>分钟</td>
<td>小时</td>
<td>天</td>
<td>月</td>
<td>天每星期</td>
<td>命令</td>
</tr>
</tbody></table>
<p>每个字段代表的含义及取值范围如下：<br>Minute ：分钟（0-59），表示每个小时的第几分钟执行该任务 </p>
<p>Hour ： 小时（1-23），表示每天的第几个小时执行该任务 </p>
<p>Day ： 日期（1-31），表示每月的第几天执行该任务 </p>
<p>Month ： 月份（1-12），表示每年的第几个月执行该任务 </p>
<p>DayOfWeek ： 星期（0-6，0代表星期天），表示每周的第几天执行该任务 </p>
<p>Command ： 指定要执行的命令（如果要执行的命令太多，可以把这些命令写到一个脚本里面，然后在这里直接调用这个脚本就可以了，调用的时候记得写出命令的完整路径） </p>
<p>在这些字段里，除了“Command”是每次都必须指定的字段以外，其它字段皆为可选字段，可视需要决定。对于不指定的字段，要用“<em>”来填补其位置。同时，cron支持类似正则表达式的书写，支持如下几个特殊符号定义：<br>“ * ” ，代表所有的取值范围内的数字；<br>” &#x2F; “， 代表”每”（“</em>&#x2F;5”，表示每5个单位）；<br>” – “， 代表从某个数字到某个数字（“1-4”，表示1-4个单位）；<br>” , “， 分开几个离散的数字； </p>
<table>
<thead>
<tr>
<th>段</th>
<th>含义</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td>第一段</td>
<td>代表分钟</td>
<td>0—59</td>
</tr>
<tr>
<td>第二段</td>
<td>代表小时</td>
<td>0—23</td>
</tr>
<tr>
<td>第三段</td>
<td>代表日期</td>
<td>1—31</td>
</tr>
<tr>
<td>第四段</td>
<td>代表月份</td>
<td>1—12</td>
</tr>
<tr>
<td>第五段</td>
<td>代表星期几(0代表星期日)</td>
<td>0—6</td>
</tr>
</tbody></table>
<p>举例如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">5 * * * * ls // 指定每小时的第5分钟执行一次ls命令 </span><br><span class="line">30 5 * * * ls // 指定每天的 5:30 执行ls命令 </span><br><span class="line">30 7 8 * * ls // 指定每月8号的7：30分执行ls命令</span><br><span class="line">50 7 * * * root run-parts/etc/cron.daily // 每天7：50以root 身份执行/etc/cron.daily目录中的所有可执行文件</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>服务器</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MC服务器搭建经验</title>
    <url>/2022/07/21/MC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%BB%8F%E9%AA%8C-mc%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="服务器需要些什么"><a href="#服务器需要些什么" class="headerlink" title="服务器需要些什么"></a>服务器需要些什么</h1><ol>
<li>运营商（腾讯，阿里）</li>
<li>开服核心（.jar文件）</li>
<li>玩mod需要选forge还是选fabric？</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Nginx静态资源服务器使用</title>
    <url>/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8-nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>看到HMCL支持从静态资源服务器直接下载整合包到客户端，这样能方便腐竹更新游戏客户端版本，终于能解决每次更新要重发整个客户端的老大难问题。</p>
<blockquote>
<p>HMCL 允许服务器管理员借助服务端自动更新整合包来实现自动分发整合包更新，这将大大方便有需要频繁更新游戏客户端 Mod、配置等信息的服务器管理员。 HMCL 需要服务器管理员额外提供一个 HTTP 服务器（只需要能提供静态文件服务，比如 Apache 和 Nginx 皆可）来提供检查整合包更新并允许 HMCL 下载更新文件。</p>
</blockquote>
<p>因此，计划在服务器上开一个静态资源路由，看到HMCL给的提示，Nginx就可以做静态资源服务器，本身我的博客也是使用Nginx逆向代理，说干就干，动手动手！</p>
<h1 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h1><p>这里很基础略过，可以看以下参考文档。</p>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/515069497">https://zhuanlan.zhihu.com/p/515069497</a></p>
</blockquote>
<h1 id="新建静态资源文件夹"><a href="#新建静态资源文件夹" class="headerlink" title="新建静态资源文件夹"></a>新建静态资源文件夹</h1><p>我为了省事直接在&#x2F;根目录下新建了一个<code>MinecraftClientStatic</code>文件夹，以后需要作为静态资源的文件都丢这里面。<br>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 到更目录</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="comment"># 新建文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> MinecraftClientStatic</span><br><span class="line"><span class="comment"># 防止nginx无法访问，配置文件夹访问权限</span></span><br><span class="line"><span class="built_in">chmod</span> 777 MinecraftClientStatic</span><br><span class="line"><span class="comment"># 进入文件夹</span></span><br><span class="line"><span class="built_in">cd</span> MinecraftClientStatic</span><br><span class="line"><span class="comment"># 新建一个测试用的文件</span></span><br><span class="line"><span class="built_in">touch</span> helloMC.html</span><br><span class="line"><span class="comment"># 给文件权限</span></span><br><span class="line"><span class="built_in">chmod</span> 777 helloMC.html</span><br><span class="line"><span class="comment"># 编辑html内容</span></span><br><span class="line">vim helloMC.html</span><br></pre></td></tr></table></figure>
<p>这里为了测试静态资源是否配置成功，需要新建一个helloMC.html的静态测试文件。可以在这个文件内随意写两行字。<br>例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- helloMC.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello static!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>也可以整点炫的(可选)：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- helloMC.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>MC客户端静态资源<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">			<span class="keyword">@font-face</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">font-family</span>:<span class="string">&#x27;calligraffittiregular&#x27;</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">src</span>:<span class="built_in">url</span>(<span class="string">&quot;fonts/calligraffitti-regular-webfont.ttf&quot;</span>)</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			* &#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			<span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			<span class="selector-id">#content</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">top</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">margin-left</span>: -<span class="number">121px</span>;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">font-family</span>: calligraffittiregular</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-size:  40px;font-weight: 1000;&quot;</span>&gt;</span>MinecraftClientStatic<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;hacker&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;height:100%;&quot;</span>&gt;</span>请使用最新的浏览器<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> color_array = [<span class="string">&#x27;#00FF00&#x27;</span>,<span class="string">&#x27;#00FF99&#x27;</span>,<span class="string">&#x27;#00FFCC&#x27;</span>,<span class="string">&#x27;#00FFFF&#x27;</span>,<span class="string">&#x27;#00BBFF&#x27;</span>,<span class="string">&#x27;#0066FF&#x27;</span>,<span class="string">&#x27;#0000FF&#x27;</span>,<span class="string">&#x27;#5500FF&#x27;</span>,<span class="string">&#x27;#7700FF&#x27;</span>,<span class="string">&#x27;#9900FF&#x27;</span>,<span class="string">&#x27;#CC00FF&#x27;</span>,<span class="string">&#x27;#FF00FF&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> i=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> color;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">function</span> <span class="title function_">changColor</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			color = color_array[i];</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">log</span>(i++);</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">log</span>(color);</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">if</span>(i&gt;color_array.<span class="property">length</span>-<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">				i=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">			<span class="built_in">setTimeout</span>(changColor, <span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> hacker = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;hacker&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> width = hacker.<span class="property">width</span> = screen.<span class="property">width</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> height = hacker.<span class="property">height</span> = screen.<span class="property">height</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> ctx = hacker.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> num = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(width / <span class="number">12</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> y = <span class="title class_">Array</span>(num).<span class="title function_">join</span>(<span class="number">0</span>).<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> draw = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			ctx.<span class="property">fillStyle</span> = <span class="string">&#x27;rgba(0,0,0,.05)&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">			ctx.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, width, height);</span></span><br><span class="line"><span class="language-javascript">			ctx.<span class="property">fillStyle</span> = color;</span></span><br><span class="line"><span class="language-javascript">			ctx.<span class="property">font</span> = <span class="string">&#x27;12px Microsoft YaHei&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">			y.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">y1,i</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">var</span> text = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">65</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">62</span>);</span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">var</span> x = i * <span class="number">12</span>;  </span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">var</span> y1 = y[i];</span></span><br><span class="line"><span class="language-javascript">				ctx.<span class="title function_">fillText</span>(text, x, y1);</span></span><br><span class="line"><span class="language-javascript">				y[i] = ( y1 &gt; <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span> * height ? <span class="number">0</span> : <span class="built_in">parseInt</span>(y[i]) + <span class="number">12</span> );</span></span><br><span class="line"><span class="language-javascript">			&#125;)</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Run</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">function</span> <span class="title function_">Run</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="title function_">changColor</span>();</span></span><br><span class="line"><span class="language-javascript">			<span class="title class_">Game</span>_Interval = <span class="built_in">setInterval</span>(draw, <span class="number">50</span>);</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="分配次级域名-可选"><a href="#分配次级域名-可选" class="headerlink" title="分配次级域名(可选)"></a>分配次级域名(可选)</h1><blockquote>
<p>如果你没有域名，那么这里可以跳过，后面需要域名的地方直接使用服务器ip地址</p>
</blockquote>
<p>假设我们的域名是buggzd.com<br>在域名解析新建一个记录，取名为minecraft，然后加上服务器ip。<br><img src="https://s2.loli.net/2023/01/11/8V1thbsZWgd6qxp.png" alt="image.png"><br>这是我们就有了一个子域名minecraft.buggzd.com<br>添加完成后可以使用cmd去ping一下这个域名(minecraft.buggzd.com)DNS是否已经记录,如果返回了正确的ip地址就是已经分配成功了。</p>
<h1 id="配置nginx-conf"><a href="#配置nginx-conf" class="headerlink" title="配置nginx.conf"></a>配置nginx.conf</h1><p>因为好久没动nginx配置了，甚至都忘了nginx的配置文件放哪里去了，还好可以用指令查一下。<br>查找nginx配置文件目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nginx -t</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span></span><br></pre></td></tr></table></figure>
<p>这里<code>/etc/nginx/nginx.conf</code>就是Nginx的配置文件<br>然后cd到nginx配置目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx</span><br><span class="line"><span class="comment"># 编写配置文件</span></span><br><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure>
<p>因为之前配置过博客逆向代理，<code>nginx.conf</code>会带有之前的配置记录，不能把他们搞乱。所以理清层级关系很重要！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这是nginx.conf的层级目录</span><br><span class="line"># 每个nginx.conf配置文件都只有一个http块，所以如果之前配置过nginx</span><br><span class="line"># 就只需要粘贴server块里的内容，把server块放到http块内部。</span><br><span class="line"> http &#123;    </span><br><span class="line">    server &#123; ... &#125;</span><br><span class="line">    server &#123; ... &#125;</span><br><span class="line">    server &#123; ... &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>需要填写的配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;    </span><br><span class="line">   server &#123;       </span><br><span class="line">      # 需要监听的端口号，可以不动</span><br><span class="line">      listen 80;       </span><br><span class="line">      # 这里需要把localhost改为上面分配好的域名</span><br><span class="line">      server_name  minecraft.buggzd.com;      </span><br><span class="line">      location  /&#123;            </span><br><span class="line">      # root后面是对应的静态资源文件夹的位置</span><br><span class="line">           root /MinecraftClientStatic;     </span><br><span class="line">      # 这里是默认加载的首页html，这里放的是刚刚新建的测试文件</span><br><span class="line">      # 它是从root目录文件夹内开始查找的，所以不要写/MinecraftClientStatic/helloMC.html</span><br><span class="line">           index helloMC.html;    </span><br><span class="line">      &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<blockquote>
<p>Q:上面的配置干了什么事？<br>A:比如你访问<a href="http://minecraft.buggzd.com/test.png%E6%97%B6%EF%BC%8Cnginx%E4%BC%9A%E8%AE%BF%E9%97%AE%E6%9C%AC%E5%9C%B0%E7%9A%84/MinecraftClientStatic/test.png">http://minecraft.buggzd.com/test.png时，nginx会访问本地的/MinecraftClientStatic/test.png</a> 然后返回。</p>
</blockquote>
<p>当正确编写完<code>nginx.conf</code> ，需要让nginx重新加载一下配置文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>
<p>然后直接访问刚刚配置的域名(minecraft.buggzd.com)，默认会跳转到编写好的<code>helloMC.html</code>,你也可以在域名后加&#x2F;helloMC.html  (minecraft.buggzd.com&#x2F;helloMC.html)<br><img src="https://s2.loli.net/2023/01/11/oAx4X1aDE3J6sup.png" alt="image.png"><br>当页面出现<code>helloMC.html</code>的文本内容时，说明已经配置成功了！<br>放张图片到静态资源文件夹试试。<br><img src="https://s2.loli.net/2023/01/11/UCdr8tgq2EVDnP7.png" alt="image.png"><br>访问成功，没问题！</p>
<blockquote>
<p>参考：<br>nginx配置文件结构：<a href="https://blog.csdn.net/pibuliao8626/article/details/110449349">https://blog.csdn.net/pibuliao8626/article/details/110449349</a><br>使用nginx如何部署静态资源：<a href="https://www.muzhuangnet.com/show/86630.html">https://www.muzhuangnet.com/show/86630.html</a><br>Nginx 作为静态资源服务器：<a href="https://zhuanlan.zhihu.com/p/514547633">https://zhuanlan.zhihu.com/p/514547633</a><br>nginx配置静态静态资源服务器：<a href="https://cloud.tencent.com/developer/article/2028983?from=15425">https://cloud.tencent.com/developer/article/2028983?from=15425</a></p>
</blockquote>
]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>实用类</tag>
        <tag>mc</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown学习1-基础用法</title>
    <url>/2022/04/24/Markdown%E5%AD%A6%E4%B9%A01-%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95-markdown%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>首先转义字符是\</p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>在文字下使用–或者&#x3D;&#x3D;设置标题，&#x3D;&#x3D;是一级标题，–为二级标题</p>
<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><p>也可以使用#设置标题，每加一个#标题级别+1，#&lt;空格&gt;标题，一共1-6级</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><p>Markdown的段落换行使用两个以上的空格加上回车，也可以在段落后使用一个空行重新开始新段落<br>这里是第一段  </p>
<p>这里是第二段   </p>
<h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p>有以下字体表达,一个*&#x2F;_是斜体，两个*&#x2F;_是粗体，三个*&#x2F;_是粗斜体<br>*斜体*  <em>斜体</em><br>_斜体_  <em>斜体</em><br>**粗体**  <strong>粗体</strong><br>__粗体__  <strong>粗体</strong><br>___粗斜体___ <em><strong>粗斜体</strong></em><br>***粗斜体*** <em><strong>粗斜体</strong></em><br>在halo中还可以用两个&#x3D;荧光笔标记文本<br>=&#x3D;荧光笔标记=&#x3D; &#x3D;&#x3D;荧光笔标记&#x3D;&#x3D;</p>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>在一行中单独写3个或多个*会产生分割线,也可以在*间隔加空格</p>
<hr>
<hr>
<hr>
<hr>
<h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p>在文字前加两个~</p>
<p>~~例如我被删了~~<br><del>例如我被删了</del></p>
<h1 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h1><p>需要使用HTML的&lt;u&gt;<br>&lt;u&gt;这是一条带下划线的文本&lt;&#x2F;u&gt;<br><u>这是一条带下划线的文本</u></p>
<h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><p>脚注是对文本的额外说明，格式为<a href="%E6%B3%A8%E9%87%8A%E6%96%87%E6%9C%AC">^要注明的文本</a>：注释文本</p>
<p>脚注有些神奇，需要被注释的段落后加上[^要注明的文本]同时另起一行，写[^要注明的文本]:注释文本，然后要被注释的段落上就会出现注释文本。</p>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>Markdown中有无序列表和有序列表。<strong>每个列表结束需要分开一行，否则下一次计数会延续上一次</strong><br>无序列表是*或者+或者-<br>语法是*&#x2F;+/-&lt;空格&gt;&lt;文本&gt;</p>
<ul>
<li>无序列表一</li>
<li>无序列表二</li>
</ul>
<ul>
<li>无序列表一</li>
<li>无序列表二</li>
</ul>
<p>有序列表用数字.列表项来表示</p>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<p>列表的嵌套，在子列标前相对于父列表加4个空格</p>
<ol>
<li>第一项<ol>
<li>第一项子第一项</li>
<li>第一项子第二项</li>
</ol>
</li>
<li>第二项<ul>
<li>第二项子第一项<ul>
<li>第二项子第一项子第一项</li>
</ul>
</li>
</ul>
</li>
</ol>
<p>在halo中还可以使用- [x],和- [ ]作为任务列表,同时这个也可以嵌套<br>  - [x] 学习</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 学习</li>
</ul>
<p> - [ ] 打游戏</p>
<ul>
<li><input disabled="" type="checkbox"> 打游戏</li>
</ul>
<h1 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h1><p>在段落的开头使用&gt;可以标记为引用区块，多个&gt;为分级和标题同理</p>
<blockquote>
<p>这里在引用</p>
<blockquote>
<p>这里是二级引用</p>
<blockquote>
<p>这里是三级</p>
</blockquote>
</blockquote>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>代码可以使用`把代码包裹起来<br>例如`print()`<br><code>print()</code><br>代码块使用4个空格或者一个tab，<strong>注意代码块前后结尾都要空一行</strong></p>
<pre><code>int a=0;
return a;
</code></pre>
<p>也可以使用三个`把代码包围并且指定语言<br>```C++<br>代码内容<br>```</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(a&lt;<span class="number">10</span>)&#123;</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;a;</span><br></pre></td></tr></table></figure>

<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>语法为[链接名称](链接地址)或者直接&lt;链接地址&gt;<br><a href="https://www.dongjunto.xyz/">这里我网站的连接</a><br>高级的写法可以在文末赋值，[链接名称][使用的变量]<br>然后文末[使用的变量]：&lt;链接&gt;<br><a href="http://www.google.com/">这是Google</a></p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>![alt 属性文本](图片地址 “可选标题”)<br>开头一个感叹号 !<br>接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。<br><img src="/upload/2022/04/97361500_p0.jpg" alt="pic 图片示例"><br>在halo中可以直接复制Markdown格式文本。<br>也可以想网址那样赋予动态的地址[图片][图片变量]</p>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。<br>格式如下<br>|  表头   | 表头  |<br>|  —-  | —-  |<br>| 单元格  | 单元格 |<br>| 单元格  | 单元格 |</p>
<table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody><tr>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody></table>
<p>可以设置表格的对齐格式<br>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。</p>
<p>| 左对齐 | 右对齐 | 居中对齐 |<br>| :—–| —-: | :—-: |<br>| 单元格 | 单元格 | 单元格 |<br>| 单元格 | 单元格 | 单元格 |</p>
<table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
<tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
</tbody></table>
<hr>
<h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>Markdown还有一些HTML的高级用法，以后有空再看。</p>
<p>本文大部分都是在<a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟Markdown</a>学习</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>Markdown学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx静态资源服务器使用</title>
    <url>/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>看到HMCL支持从静态资源服务器直接下载整合包到客户端，这样能方便腐竹更新游戏客户端版本，终于能解决每次更新要重发整个客户端的老大难问题。</p>
<blockquote>
<p>HMCL 允许服务器管理员借助服务端自动更新整合包来实现自动分发整合包更新，这将大大方便有需要频繁更新游戏客户端 Mod、配置等信息的服务器管理员。 HMCL 需要服务器管理员额外提供一个 HTTP 服务器（只需要能提供静态文件服务，比如 Apache 和 Nginx 皆可）来提供检查整合包更新并允许 HMCL 下载更新文件。</p>
</blockquote>
<p>因此，计划在服务器上开一个静态资源路由，看到HMCL给的提示，Nginx就可以做静态资源服务器，本身我的博客也是使用Nginx逆向代理，说干就干，动手动手！</p>
<h1 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h1><p>这里很基础略过，可以看以下参考文档。</p>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/515069497">https://zhuanlan.zhihu.com/p/515069497</a></p>
</blockquote>
<h1 id="新建静态资源文件夹"><a href="#新建静态资源文件夹" class="headerlink" title="新建静态资源文件夹"></a>新建静态资源文件夹</h1><p>我为了省事直接在&#x2F;根目录下新建了一个<code>MinecraftClientStatic</code>文件夹，以后需要作为静态资源的文件都丢这里面。<br>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 到更目录</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="comment"># 新建文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> MinecraftClientStatic</span><br><span class="line"><span class="comment"># 防止nginx无法访问，配置文件夹访问权限</span></span><br><span class="line"><span class="built_in">chmod</span> 777 MinecraftClientStatic</span><br><span class="line"><span class="comment"># 进入文件夹</span></span><br><span class="line"><span class="built_in">cd</span> MinecraftClientStatic</span><br><span class="line"><span class="comment"># 新建一个测试用的文件</span></span><br><span class="line"><span class="built_in">touch</span> helloMC.html</span><br><span class="line"><span class="comment"># 给文件权限</span></span><br><span class="line"><span class="built_in">chmod</span> 777 helloMC.html</span><br><span class="line"><span class="comment"># 编辑html内容</span></span><br><span class="line">vim helloMC.html</span><br></pre></td></tr></table></figure>
<p>这里为了测试静态资源是否配置成功，需要新建一个helloMC.html的静态测试文件。可以在这个文件内随意写两行字。<br>例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- helloMC.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello static!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>也可以整点炫的(可选)：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- helloMC.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>MC客户端静态资源<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">			<span class="keyword">@font-face</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">font-family</span>:<span class="string">&#x27;calligraffittiregular&#x27;</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">src</span>:<span class="built_in">url</span>(<span class="string">&quot;fonts/calligraffitti-regular-webfont.ttf&quot;</span>)</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			* &#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			<span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			<span class="selector-id">#content</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">top</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">margin-left</span>: -<span class="number">121px</span>;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">font-family</span>: calligraffittiregular</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-size:  40px;font-weight: 1000;&quot;</span>&gt;</span>MinecraftClientStatic<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;hacker&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;height:100%;&quot;</span>&gt;</span>请使用最新的浏览器<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> color_array = [<span class="string">&#x27;#00FF00&#x27;</span>,<span class="string">&#x27;#00FF99&#x27;</span>,<span class="string">&#x27;#00FFCC&#x27;</span>,<span class="string">&#x27;#00FFFF&#x27;</span>,<span class="string">&#x27;#00BBFF&#x27;</span>,<span class="string">&#x27;#0066FF&#x27;</span>,<span class="string">&#x27;#0000FF&#x27;</span>,<span class="string">&#x27;#5500FF&#x27;</span>,<span class="string">&#x27;#7700FF&#x27;</span>,<span class="string">&#x27;#9900FF&#x27;</span>,<span class="string">&#x27;#CC00FF&#x27;</span>,<span class="string">&#x27;#FF00FF&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> i=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> color;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">function</span> <span class="title function_">changColor</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			color = color_array[i];</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">log</span>(i++);</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">log</span>(color);</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">if</span>(i&gt;color_array.<span class="property">length</span>-<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">				i=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">			<span class="built_in">setTimeout</span>(changColor, <span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> hacker = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;hacker&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> width = hacker.<span class="property">width</span> = screen.<span class="property">width</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> height = hacker.<span class="property">height</span> = screen.<span class="property">height</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> ctx = hacker.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> num = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(width / <span class="number">12</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> y = <span class="title class_">Array</span>(num).<span class="title function_">join</span>(<span class="number">0</span>).<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> draw = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			ctx.<span class="property">fillStyle</span> = <span class="string">&#x27;rgba(0,0,0,.05)&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">			ctx.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, width, height);</span></span><br><span class="line"><span class="language-javascript">			ctx.<span class="property">fillStyle</span> = color;</span></span><br><span class="line"><span class="language-javascript">			ctx.<span class="property">font</span> = <span class="string">&#x27;12px Microsoft YaHei&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">			y.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">y1,i</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">var</span> text = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">65</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">62</span>);</span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">var</span> x = i * <span class="number">12</span>;  </span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">var</span> y1 = y[i];</span></span><br><span class="line"><span class="language-javascript">				ctx.<span class="title function_">fillText</span>(text, x, y1);</span></span><br><span class="line"><span class="language-javascript">				y[i] = ( y1 &gt; <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span> * height ? <span class="number">0</span> : <span class="built_in">parseInt</span>(y[i]) + <span class="number">12</span> );</span></span><br><span class="line"><span class="language-javascript">			&#125;)</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Run</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">function</span> <span class="title function_">Run</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="title function_">changColor</span>();</span></span><br><span class="line"><span class="language-javascript">			<span class="title class_">Game</span>_Interval = <span class="built_in">setInterval</span>(draw, <span class="number">50</span>);</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="分配次级域名-可选"><a href="#分配次级域名-可选" class="headerlink" title="分配次级域名(可选)"></a>分配次级域名(可选)</h1><blockquote>
<p>如果你没有域名，那么这里可以跳过，后面需要域名的地方直接使用服务器ip地址</p>
</blockquote>
<p>假设我们的域名是buggzd.com<br>在域名解析新建一个记录，取名为minecraft，然后加上服务器ip。<br><img src="https://s2.loli.net/2023/01/11/8V1thbsZWgd6qxp.png" alt="image.png"><br>这是我们就有了一个子域名minecraft.buggzd.com<br>添加完成后可以使用cmd去ping一下这个域名(minecraft.buggzd.com)DNS是否已经记录,如果返回了正确的ip地址就是已经分配成功了。</p>
<h1 id="配置nginx-conf"><a href="#配置nginx-conf" class="headerlink" title="配置nginx.conf"></a>配置nginx.conf</h1><p>因为好久没动nginx配置了，甚至都忘了nginx的配置文件放哪里去了，还好可以用指令查一下。<br>查找nginx配置文件目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nginx -t</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span></span><br></pre></td></tr></table></figure>
<p>这里<code>/etc/nginx/nginx.conf</code>就是Nginx的配置文件<br>然后cd到nginx配置目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx</span><br><span class="line"><span class="comment"># 编写配置文件</span></span><br><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure>
<p>因为之前配置过博客逆向代理，<code>nginx.conf</code>会带有之前的配置记录，不能把他们搞乱。所以理清层级关系很重要！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这是nginx.conf的层级目录</span><br><span class="line"># 每个nginx.conf配置文件都只有一个http块，所以如果之前配置过nginx</span><br><span class="line"># 就只需要粘贴server块里的内容，把server块放到http块内部。</span><br><span class="line"> http &#123;    </span><br><span class="line">    server &#123; ... &#125;</span><br><span class="line">    server &#123; ... &#125;</span><br><span class="line">    server &#123; ... &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>需要填写的配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;    </span><br><span class="line">   server &#123;       </span><br><span class="line">      # 需要监听的端口号，可以不动</span><br><span class="line">      listen 80;       </span><br><span class="line">      # 这里需要把localhost改为上面分配好的域名</span><br><span class="line">      server_name  minecraft.buggzd.com;      </span><br><span class="line">      location  /&#123;            </span><br><span class="line">      # root后面是对应的静态资源文件夹的位置</span><br><span class="line">           root /MinecraftClientStatic;     </span><br><span class="line">      # 这里是默认加载的首页html，这里放的是刚刚新建的测试文件</span><br><span class="line">      # 它是从root目录文件夹内开始查找的，所以不要写/MinecraftClientStatic/helloMC.html</span><br><span class="line">           index helloMC.html;    </span><br><span class="line">      &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<blockquote>
<p>Q:上面的配置干了什么事？<br>A:比如你访问<a href="http://minecraft.buggzd.com/test.png%E6%97%B6%EF%BC%8Cnginx%E4%BC%9A%E8%AE%BF%E9%97%AE%E6%9C%AC%E5%9C%B0%E7%9A%84/MinecraftClientStatic/test.png">http://minecraft.buggzd.com/test.png时，nginx会访问本地的/MinecraftClientStatic/test.png</a> 然后返回。</p>
</blockquote>
<p>当正确编写完<code>nginx.conf</code> ，需要让nginx重新加载一下配置文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>
<p>然后直接访问刚刚配置的域名(minecraft.buggzd.com)，默认会跳转到编写好的<code>helloMC.html</code>,你也可以在域名后加&#x2F;helloMC.html  (minecraft.buggzd.com&#x2F;helloMC.html)<br><img src="https://s2.loli.net/2023/01/11/oAx4X1aDE3J6sup.png" alt="image.png"><br>当页面出现<code>helloMC.html</code>的文本内容时，说明已经配置成功了！<br>放张图片到静态资源文件夹试试。<br><img src="https://s2.loli.net/2023/01/11/UCdr8tgq2EVDnP7.png" alt="image.png"><br>访问成功，没问题！</p>
<blockquote>
<p>参考：<br>nginx配置文件结构：<a href="https://blog.csdn.net/pibuliao8626/article/details/110449349">https://blog.csdn.net/pibuliao8626/article/details/110449349</a><br>使用nginx如何部署静态资源：<a href="https://www.muzhuangnet.com/show/86630.html">https://www.muzhuangnet.com/show/86630.html</a><br>Nginx 作为静态资源服务器：<a href="https://zhuanlan.zhihu.com/p/514547633">https://zhuanlan.zhihu.com/p/514547633</a><br>nginx配置静态静态资源服务器：<a href="https://cloud.tencent.com/developer/article/2028983?from=15425">https://cloud.tencent.com/developer/article/2028983?from=15425</a></p>
</blockquote>
]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>实用类</tag>
        <tag>mc</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerDesigner上手</title>
    <url>/2023/01/10/PowerDesigner%E4%B8%8A%E6%89%8B/</url>
    <content><![CDATA[<blockquote>
<p>chatGPT:<br><br>PowerDesigner是一款用于建模和设计数据库、数据仓库和业务流程的软件。它可以帮助企业分析、设计和沟通数据和流程模型，并生成文档和数据库脚本。PowerDesigner提供了一系列的工具和功能，可以帮助你创建和管理数据模型，包括关系数据模型、结构化查询语言（SQL）数据定义、XML模式、业务流程模型和系统架构图。它还提供了一些额外的功能，例如数据字典生成、数据库转换和数据库同步功能。</p>
</blockquote>
<h1 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h1><p>有概念数据模型(ConceptualDataModel)和物理数据模型(PhysicalDataModel)之分。</p>
<h2 id="概念数据模型-ConceptualDataModel"><a href="#概念数据模型-ConceptualDataModel" class="headerlink" title="概念数据模型(ConceptualDataModel)"></a>概念数据模型(ConceptualDataModel)</h2><p>概念数据模型是指普通设计时的数据模型，是抽象层面上的数据模型，即ER图这类的抽象表单和数据类型。</p>
<p>在画概念数据模型时，和使用visio画图类似。</p>
<h2 id="物理数据模型-PhysicalDataModel"><a href="#物理数据模型-PhysicalDataModel" class="headerlink" title="物理数据模型(PhysicalDataModel)"></a>物理数据模型(PhysicalDataModel)</h2><p>实际的数据库模型，使用的数据库可以实现的数据类型，关系方式，关联等。</p>
<p>需要使用实际的数据库知识实现对应关系。</p>
<h1 id="两种数据模型的互相转化"><a href="#两种数据模型的互相转化" class="headerlink" title="两种数据模型的互相转化"></a>两种数据模型的互相转化</h1><p>在tool工具栏中有两种图像相互转换的方法。</p>
<h1 id="生成对应的SQL语句"><a href="#生成对应的SQL语句" class="headerlink" title="生成对应的SQL语句"></a>生成对应的SQL语句</h1><p>需要先生成物理模型，然后在数据库-&gt;generate database或者使用快捷键<code>ctrl</code>+<code>c</code></p>
<h1 id="逆向工程SQL生成模型"><a href="#逆向工程SQL生成模型" class="headerlink" title="逆向工程SQL生成模型"></a>逆向工程SQL生成模型</h1><p>文件-&gt;ReverseEngineer<br><br>但是这个在很多数据库连接工具里也可以画图，所以用处不大。</p>
<blockquote>
<p>参考：<br><br>PowerDesigner入门使用教程：<a href="https://blog.csdn.net/u010565545/article/details/105115033/">https://blog.csdn.net/u010565545/article/details/105115033/</a> <br><br>视频教程：<a href="https://www.bilibili.com/video/BV1PA411h7L3">https://www.bilibili.com/video/BV1PA411h7L3</a></p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell学习</title>
    <url>/2022/11/25/Shell%E5%AD%A6%E4%B9%A0-shell%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
  </entry>
  <entry>
    <title>SpringBoot学习001</title>
    <url>/2022/12/24/SpringBoot%E5%AD%A6%E4%B9%A0001/</url>
    <content><![CDATA[<h1 id="Spring基础"><a href="#Spring基础" class="headerlink" title="Spring基础"></a>Spring基础</h1><h1 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h1><p>@Controller和@RestController用于接受和处理HTTP请求。</p>
<p>请求页面和数据使用@Controller，如果只请求数据使用@RestController</p>
<h1 id="路由映射"><a href="#路由映射" class="headerlink" title="路由映射"></a>路由映射</h1><p>@RequestMapping进行路由映射</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 所有json格式请求都会调用test方法</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/*.json&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">()</span>&#123;<span class="keyword">return</span> <span class="string">&quot;get json&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>使用@RequestMapping获取参数<br>常规域名后用？[参数名]&#x3D;[参数值] 表示，多个参数用&amp;分隔。<br>例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//前往http://localhost:8080/hello页面并且给一个参数name=rick</span></span><br><span class="line"><span class="comment">//链接应该是http://localhost:8080/hello?name=rick</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"><span class="comment">//传入参数名必须和方法变量名一样。不填或者填错则获取到null</span></span><br><span class="line">	<span class="meta">@RequestMapping(value =&quot;/hello&quot;,method=RequestMethod.GET)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">(String name)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//如果传入参数不一样可以使用@RequestParam解释</span></span><br><span class="line"><span class="comment">//但是如果加上注解，默认意味着该参数为必填，不填参数为非法</span></span><br><span class="line"><span class="comment">//可以添加required = false设置为非必选</span></span><br><span class="line">	<span class="meta">@RequestMapping(value =&quot;/hello&quot;,method=RequestMethod.GET)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">(<span class="meta">@RequestParam(&quot;name&quot;,required = false)</span> String nickname)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="StringBoot-文件"><a href="#StringBoot-文件" class="headerlink" title="StringBoot 文件"></a>StringBoot 文件</h1><p>默认会在项目目录下生成一个static文件存放静态资源。<br>src&#x2F;main&#x2F;resources&#x2F;static<br>在这个static文件中放置图片，可以直接通过文件名访问。例如存放了一张名为test.jpg的图片。可以通过访问<a href="http://localhost:8080/test.jpg">http://localhost:8080/test.jpg</a> 访问图片。</p>
<p>可以在src&#x2F;main&#x2F;resources&#x2F;application.properties这里配置访问路径，使用spring.mvc.static-path-pattern修改路径。<br>例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// &quot;src/main/resources/application.properties&quot;</span></span><br><span class="line"><span class="comment">//默认是=/**</span></span><br><span class="line">spring.mvc.<span class="keyword">static</span>-path-pattern=/upload<span class="comment">/**</span></span><br></pre></td></tr></table></figure>
<p>也可以修改static文件夹路径，也是在src&#x2F;main&#x2F;resources&#x2F;application.properties这里，使用spring.web.resources.static-locations修改。<br>例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// &quot;src/main/resources/application.properties&quot;</span><br><span class="line">//默认是=classpath:/static/</span><br><span class="line">spring.web.resources.static-locations=classpath:/static/</span><br></pre></td></tr></table></figure>
<h1 id="接收文件："><a href="#接收文件：" class="headerlink" title="接收文件："></a>接收文件：</h1><p>src&#x2F;main&#x2F;java&#x2F;com&#x2F;example&#x2F;springbootlearning&#x2F;Controller&#x2F;fileUploadController.java</p>
<p>springboot中的文件类型使用MultipartFile</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>SpringBoot</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot学习01</title>
    <url>/2022/12/15/SpringBoot%E5%AD%A6%E4%B9%A001-springboot%E5%AD%A6%E4%B9%A001/</url>
    <content><![CDATA[<h1 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h1><p>@Controller和@RestController用于接受和处理HTTP请求。</p>
<p>请求页面和数据使用@Controller，如果只请求数据使用@RestController</p>
]]></content>
  </entry>
  <entry>
    <title>SteamDeck折腾记录-02-基本使用</title>
    <url>/2023/01/14/SteamDeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-02-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="SteamDeck的基本使用"><a href="#SteamDeck的基本使用" class="headerlink" title="SteamDeck的基本使用"></a>SteamDeck的基本使用</h1><blockquote>
<p>建议先配置网络环境再进行操作 <a href="https://www.dongjunto.xyz/archives/steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-02-%E7%BB%99steamdeck%E7%BD%91%E7%BB%9C%E5%8A%A0%E9%80%9F">给SteamDeck网络加速</a></p>
</blockquote>
<h2 id="普通游玩"><a href="#普通游玩" class="headerlink" title="普通游玩"></a>普通游玩</h2><p>如果不想折腾别的，刷完机登录后就可以开始下载游戏和游玩了。<br><del>（你买了steamdeck居然不折腾？）</del></p>
<h3 id="下载steam游戏"><a href="#下载steam游戏" class="headerlink" title="下载steam游戏"></a>下载steam游戏</h3><blockquote>
<p>知识拓展：<br>steamdeck上装的是Linux系统，但是大部分游戏都是window平台的，因此steam使用了Proton兼容层来运行这些游戏。<br>名词：<br>Proton：Proton 是允许 Windows 游戏在 Linux 上运行的兼容层，它通过使用修改过的 Wine 版本和一套高性能图形 API 实现来达到这一点。<br>支持的API有 DirectX 9&#x2F;10&#x2F;11&#x2F;12</p>
</blockquote>
<p>SteamDeck上游戏被官方分为四种兼容性类别。</p>
<blockquote>
<p>兼容性验证：<a href="https://www.steamdeck.com/zh-cn/verified">https://www.steamdeck.com/zh-cn/verified</a></p>
</blockquote>
<p><img src="https://s2.loli.net/2023/01/14/FPkEqAtGsNR8Oow.png" alt="image.png"><br>在steamdeck商店和库中浏览游戏时，会看到相应的兼容性徽章。</p>
<blockquote>
<p>其实有很多【可玩】级兼容性的游戏也可以完美运行，比如“尼尔：机械纪元”，“逆转裁判”等。</p>
</blockquote>
<p>除了必须要键鼠操作的游戏，如“文明”，“dota2”，“矮人要塞”等，其他只要是支持手柄的，都可以试试。（一些老游戏可能会画面不兼容）</p>
<h3 id="Steam家庭共享"><a href="#Steam家庭共享" class="headerlink" title="Steam家庭共享"></a>Steam家庭共享</h3><blockquote>
<p>Steam官网家庭共享： <a href="https://store.steampowered.com/promotion/familysharing">https://store.steampowered.com/promotion/familysharing</a></p>
</blockquote>
<p>既然都是steam了，当然是可以白嫖好友的共享库啦！</p>
<ol>
<li>登录好友设备</li>
<li>设置家庭共享添加设备</li>
<li>下载好友游戏</li>
</ol>
<p>基本过程和PC上添加好友家庭共享是一样的。<br><strong>但是玩共享游戏的时候需要联网，并且朋友不能在使用库，离线登录是玩不了的。</strong></p>
<h2 id="SteamOS-Desktop快捷键"><a href="#SteamOS-Desktop快捷键" class="headerlink" title="SteamOS Desktop快捷键"></a>SteamOS Desktop快捷键</h2><p>每个按键上都有标识按键名词，不清楚的按键直接看机子就行。<br>系统默认快捷键：</p>
<ul>
<li>steam+B 长按&#x3D;强制游戏关闭</li>
<li>steam+X 释放按压&#x3D;显示键盘</li>
<li>steam+L1&#x3D;切换放大器</li>
<li>steam+R1&#x3D;截图</li>
<li>steam+L2&#x3D;鼠标右键点击</li>
<li>steam+R2&#x3D;鼠标左键点击</li>
<li>steam+R2&#x3D;鼠标左键点击</li>
<li>steam+右摇杆 R3&#x3D;摇杆鼠标</li>
<li>steam+右触摸板Trackpad 移动&#x3D;作鼠标用</li>
<li>steam+右触摸板Trackpad 按压&#x3D;鼠标左键点击</li>
<li>steam+左摇杆L3 ↑↓&#x3D;调高屏幕亮度和降低屏幕亮度</li>
<li>steam+十字键 D-pad 右&#x3D;回车键</li>
<li>steam+十字键 D-pad 下&#x3D;Tab键</li>
<li>steam+十字键 D-pad 左&#x3D;Esc键</li>
</ul>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>steam</tag>
        <tag>steamdeck</tag>
        <tag>折腾</tag>
      </tags>
  </entry>
  <entry>
    <title>SteamDeck折腾记录-03-网络加速</title>
    <url>/2023/01/15/SteamDeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-03-%E7%BD%91%E7%BB%9C%E5%8A%A0%E9%80%9F/</url>
    <content><![CDATA[<h1 id="给SteamDeck网络加速"><a href="#给SteamDeck网络加速" class="headerlink" title="给SteamDeck网络加速"></a>给SteamDeck网络加速</h1><p>本篇只会涉及技术讨论，具体实现方法请自行实现。</p>
<blockquote>
<p><strong>建议小白使用加速器或者购买加速盒子。</strong></p>
</blockquote>
<h1 id="路由器解决方案"><a href="#路由器解决方案" class="headerlink" title="路由器解决方案"></a>路由器解决方案</h1><h2 id="使用UU加速"><a href="#使用UU加速" class="headerlink" title="使用UU加速"></a>使用UU加速</h2><blockquote>
<p>UU官方教程: <a href="https://uu.163.com/router/azznan.html">https://uu.163.com/router/azznan.html</a></p>
</blockquote>
<p>我的路由器是华硕RT-AC86U梅林固件。在上面可以直接安装UU加速器的插件，然后提供全局游戏加速服务。</p>
<h2 id="使用科学上网代理加速"><a href="#使用科学上网代理加速" class="headerlink" title="使用科学上网代理加速"></a>使用科学上网代理加速</h2><blockquote>
<p>科学上网插件: <a href="https://github.com/hq450/fancyss/tree/master/fancyss_hnd/fancyss">https://github.com/hq450/fancyss/tree/master/fancyss_hnd/fancyss</a></p>
</blockquote>
<p>华硕路由器也可以安装科学上网插件，然后在科学上网插件中对SteamDeck设备添加游戏代理，这将会把steamdeck的所有端口都走代理。(<em>注意流量！我下两天游戏流量用了500G</em>)</p>
<h1 id="电脑http代理"><a href="#电脑http代理" class="headerlink" title="电脑http代理"></a>电脑http代理</h1><p>如果没有支持的路由器，也可以用电脑当做http代理。</p>
<h2 id="clash代理"><a href="#clash代理" class="headerlink" title="clash代理"></a>clash代理</h2><blockquote>
<p>让steamdeck通过代理上网：<a href="https://ohmydeck.net/d/1">https://ohmydeck.net/d/1</a></p>
</blockquote>
<p>电脑上如果有cfw（clash for Windows），打开Allow Lan，然后查看电脑的ipv4地址，和clash的代理端口号Port，在steamdeck网络设置中手动设置代理输入 IP地址:端口号 。<br><img src="https://s2.loli.net/2023/01/15/qcYg4Ey5waNUxdm.png" alt="image.png"></p>
<h2 id="SSR代理"><a href="#SSR代理" class="headerlink" title="SSR代理"></a>SSR代理</h2><blockquote>
<p>SSR代理参考资料：<a href="https://ssr.tools/116">https://ssr.tools/116</a></p>
</blockquote>
<p>用SSR做代理的方法和Clash是一样的，在SSR选项设置里勾选上允许来自局域网的连接，然后设置一个端接口号，在steamdeck网络设置代理 IP地址：端口号<br><img src="https://s2.loli.net/2023/01/13/azCvLUT5BJ1rFGN.png" alt="image.png"></p>
<h1 id="安装Steam-加速"><a href="#安装Steam-加速" class="headerlink" title="安装Steam++加速"></a>安装Steam++加速</h1><blockquote>
<p>参考：<a href="https://tieba.baidu.com/p/8027669666">https://tieba.baidu.com/p/8027669666</a></p>
<p>视频：<a href="https://www.bilibili.com/video/BV1cT411F7ex">https://www.bilibili.com/video/BV1cT411F7ex</a></p>
<p>Steam++下载：<a href="https://steampp.net/">https://steampp.net/</a></p>
</blockquote>
<p>从 <a href="https://steampp.net/">https://steampp.net/</a> 下载Linux版。</p>
<p>参考文章中是使用SteamDeck的桌面上的浏览器，但是如果你连Discover商城都打不开，也可以通过U盘下载，然后拷贝到SteamDeck上。</p>
<p><strong>SteamOS在更新了3.4后，桌面链接发生了变化，如果按照参考教程的方法做是打不开的。</strong><br>一个简单的方法是这样的：</p>
<ol>
<li>复制桌面上任意一个应用</li>
<li>修改复制的应用名称</li>
<li>使用文本编辑器打开这个应用</li>
<li>修改exec&#x3D; 后面的部分，改为steam++的路径</li>
</ol>
<p>记得给信任证书：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里的路径需要注意一下前面那个是你Steam++的安装路径</span></span><br><span class="line">sudo cp /home/deck/.local/share/Steam++/SteamTools.Certificate.cer /etc/ca-certificates/trust-source/anchors</span><br><span class="line">sudo trust extract-compat</span><br></pre></td></tr></table></figure>
<p>不信任证书可能会爆错，或者已经开始加速了但是依然无法访问steam社区。</p>
<h1 id="更换flathub镜像源"><a href="#更换flathub镜像源" class="headerlink" title="更换flathub镜像源"></a>更换flathub镜像源</h1><blockquote>
<p>上交大flathub镜像：<a href="https://mirror.sjtu.edu.cn/docs/flathub">https://mirror.sjtu.edu.cn/docs/flathub</a></p>
<p>参考：<a href="https://www.bilibili.com/video/BV1ke4y1t76w">https://www.bilibili.com/video/BV1ke4y1t76w</a></p>
</blockquote>
<p>在steamOS desktop上Discover商店下载是使用的flathub，国内裸连速度很慢，可以使用上交大的flathub镜像源下载。（据说Discover商店可以裸连然后等几个小时能加载出来）<br>打开Konsole（这是steamOS的控制台）<br>指令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo flatpak remote-modify flathub --url=https://mirror.sjtu.edu.cn/flathub</span><br></pre></td></tr></table></figure>

<h1 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h1><ol>
<li><p>sudo用不了？<br>第一次使用指令的时候需要设置账号密码。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure>
<p>然后输入密码（linux不会显示密码输入）</p>
</li>
<li><p>系统文件是只读（read only）<br>初始steamOS系统文件是read only</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo steamos-readonly disable</span><br></pre></td></tr></table></figure></li>
<li><p>Steam++加速无效<br>多半是证书没有配置。</p>
</li>
<li><p>clash或者ssr的http代理无效<br>首先要确保steamdeck和电脑在同一局域网内，电脑上打开cmd然后使用ping命令，确保能够ping通steamdeck。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>steam</tag>
        <tag>steamdeck</tag>
        <tag>折腾</tag>
      </tags>
  </entry>
  <entry>
    <title>SteamDeck折腾记录-04-desktop使用</title>
    <url>/2023/01/16/SteamDeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-04-desktop%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>SteamDeck有两个交互界面，一个是自带的SteamOS游戏模式（deck模式），另一个就是桌面模式（desktop）。<br>几乎所有折腾的时间都是花在desktop上，因此我认为有必要了解一下desktop的使用。</p>
<h1 id="如何-【进入-退出】-desktop"><a href="#如何-【进入-退出】-desktop" class="headerlink" title="如何 【进入|退出】 desktop"></a>如何 【进入|退出】 desktop</h1><h2 id="进入"><a href="#进入" class="headerlink" title="进入"></a>进入</h2><p>长按电源键3s，就会弹出【进入桌面模式】。或者在 STEAM 菜单中，选择“电源”，然后选择“切换至桌面”。</p>
<p><em>注意：不要按久了，长按7s就是直接断电（和PC一样）</em></p>
<h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><p>在桌面模式中，有一个“Return to Gaming Mode”（返回游戏模式）链接。 选择该链接即可返回标准的 Steam Deck UI。也可以在系统菜单中通过“Log Off”（退出）返回。</p>
<h1 id="desktop的交互逻辑"><a href="#desktop的交互逻辑" class="headerlink" title="desktop的交互逻辑"></a>desktop的交互逻辑</h1><h2 id="使用外接键鼠（推荐）"><a href="#使用外接键鼠（推荐）" class="headerlink" title="使用外接键鼠（推荐）"></a>使用外接键鼠（推荐）</h2><p>在桌面模式下，强烈推荐外接键鼠。可以用蓝牙键鼠连接，也可以直接用type-C扩展口外接键鼠。基本交互和Windows没有多少差异。</p>
<h2 id="不使用外接键鼠"><a href="#不使用外接键鼠" class="headerlink" title="不使用外接键鼠"></a>不使用外接键鼠</h2><blockquote>
<p>更改桌面模式按键映射：<a href="https://www.bilibili.com/video/BV1Y14y1h771/">https://www.bilibili.com/video/BV1Y14y1h771/</a></p>
</blockquote>
<p>如果没有或者不想使用键鼠，其实也可以使用手柄，但是很不方便。</p>
<p>鼠标：</p>
<ul>
<li>移动：使用右侧触控板可以模拟鼠标移动。</li>
<li>左键：按下触控板或者A键或者右扳机（RB）可以模拟鼠标左键点击。</li>
<li>右键：按下左扳机键（LB）模拟鼠标右键。</li>
<li>滚轮：左触控板上下或者左右拨动（不要斜着滑，建议贴着一边滑）</li>
</ul>
<p>键盘：</p>
<blockquote>
<p>首先要确保在desktop里登录了Steam（离线登录也行），否则键盘可能呼出失败。</p>
</blockquote>
<p>按Steam键+X键 呼出虚拟键盘，或者连按两下X键。<br>虚拟键盘上有手柄的一些快捷键，照着按就行。</p>
<h1 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h1><h2 id="Konsole"><a href="#Konsole" class="headerlink" title="Konsole"></a>Konsole</h2><p>这个是桌面模式下的控制台，基本你看到的帖子说要输什么命令的，都是在这里输入。</p>
<h2 id="Discover商店（-Discover-Software-Cente）"><a href="#Discover商店（-Discover-Software-Cente）" class="headerlink" title="Discover商店（ Discover Software Cente）"></a>Discover商店（ Discover Software Cente）</h2><p>下载软件都在这，但是国内打开多半会有问题，据说第一次打开裸连等几个小时能加载出来？</p>
<h2 id="资源管理器Dolphin"><a href="#资源管理器Dolphin" class="headerlink" title="资源管理器Dolphin"></a>资源管理器Dolphin</h2><p>这个和Windows是资源管理器是一样的，但是感觉比Windows的好用不少，并且支持<a href="https://zhuanlan.zhihu.com/p/110788184">SMB服务</a>。你可以在电脑上开启SMB服务，然后通过局域网和deck传输文件。</p>
<h2 id="Kwrite"><a href="#Kwrite" class="headerlink" title="Kwrite"></a>Kwrite</h2><p>一个带GUI的文本编辑器，这是一个更人性化的文本编辑器，操作逻辑和Windows相同。</p>
<h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><blockquote>
<p>菜鸟教程Vim： <a href="https://www.runoob.com/linux/linux-vim.html">https://www.runoob.com/linux/linux-vim.html</a></p>
</blockquote>
<p>这个一般是在控制台用的文本编辑器，功能丰富（所以需要一段时间上手）具体使用方法请参考使用手册。<br>这是Vim的快捷键：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch1.gif" alt="img"></p>
<h1 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h1><h2 id="输入法添加中文"><a href="#输入法添加中文" class="headerlink" title="输入法添加中文"></a>输入法添加中文</h2><blockquote>
<p>参考： <a href="https://tieba.baidu.com/p/8132266420">https://tieba.baidu.com/p/8132266420</a></p>
</blockquote>
<p>桌面模式自带的ibus输入法。</p>
<p>右键右下角的输入法-&gt;preference-&gt;input method-&gt;add</p>
<p>搜索Chinese添加。</p>
<h2 id="桌面模式汉化"><a href="#桌面模式汉化" class="headerlink" title="桌面模式汉化"></a>桌面模式汉化</h2><blockquote>
<p>百度贴吧：<a href="https://tieba.baidu.com/p/8199932616">https://tieba.baidu.com/p/8199932616</a></p>
<p>原贴（繁体）： <a href="https://forum.gamer.com.tw/C.php?bsn=60599&snA=39235">https://forum.gamer.com.tw/C.php?bsn=60599&amp;snA=39235</a></p>
<p>汉化脚本：<a href="https://gist.github.com/david082321/42c5007b21ef11e854a9bb8fc271bbc7">https://gist.github.com/david082321/42c5007b21ef11e854a9bb8fc271bbc7</a></p>
</blockquote>
<p>其实不是很推荐中文，因为很多游戏或者应用是不支持中文路径的。</p>
<h1 id="安装应用"><a href="#安装应用" class="headerlink" title="安装应用"></a>安装应用</h1><h2 id="使用Discover商店安装"><a href="#使用Discover商店安装" class="headerlink" title="使用Discover商店安装"></a>使用Discover商店安装</h2><blockquote>
<p>参考：安装heroic和epic游戏 <a href="https://www.bilibili.com/video/BV1Xv4y1d7TH">https://www.bilibili.com/video/BV1Xv4y1d7TH</a></p>
</blockquote>
<p>如果你可以打开Discover商店，你可以直接从上面下载应用。</p>
<h2 id="使用命令安装"><a href="#使用命令安装" class="headerlink" title="使用命令安装"></a>使用命令安装</h2><blockquote>
<p>flathub官网：<a href="https://flathub.org/home">https://flathub.org/home</a><br>配置flathub镜像：<a href="https://www.dongjunto.xyz/archives/steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-02-%E7%BB%99steamdeck%E7%BD%91%E7%BB%9C%E5%8A%A0%E9%80%9F/#toc-head-8">https://www.dongjunto.xyz/archives/steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-02-%E7%BB%99steamdeck%E7%BD%91%E7%BB%9C%E5%8A%A0%E9%80%9F/#toc-head-8</a></p>
</blockquote>
<p>你可以在<a href="https://flathub.org/home">flathub官网</a>上浏览应用市场，挑选你要用的程序。</p>
<p>例如我想安装Chrome<br><img src="https://s2.loli.net/2023/01/15/XVqICLUR3r6vfBo.png" alt="image.png"><br>翻到下方Command line instructions然后复制install的。<br><img src="https://s2.loli.net/2023/01/15/eMh3Gdt5JlSTfAu.png" alt="image.png"><br>打开Konsole输入sudo+复制的命令（如果你没有sudo权限，需要先<a href="https://www.dongjunto.xyz/archives/steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-25-%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8#toc-head-0">设置密码</a>）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo flatpak install flathub com.google.Chrome</span><br></pre></td></tr></table></figure>
<p>然后输入密码，照提示输入1或者0（如果是system就是全局安装），然后y确定。<br>安装完成就可以在应用导航栏看到（和Windows一样）</p>
<h2 id="安装flathub上没有的Linux程序"><a href="#安装flathub上没有的Linux程序" class="headerlink" title="安装flathub上没有的Linux程序"></a>安装flathub上没有的Linux程序</h2><p>这部分会使用pacman安装，或者下载二进制文件，编译什么的，难度较高需要有Linux使用基础（有经验的也不用看这文章了吧）。</p>
<p><strong>使用pacman安装</strong></p>
<blockquote>
<p>pacman使用教程：<a href="https://www.jianshu.com/p/999700de4023">https://www.jianshu.com/p/999700de4023</a></p>
</blockquote>
<p>第一次使用pacman需要<a href="https://www.dongjunto.xyz/archives/steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-25-%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8#toc-head-2">初始化秘钥</a>。</p>
<p>一般流程</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以Firefox为例，如果要装别的需要替换Firefox</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看包</span></span><br><span class="line">sudo pacman -Ss firefox</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装</span></span><br><span class="line">sudo pacman -S firefox</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载</span></span><br><span class="line">sudo pacman -R firefox</span><br></pre></td></tr></table></figure>
<p><strong>直接下载可运行的二进制包</strong></p>
<blockquote>
<p>参考Steam++安装：<a href="https://www.bilibili.com/video/BV1cT411F7ex/">https://www.bilibili.com/video/BV1cT411F7ex/</a></p>
</blockquote>
<p>需要选择x86_64架构的二进制包。</p>
<h2 id="添加linux程序到游戏模式（deck）"><a href="#添加linux程序到游戏模式（deck）" class="headerlink" title="添加linux程序到游戏模式（deck）"></a>添加linux程序到游戏模式（deck）</h2><p>你可以把flathub上下的程序添加到steam中，然后在游戏模式就可以看到对应的程序。<br>右键下载的应用，直接就有一个添加到steam。</p>
<h2 id="安装Windows应用"><a href="#安装Windows应用" class="headerlink" title="安装Windows应用"></a>安装Windows应用</h2><blockquote>
<p>参考：<a href="https://www.bilibili.com/read/cv19134473">https://www.bilibili.com/read/cv19134473</a></p>
</blockquote>
<p>因为Steamdeck自带兼容层，只需要把安装好的程序（.exe）添加到steam，然后兼容性设置强制使用兼容层。对于不同的游戏可能需要使用不同的兼容层。</p>
<h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><blockquote>
<p>Steam官方：<a href="https://help.steampowered.com/zh-cn/faqs/view/671a-4453-e8d2-323c">https://help.steampowered.com/zh-cn/faqs/view/671a-4453-e8d2-323c</a></p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>steam</tag>
        <tag>steamdeck</tag>
        <tag>折腾</tag>
      </tags>
  </entry>
  <entry>
    <title>SteamDeck折腾记录</title>
    <url>/2023/01/12/SteamDeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-steamdeckguidance/</url>
    <content><![CDATA[<h1 id="换硬盘"><a href="#换硬盘" class="headerlink" title="换硬盘"></a>换硬盘</h1><blockquote>
<p>参考视频：<a href="https://www.bilibili.com/video/BV11d4y1x7CM">https://www.bilibili.com/video/BV11d4y1x7CM</a></p>
</blockquote>
<blockquote>
<p>建议：先开始下载SteamOS文件，并且烧录，因为下载和烧录需要时间。<a href="#%E5%88%B7%E7%B3%BB%E7%BB%9F">刷系统</a></p>
</blockquote>
<blockquote>
<p>需要准备的工具：<br>小螺丝刀（十字口），拆机翘片（如果你相信你的指甲也可以不用），一个2230的固态</p>
</blockquote>
<p>我本以为换硬盘是很简单的事，拆机经验丰富如我（什么联想拯救者，戴尔灵越，华硕飞行堡垒，惠普暗夜精灵，华为magicbook，我都拆过），然而这次拆steamdeck给我的体验是灾难性的。</p>
<h2 id="固态购买"><a href="#固态购买" class="headerlink" title="固态购买"></a>固态购买</h2><blockquote>
<p>参考：<a href="https://tieba.baidu.com/p/7984464794">https://tieba.baidu.com/p/7984464794</a></p>
</blockquote>
<p>首先要知道steamdeck用的固态是特殊型号的，所以挑选的时候需要选择2230的固态，其次需要知道的就是steamdeck使用的是PCIe3.0，没必要买PCIe4.0的。</p>
<p>需要注意的参数：</p>
<ol>
<li><strong>型号一定要2230</strong>，虽然网传有魔改M.2 2242的方法，但是steamdeck工程师警告会影响deck寿命。</li>
<li><strong>低功耗</strong>（网上有一些换固态然后烧了的，所以一定要低功耗散热压力低），另外就是低功耗余留出的功耗是可以被用在cpu，gpu上的。</li>
</ol>
<p>ps：因为2230是没有零售的，也就是说市面上的都是散片，基本是没有保修的。</p>
<p>我挑选的是 西数sn530 1t</p>
<h2 id="拆外壳"><a href="#拆外壳" class="headerlink" title="拆外壳"></a>拆外壳</h2><p>外壳四个角有四个长螺丝，中间有4个短螺丝这个比较好下。<br>撬开外壳，和大部分笔记本一样，需要使用一个垫片沿着边缝翘，建议从扳机旁边翘，屏幕上下边都比较好翘，握手两侧比较费力。</p>
<h2 id="拆静电屏蔽板"><a href="#拆静电屏蔽板" class="headerlink" title="拆静电屏蔽板"></a>拆静电屏蔽板</h2><p>到这里也就花了我5分钟的时间，谁知道噩梦就从这开始了。<br><strong>静电屏蔽板上有3个螺丝，注意有2个空的，那个并不是漏了而是由外壳螺丝固定，所以需要注意位置，装回去的时候要一样。</strong><br>角上两颗螺丝，还有一颗大螺丝被胶带盖住了。<br>就这三颗螺丝<br>拆了我一个小时，这螺丝紧的像是被焊丝在上面一样，好在这螺丝质量够结实，否则早被我拧滑丝了。</p>
<h2 id="拔电"><a href="#拔电" class="headerlink" title="拔电"></a>拔电</h2><p>这个电线上还带一个拉环，很好拆，拔完电源按下开机键确保没电了。</p>
<h2 id="换固态"><a href="#换固态" class="headerlink" title="换固态"></a>换固态</h2><blockquote>
<p>可以先洗个手消除一下静电</p>
</blockquote>
<p>和普通笔记本的更换方法相同，拧下螺丝，拔卡，换卡，装螺丝。</p>
<h1 id="刷系统"><a href="#刷系统" class="headerlink" title="刷系统"></a>刷系统</h1><blockquote>
<p>需要准备的工具：<br>type-c转USB扩展坞，一个USB3.0的u盘（3.0很重要，否则你刷一次机得等1小时）</p>
</blockquote>
<h2 id="下载系统镜像文件"><a href="#下载系统镜像文件" class="headerlink" title="下载系统镜像文件"></a>下载系统镜像文件</h2><blockquote>
<p>镜像恢复官方教程：<a href="https://help.steampowered.com/zh-cn/faqs/view/1b71-edf2-eb6d-2bb3">https://help.steampowered.com/zh-cn/faqs/view/1b71-edf2-eb6d-2bb3</a><br>SteamOS下载地址：<a href="https://steamdeck-images.steamos.cloud/recovery/steamdeck-recovery-4.img.bz2">https://steamdeck-images.steamos.cloud/recovery/steamdeck-recovery-4.img.bz2</a><br>系统烧录工具：<a href="https://www.balena.io/etcher/">https://www.balena.io/etcher/</a></p>
</blockquote>
<h2 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h2><p>刷系统也有坑！！！<br><strong>必须usb3.0！必须usb3.0！必须usb3.0！</strong><br>我手上的两个u盘都不是usb3.0 读写速度慢的离谱。</p>
<p>用下好的烧录工具balena把SteamOS烧录到U盘中。</p>
<h2 id="恢复镜像"><a href="#恢复镜像" class="headerlink" title="恢复镜像"></a>恢复镜像</h2><p>接上U盘。<br>长按 <kbd>音量- </kbd> + <kbd>开机键</kbd><br>刷入系统镜像。</p>
<h2 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h2><ol>
<li>插上U盘，按<kbd>音量- </kbd> +  <kbd>开机键</kbd>没反应，屏幕还是黑的，但是触控板触摸有反馈<blockquote>
<p>U盘不是USB3.0，读取速度慢需要耐心等待，</p>
</blockquote>
</li>
<li>刷完系统后开机，一直卡在Installing（正在安装），从倒数3分钟到1s然后又来一轮倒数。<blockquote>
<p>耐心，慢慢等是会完成的，我卡了2小时。</p>
</blockquote>
</li>
<li>如果你看了官方的SteamDeck恢复教程，你可能用的是Rufus utility这个系统烧录工具，系统烧录到100%但什么反应也没有。<blockquote>
<p>我的解决方法是换一个烧录工具，用balena进行烧录。</p>
</blockquote>
</li>
</ol>
<h1 id="SteamDeck的基本使用"><a href="#SteamDeck的基本使用" class="headerlink" title="SteamDeck的基本使用"></a>SteamDeck的基本使用</h1><blockquote>
<p>建议先配置网络环境再进行操作 <a href="#%E7%BB%99SteamDeck%E7%BD%91%E7%BB%9C%E5%8A%A0%E9%80%9F">给SteamDeck网络加速</a></p>
</blockquote>
<h2 id="普通游玩"><a href="#普通游玩" class="headerlink" title="普通游玩"></a>普通游玩</h2><p>如果不想折腾别的，刷完机登录后就可以开始下载游戏和游玩了，没什么好说的。<del>（你买了steamdeck居然不折腾？）</del></p>
<h2 id="SteamOS-Desktop"><a href="#SteamOS-Desktop" class="headerlink" title="SteamOS Desktop"></a>SteamOS Desktop</h2><p>进入Steam Deck游戏环境按2秒电源键就会弹出选项框，选择进入steamOS desktop。</p>
<h3 id="欢迎打开新世界的大门"><a href="#欢迎打开新世界的大门" class="headerlink" title="欢迎打开新世界的大门"></a>欢迎打开新世界的大门</h3><h1 id="给SteamDeck网络加速"><a href="#给SteamDeck网络加速" class="headerlink" title="给SteamDeck网络加速"></a>给SteamDeck网络加速</h1><h2 id="路由器解决方案"><a href="#路由器解决方案" class="headerlink" title="路由器解决方案"></a>路由器解决方案</h2><h3 id="使用UU加速"><a href="#使用UU加速" class="headerlink" title="使用UU加速"></a>使用UU加速</h3><blockquote>
<p>UU官方教程: <a href="https://uu.163.com/router/azznan.html">https://uu.163.com/router/azznan.html</a></p>
</blockquote>
<p>我的路由器是华硕RT-AC86U梅林固件。在上面可以直接安装UU加速器的插件，然后提供全局游戏加速服务。</p>
<h3 id="使用科学上网代理加速"><a href="#使用科学上网代理加速" class="headerlink" title="使用科学上网代理加速"></a>使用科学上网代理加速</h3><blockquote>
<p>科学上网插件: <a href="https://github.com/hq450/fancyss/tree/master/fancyss_hnd/fancyss">https://github.com/hq450/fancyss/tree/master/fancyss_hnd/fancyss</a></p>
</blockquote>
<p>华硕路由器也可以安装科学上网插件，然后在科学上网插件中对SteamDeck设备添加游戏代理，这将会把steamdeck的所有端口都走代理。</p>
<h2 id="电脑http代理"><a href="#电脑http代理" class="headerlink" title="电脑http代理"></a>电脑http代理</h2><p>如果没有支持的路由器，也可以用电脑当做http代理。</p>
<h3 id="clash代理"><a href="#clash代理" class="headerlink" title="clash代理"></a>clash代理</h3><blockquote>
<p>让steamdeck通过代理上网：<a href="https://ohmydeck.net/d/1">https://ohmydeck.net/d/1</a></p>
</blockquote>
<p>电脑上如果有cfw（clash for Windows），打开Allow Lan，然后查看电脑的ipv4地址，和clash的代理端口号Port，在steamdeck网络设置中手动设置代理输入 IP地址:端口号 。</p>
<h3 id="SSR代理"><a href="#SSR代理" class="headerlink" title="SSR代理"></a>SSR代理</h3><blockquote>
<p>SSR代理参考资料：<a href="https://ssr.tools/116">https://ssr.tools/116</a></p>
</blockquote>
<p>用SSR做代理的方法和Clash是一样的，在SSR选项设置里勾选上允许来自局域网的连接，然后设置一个端接口号，在steamdeck网络设置代理 IP地址：端口号<br><img src="https://s2.loli.net/2023/01/13/azCvLUT5BJ1rFGN.png" alt="image.png"></p>
<h2 id="安装Steam-加速"><a href="#安装Steam-加速" class="headerlink" title="安装Steam++加速"></a>安装Steam++加速</h2><h1 id="在steamdeck上玩mc"><a href="#在steamdeck上玩mc" class="headerlink" title="在steamdeck上玩mc"></a>在steamdeck上玩mc</h1><h2 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h2><p>首先需要进入开发者模式，设置-&gt;开发者<br>或者<code>sudo steamos-readonly disable</code></p>
<h1 id="各种参考文献"><a href="#各种参考文献" class="headerlink" title="各种参考文献"></a>各种参考文献</h1><blockquote>
<ul>
<li>steamdeck固态避坑指南：<a href="https://tieba.baidu.com/p/7984464794">https://tieba.baidu.com/p/7984464794</a></li>
<li>steamdeck 奇怪的教程 <a href="https://www.cx03.space/2022/08/21/steamdeck-kde%E4%B8%8D%E8%B4%9F%E8%B4%A3%E4%BB%BB%E6%95%99%E7%A8%8B/">https://www.cx03.space/2022/08/21/steamdeck-kde%E4%B8%8D%E8%B4%9F%E8%B4%A3%E4%BB%BB%E6%95%99%E7%A8%8B/</a></li>
<li>SteamDeck 不完全上手指南攻略 <a href="https://nga.178.com/read.php?tid=34963944">https://nga.178.com/read.php?tid=34963944</a></li>
<li></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>steam</tag>
        <tag>steamdeck</tag>
        <tag>折腾</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity奇异博士传送门笔记</title>
    <url>/2022/05/13/Unity%E5%A5%87%E5%BC%82%E5%8D%9A%E5%A3%AB%E4%BC%A0%E9%80%81%E9%97%A8%E7%AC%94%E8%AE%B0-unity-qi-yi-bo-shi-chuan-song-men-bi-ji/</url>
    <content><![CDATA[<h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><div style="position: relative; padding: 30% 45%;">
<iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=854059451&bvid=BV1aL4y1F78v&cid=718712369&page=1"scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>

<p>项目开源地址：<a href="https://github.com/buggzd/UnityDr.StrangePortal">https://github.com/buggzd/UnityDr.StrangePortal</a></p>
<h1 id="一些基础约定"><a href="#一些基础约定" class="headerlink" title="一些基础约定"></a>一些基础约定</h1><p>首先玩家所在的空间叫做<strong>A空间</strong>，传送门要传送去的空间叫做<strong>B空间</strong>，同时A空间下的相机（主相机）叫<strong>camA</strong>，A空间下的传送门叫<strong>portalA</strong>，B空间同理。</p>
<h1 id="实现传送门内部画面"><a href="#实现传送门内部画面" class="headerlink" title="实现传送门内部画面"></a>实现传送门内部画面</h1><p>基本思路就是使用一个RT相机（该相机的所有参数应该和A相机相同），RT相机放在B空间，叫该相机camB，对于两个空间都存在一个一模一样的传送门，我们只需要让camB相对于portalB的运动和相机A相对于portalB的运动同步，那么camB得到的rendertexture上传送门的位置和A是一模一样的，我们只需要把RT图（rendertexture）上传送门内的图像贴到portalA上，就可以得到透过传送门看到传送去的场景。</p>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/upload/2022/05/image-1652409758182.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">两相机视图</div>
</center>

<h2 id="1-实现相机同步"><a href="#1-实现相机同步" class="headerlink" title="1. 实现相机同步"></a>1. 实现相机同步</h2><p>这里是一个经典的相对运动问题，和渲染管线里的MV矩阵变化过程很类似，具体的可以去看<a href="https://www.bilibili.com/video/BV1X7411F744">games101</a>。把这个脚本挂到camB上，再把camA，portalA，portalB挂上运行游戏就可以看到两个相机可以同步旋转和移动了。</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PortalCam</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="comment">//camA</span></span><br><span class="line">    <span class="keyword">public</span> Transform PlayerCamera;</span><br><span class="line">    <span class="comment">//portalA</span></span><br><span class="line">    <span class="keyword">public</span> Transform Portal;</span><br><span class="line">    <span class="comment">//portalB</span></span><br><span class="line">    <span class="keyword">public</span> Transform OtherPortal;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//相对偏移</span></span><br><span class="line">        Vector3 OffsetFromPortal=PlayerCamera.position - OtherPortal.position;</span><br><span class="line">        </span><br><span class="line">       </span><br><span class="line">        <span class="comment">//获取两个传送门之间的角度差值</span></span><br><span class="line">        <span class="comment">//同步转动</span></span><br><span class="line">        <span class="built_in">float</span> angularDifference = -Quaternion.Angle( OtherPortal.rotation, Portal.rotation);</span><br><span class="line">        Quaternion portalRotationDifference = Quaternion.AngleAxis(angularDifference, Vector3.up);</span><br><span class="line">        Vector3 newCamerDirection= portalRotationDifference * PlayerCamera.forward;</span><br><span class="line">        transform.rotation = Quaternion.LookRotation(newCamerDirection,Vector3.up);</span><br><span class="line">        <span class="comment">//先旋转后平移</span></span><br><span class="line">        Vector3 positionOffset = Quaternion.Euler(<span class="number">0f</span>, angularDifference, <span class="number">0f</span>) * OffsetFromPortal;</span><br><span class="line">        transform.position = positionOffset + Portal.position;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="2-实现传送门贴图"><a href="#2-实现传送门贴图" class="headerlink" title="2. 实现传送门贴图"></a>2. 实现传送门贴图</h2><p>这里用到的是一个很简单的屏幕空间UV采样RT贴图。开头说明了两个相机看到的画面，传送门位置相同，所以就可以直接使用camA的屏幕空间来采样camB的rendertexture。<br>需要注意的是如果希望做后处理，用hdr，那么camB的rendertexture需要使用支持hdr的格式，传统的3通道8位肯定是不能记录hdr信息的，可以改成16位。</p>
<h3 id="传送门屏幕空间UVshader"><a href="#传送门屏幕空间UVshader" class="headerlink" title="传送门屏幕空间UVshader"></a>传送门屏幕空间UVshader</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Shader <span class="string">&quot;Unlit/ScreenUv&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">        _MainTex (<span class="string">&quot;Texture&quot;</span>, <span class="number">2</span>D) = <span class="string">&quot;white&quot;</span> &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">        Tags &#123; <span class="string">&quot;RenderType&quot;</span>=<span class="string">&quot;Opaque&quot;</span> &#125;</span><br><span class="line"> </span><br><span class="line">        Pass</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            CGPROGRAM</span><br><span class="line">            <span class="meta">#<span class="keyword">pragma</span> vertex vert</span></span><br><span class="line">            <span class="meta">#<span class="keyword">pragma</span> fragment frag</span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="keyword">include</span> <span class="string">&quot;UnityCG.cginc&quot;</span></span></span><br><span class="line">          </span><br><span class="line"></span><br><span class="line">            <span class="keyword">struct</span> appdata</span><br><span class="line">            &#123;</span><br><span class="line">                float4 vertex : POSITION;</span><br><span class="line">                float2 uv : TEXCOORD0;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">v2f</span></span></span><br><span class="line"><span class="class">            &#123;</span></span><br><span class="line"></span><br><span class="line">                float4 screen_pos:TEXCOORD1;</span><br><span class="line">                float4 vertex : SV_POSITION;</span><br><span class="line">                </span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            sampler2D _MainTex;</span><br><span class="line">            float4 _MainTex_ST;</span><br><span class="line"></span><br><span class="line">            v2f <span class="title function_">vert</span> <span class="params">(appdata v)</span></span><br><span class="line">            &#123;</span><br><span class="line">                v2f o;</span><br><span class="line">                o.vertex = UnityObjectToClipPos(v.vertex);</span><br><span class="line">                o.screen_pos=o.vertex;</span><br><span class="line">                <span class="comment">//平台兼容</span></span><br><span class="line">                o.screen_pos.y=o.screen_pos.y*_ProjectionParams.x;</span><br><span class="line">                <span class="keyword">return</span> o;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fixed4 <span class="title function_">frag</span> <span class="params">(v2f i)</span> : SV_Target</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// sample the texture</span></span><br><span class="line">                float2 uv=i.screen_pos.xy/i.screen_pos.w;</span><br><span class="line">                uv=(uv+<span class="number">1</span>)*<span class="number">0.5</span>;</span><br><span class="line">                fixed4 col = tex2D(_MainTex, uv);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">return</span> col;</span><br><span class="line">            &#125;</span><br><span class="line">            ENDCG</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="使用脚本给shader赋值"><a href="#使用脚本给shader赋值" class="headerlink" title="使用脚本给shader赋值"></a>使用脚本给shader赋值</h3><p>这个随便写了，当然你也可以直接创建一个rt图然后拖到materia上。</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SetPortalTex</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//camB</span></span><br><span class="line">    <span class="keyword">public</span> Camera cam;</span><br><span class="line">    <span class="comment">//portalA material</span></span><br><span class="line">    <span class="keyword">public</span> Material PortalMat;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(cam.targetTexture != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cam.targetTexture.Release();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//支持hdr</span></span><br><span class="line">        cam.targetTexture = <span class="keyword">new</span> RenderTexture(Screen.width, Screen.height,<span class="number">24</span>, RenderTextureFormat.RGB111110Float);</span><br><span class="line">        </span><br><span class="line">        PortalMat.mainTexture = cam.targetTexture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="实现传送门粒子特效"><a href="#实现传送门粒子特效" class="headerlink" title="实现传送门粒子特效"></a>实现传送门粒子特效</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/upload/2022/05/image-1653572173725.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">传送门特效</div>
</center>

<p>传送门的粒子特效有两种实现方式，一种是使用unity自带的粒子，另一种是使用VFX。这两种方法各有各的好处，使用自带粒子是可以做墙壁碰撞的，使用VFX则需要在VFX里设置碰撞箱。使用VFX得到的效果很不错，而且很简单易上手，但是需要用URP管线。</p>
<h2 id="方法一-Unity自带粒子"><a href="#方法一-Unity自带粒子" class="headerlink" title="方法一 Unity自带粒子"></a>方法一 Unity自带粒子</h2><p>这里只提供思路，具体实现细节请自行实现（因为我没用原装粒子）。这里创建多个粒子生成器，每个生成器都是向上喷发粒子，然后通过脚本动画控制每个生成器的移动，让生成器绕着传送门的圆形旋转。</p>
<h2 id="方法二-VFXGraph"><a href="#方法二-VFXGraph" class="headerlink" title="方法二 VFXGraph"></a>方法二 VFXGraph</h2><p>这个方法非常简单，大致都是根据<a href="https://www.bilibili.com/read/cv15931018">这篇文章</a>(<a href="https://www.bilibili.com/read/cv15931018">https://www.bilibili.com/read/cv15931018</a>)实现的，安装一个Unity额外的VFX扩展，和shaderGraph一样的连线调数值就可以了。</p>
<h1 id="实现物体传送"><a href="#实现物体传送" class="headerlink" title="实现物体传送"></a>实现物体传送</h1><h2 id="基础数学知识"><a href="#基础数学知识" class="headerlink" title="基础数学知识"></a>基础数学知识</h2><h3 id="向量点积"><a href="#向量点积" class="headerlink" title="向量点积"></a>向量点积</h3><p>为了实现传送门的传送判定，我们需要知道待传送物体是否在传送门正面，此时我们就需要使用向量点积来判断。通过代码控制获取传送门正向的方向向量，计算传送门到角色的向量。<br>向量点积的定义：</p>
<center><i>a</i> · <i>b</i>=|<i>a</i>||<i>b</i>|cos(θ)</center>

<p>通过定义我们可以得知，当两个向量之间夹角为-90°~90°时，点积值为正。在三维中，两向量点积为正的区域正好把空间分隔为了两半，一半是点积为正的区域，一半是点积为负的区域（当然还有0）<br>这里我们可以测试一下，写一个简单的shader</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Shader <span class="string">&quot;Unlit/sphere&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">        _MainTex (<span class="string">&quot;Texture&quot;</span>, <span class="number">2</span>D) = <span class="string">&quot;white&quot;</span> &#123;&#125;</span><br><span class="line">        <span class="comment">//方向向量</span></span><br><span class="line">        _Dir(<span class="string">&quot;Direction&quot;</span>,Vector)=(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">        Tags &#123; <span class="string">&quot;RenderType&quot;</span>=<span class="string">&quot;Opaque&quot;</span> &#125;</span><br><span class="line">        LOD <span class="number">100</span></span><br><span class="line"></span><br><span class="line">        Pass</span><br><span class="line">        &#123;</span><br><span class="line">            CGPROGRAM</span><br><span class="line">            <span class="meta">#<span class="keyword">pragma</span> vertex vert</span></span><br><span class="line">            <span class="meta">#<span class="keyword">pragma</span> fragment frag</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="keyword">include</span> <span class="string">&quot;UnityCG.cginc&quot;</span></span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">struct</span> appdata</span><br><span class="line">            &#123;</span><br><span class="line">                float4 vertex : POSITION;</span><br><span class="line">                float2 uv : TEXCOORD0;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">v2f</span></span></span><br><span class="line"><span class="class">            &#123;</span></span><br><span class="line">                float2 uv : TEXCOORD0;</span><br><span class="line">                float4 vertex : SV_POSITION;</span><br><span class="line">                float3 pos_OS:TEXCOORD1;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            sampler2D _MainTex;</span><br><span class="line">            float4 _MainTex_ST;</span><br><span class="line">            float4 _Dir;</span><br><span class="line"></span><br><span class="line">            v2f <span class="title function_">vert</span> <span class="params">(appdata v)</span></span><br><span class="line">            &#123;</span><br><span class="line">                v2f o;</span><br><span class="line">                o.vertex = UnityObjectToClipPos(v.vertex);</span><br><span class="line">                o.uv = TRANSFORM_TEX(v.uv, _MainTex);</span><br><span class="line">                <span class="comment">//使用模型空间展示不同向量的点乘</span></span><br><span class="line">                o.pos_OS=v.vertex;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> o;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fixed4 <span class="title function_">frag</span> <span class="params">(v2f i)</span> : SV_Target</span><br><span class="line">            &#123;</span><br><span class="line"> </span><br><span class="line">                fixed4 col = tex2D(_MainTex, i.uv);</span><br><span class="line">                <span class="comment">//当点积小于0的都直接舍去</span></span><br><span class="line">                clip(dot(i.pos_OS,_Dir));</span><br><span class="line">                <span class="keyword">return</span> col;</span><br><span class="line">            &#125;</span><br><span class="line">            ENDCG</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/upload/2022/05/image-1653880115766.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">与Direction点积为负的一半被剔除了</div>
</center>

<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/upload/2022/05/image-1653881750326.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">点积进行判断</div>
</center>

<h2 id="碰撞"><a href="#碰撞" class="headerlink" title="碰撞"></a>碰撞</h2><p>光有向量点积还不能实现传送门效果，因为只使用向量点积是否大于0来判断，会导致当带传送物体只要是在传送门后方都会被传送，就算是传送物体绕过了传送门也会被传送。这和我们期望的传送门效果不一样，这时就需要引入碰撞来解决这个问题。<br>具体的思路就是在传送门前加一个碰撞箱，当产生碰撞时再进行点积检测。</p>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/upload/2022/05/image-1653881949407.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">在传送面片前放置碰撞箱</div>
</center>

<h2 id="更改传送物体位置"><a href="#更改传送物体位置" class="headerlink" title="更改传送物体位置"></a>更改传送物体位置</h2><p>在先前同步摄像机的脚本，我们解决了相对运动的问题，这里又可以再用上了，当物体确认需要传送，只需要计算好传送物体对于PortalA的偏移值，然后加在PortalB上就可以了。需要注意的是传送需要先旋转180°，需要移动到portalB的背后而不是前面。</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="built_in">float</span> rotationDiff=-Quaternion.Angle(Portal.rotation,OtherPortal.rotation);</span><br><span class="line">       rotationDiff += <span class="number">180</span>;</span><br><span class="line">       player.Rotate(Vector3.up,rotationDiff);</span><br><span class="line">       Vector3 positionOffset = Quaternion.Euler(<span class="number">0f</span>, rotationDiff, <span class="number">0f</span>) * portalToPlayer;</span><br><span class="line">       player.position = OtherPortal.position + positionOffset;</span><br></pre></td></tr></table></figure>

<h2 id="完整源码"><a href="#完整源码" class="headerlink" title="完整源码"></a>完整源码</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PortalCollider</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//PortalA</span></span><br><span class="line">    <span class="keyword">public</span> Transform Portal;</span><br><span class="line">    <span class="comment">//PortalB</span></span><br><span class="line">    <span class="keyword">public</span> Transform OtherPortal;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Transform player;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> teleport=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LateUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (teleport)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector3 portalToPlayer = player.position-Portal.position;</span><br><span class="line">          </span><br><span class="line">            <span class="comment">//如果走到背面点积为负数</span></span><br><span class="line">            <span class="keyword">if</span> (Vector3.Dot(Portal.up, portalToPlayer) &lt; <span class="number">0f</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">float</span> rotationDiff=-Quaternion.Angle(Portal.rotation,OtherPortal.rotation);</span><br><span class="line">                rotationDiff += <span class="number">180</span>;</span><br><span class="line">                player.Rotate(Vector3.up,rotationDiff);</span><br><span class="line">                Vector3 positionOffset = Quaternion.Euler(<span class="number">0f</span>, rotationDiff, <span class="number">0f</span>) * portalToPlayer;</span><br><span class="line">                player.position = OtherPortal.position + positionOffset;</span><br><span class="line">                Debug.Log(player.position);</span><br><span class="line">                teleport = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnTriggerEnter&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (other.tag == <span class="string">&quot;Player&quot;</span>) &#123;</span><br><span class="line">            teleport = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (other.tag == <span class="string">&quot;ball&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            teleport = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (other.tag == <span class="string">&quot;Player&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            teleport = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (other.tag == <span class="string">&quot;ball&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            teleport = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>shader</tag>
        <tag>unity</tag>
      </tags>
  </entry>
  <entry>
    <title>bot002使用手册</title>
    <url>/2022/12/30/bot002%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h1 id="禁言决斗"><a href="#禁言决斗" class="headerlink" title="禁言决斗"></a>禁言决斗</h1><p>俄罗斯轮盘赌</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">轮盘</span><br></pre></td></tr></table></figure>
<p>决斗</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">决斗</span><br></pre></td></tr></table></figure>
<p>禁言自己</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">自裁</span><br></pre></td></tr></table></figure>
<h1 id="voodoo"><a href="#voodoo" class="headerlink" title="voodoo"></a>voodoo</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//获取今日运势</span><br><span class="line">/vdLuck</span><br><span class="line">今日运势</span><br><span class="line"></span><br><span class="line">// 抽取一张大阿尔卡纳牌(塔罗牌中从0号愚者至21号世界)</span><br><span class="line">/vdTarot</span><br><span class="line">塔罗牌</span><br><span class="line"></span><br><span class="line">//从周易卦象中抽取一张卦象</span><br><span class="line">/卦象 </span><br><span class="line">求签 </span><br></pre></td></tr></table></figure>
<h1 id="涩图"><a href="#涩图" class="headerlink" title="涩图"></a>涩图</h1><p>Examples&#x2F;示例<br>通用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/lolicon get 東方Project</span><br><span class="line">/lolicon adv &#123;&quot;num&quot;:2&#125;</span><br><span class="line">/lolicon set r18 1</span><br></pre></td></tr></table></figure>
<p>自定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">涩图 来一张</span><br><span class="line">发图 来一张 FGO</span><br><span class="line">涩图 高级 &#123;&quot;num&quot;:2&#125;</span><br><span class="line">涩图 设置 r18 2</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="chatGPT"><a href="#chatGPT" class="headerlink" title="chatGPT"></a>chatGPT</h1><p>开启聊天：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chat</span><br></pre></td></tr></table></figure>
<p>关闭聊天</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stop</span><br></pre></td></tr></table></figure>

<h1 id="斗牛"><a href="#斗牛" class="headerlink" title="斗牛"></a>斗牛</h1><p>领养牛子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">领养牛子</span><br></pre></td></tr></table></figure>
<p>比划长短</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//注意空格</span><br><span class="line">比划比划 @人</span><br></pre></td></tr></table></figure>
<p>结婚：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">搞对象 @人</span><br></pre></td></tr></table></figure>
<p>增加长度：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//有感叹号</span><br><span class="line">贴贴！</span><br></pre></td></tr></table></figure>
<h1 id="meme"><a href="#meme" class="headerlink" title="meme"></a>meme</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ph Git Hub</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pet @群主</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#dear @群主</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#choyen 我想吃 肯德基疯狂星期四套餐</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pinyin 无内鬼，来点色图</span><br></pre></td></tr></table></figure>
<p>游戏王<br>游戏王 表情包生成<br>可以发送 图片 或者 @某人 或者 QQ号 确定卡片图片<br>可以使用 xxx&#x3D;yyy, 指定属性，可选属性有：</p>
<ul>
<li>卡片名称: name</li>
<li>怪兽属性: attr &#x3D; dark, divine, earth, fire, light, spell, trap, water, wind</li>
<li>怪兽等级: level</li>
<li>怪兽种族: race</li>
<li>怪兽攻击: atk</li>
<li>怪兽防御: def</li>
<li>卡片版权：copyright<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#spell @Him188</span><br><span class="line">Welcome PR</span><br><span class="line">你可以PR</span><br></pre></td></tr></table></figure></li>
</ul>
<p>幻影坦克</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#tank</span><br><span class="line">[图片]</span><br><span class="line">[图片]</span><br></pre></td></tr></table></figure>

<h1 id="pet"><a href="#pet" class="headerlink" title="pet"></a>pet</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//  获取pet关键词</span><br><span class="line">pet</span><br><span class="line">//各种图的制作</span><br><span class="line">pet &lt;关键词&gt; [@想要的头像的用户]</span><br></pre></td></tr></table></figure>
<h1 id="每日番剧、新闻"><a href="#每日番剧、新闻" class="headerlink" title="每日番剧、新闻"></a>每日番剧、新闻</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">每日番剧</span><br><span class="line">每日新闻</span><br></pre></td></tr></table></figure>
<h1 id="bot各插件发布贴"><a href="#bot各插件发布贴" class="headerlink" title="bot各插件发布贴"></a>bot各插件发布贴</h1><ol>
<li>bot框架mirai：<a href="https://github.com/mamoe/mirai">https://github.com/mamoe/mirai</a></li>
<li>茉莉云聊天：<a href="https://github.com/LaoLittle/Molly">https://github.com/LaoLittle/Molly</a></li>
<li>每日新闻，番剧：<a href="https://github.com/LinHeLurking/mirai-news-reporter">https://github.com/LinHeLurking/mirai-news-reporter</a></li>
<li>占卜：<a href="https://github.com/AlerHugu3s/PluginVoodoo">https://github.com/AlerHugu3s/PluginVoodoo</a></li>
<li>涩图：<a href="https://github.com/Samarium150/mirai-console-lolicon">https://github.com/Samarium150/mirai-console-lolicon</a></li>
<li>禁言决斗：<a href="https://github.com/EvolvedGhost/MuteGames">https://github.com/EvolvedGhost/MuteGames</a></li>
<li>聊天控制台：<a href="https://github.com/project-mirai/chat-command">https://github.com/project-mirai/chat-command</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>bot002操作手册</title>
    <url>/2022/11/01/bot002%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C-bot002%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h1 id="禁言决斗"><a href="#禁言决斗" class="headerlink" title="禁言决斗"></a>禁言决斗</h1><p>俄罗斯轮盘赌</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">轮盘</span><br></pre></td></tr></table></figure>
<p>决斗</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">决斗</span><br></pre></td></tr></table></figure>
<p>禁言自己</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">自裁</span><br></pre></td></tr></table></figure>
<h1 id="voodoo"><a href="#voodoo" class="headerlink" title="voodoo"></a>voodoo</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//获取今日运势</span><br><span class="line">/vdLuck</span><br><span class="line">今日运势</span><br><span class="line"></span><br><span class="line">// 抽取一张大阿尔卡纳牌(塔罗牌中从0号愚者至21号世界)</span><br><span class="line">/vdTarot</span><br><span class="line">塔罗牌</span><br><span class="line"></span><br><span class="line">//从周易卦象中抽取一张卦象</span><br><span class="line">/卦象 </span><br><span class="line">求签 </span><br></pre></td></tr></table></figure>
<h1 id="涩图"><a href="#涩图" class="headerlink" title="涩图"></a>涩图</h1><p>Examples&#x2F;示例<br>通用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/lolicon get 東方Project</span><br><span class="line">/lolicon adv &#123;&quot;num&quot;:2&#125;</span><br><span class="line">/lolicon set r18 1</span><br></pre></td></tr></table></figure>
<p>自定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">涩图 来一张</span><br><span class="line">发图 来一张 FGO</span><br><span class="line">涩图 高级 &#123;&quot;num&quot;:2&#125;</span><br><span class="line">涩图 设置 r18 2</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="chatGPT"><a href="#chatGPT" class="headerlink" title="chatGPT"></a>chatGPT</h1><p>开启聊天：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chat</span><br></pre></td></tr></table></figure>
<p>关闭聊天</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stop</span><br></pre></td></tr></table></figure>

<h1 id="斗牛"><a href="#斗牛" class="headerlink" title="斗牛"></a>斗牛</h1><p>领养牛子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">领养牛子</span><br></pre></td></tr></table></figure>
<p>比划长短</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//注意空格</span><br><span class="line">比划比划 @人</span><br></pre></td></tr></table></figure>
<p>结婚：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">搞对象 @人</span><br></pre></td></tr></table></figure>
<p>增加长度：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//有感叹号</span><br><span class="line">贴贴！</span><br></pre></td></tr></table></figure>
<h1 id="meme"><a href="#meme" class="headerlink" title="meme"></a>meme</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ph Git Hub</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pet @群主</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#dear @群主</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#choyen 我想吃 肯德基疯狂星期四套餐</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pinyin 无内鬼，来点色图</span><br></pre></td></tr></table></figure>
<p>游戏王<br>游戏王 表情包生成<br>可以发送 图片 或者 @某人 或者 QQ号 确定卡片图片<br>可以使用 xxx&#x3D;yyy, 指定属性，可选属性有：</p>
<ul>
<li>卡片名称: name</li>
<li>怪兽属性: attr &#x3D; dark, divine, earth, fire, light, spell, trap, water, wind</li>
<li>怪兽等级: level</li>
<li>怪兽种族: race</li>
<li>怪兽攻击: atk</li>
<li>怪兽防御: def</li>
<li>卡片版权：copyright<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#spell @Him188</span><br><span class="line">Welcome PR</span><br><span class="line">你可以PR</span><br></pre></td></tr></table></figure></li>
</ul>
<p>幻影坦克</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#tank</span><br><span class="line">[图片]</span><br><span class="line">[图片]</span><br></pre></td></tr></table></figure>

<h1 id="pet"><a href="#pet" class="headerlink" title="pet"></a>pet</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//  获取pet关键词</span><br><span class="line">pet</span><br><span class="line">//各种图的制作</span><br><span class="line">pet &lt;关键词&gt; [@想要的头像的用户]</span><br></pre></td></tr></table></figure>
<h1 id="每日番剧、新闻"><a href="#每日番剧、新闻" class="headerlink" title="每日番剧、新闻"></a>每日番剧、新闻</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">每日番剧</span><br><span class="line">每日新闻</span><br></pre></td></tr></table></figure>
<h1 id="bot各插件发布贴"><a href="#bot各插件发布贴" class="headerlink" title="bot各插件发布贴"></a>bot各插件发布贴</h1><ol>
<li>bot框架mirai：<a href="https://github.com/mamoe/mirai">https://github.com/mamoe/mirai</a></li>
<li>茉莉云聊天：<a href="https://github.com/LaoLittle/Molly">https://github.com/LaoLittle/Molly</a></li>
<li>每日新闻，番剧：<a href="https://github.com/LinHeLurking/mirai-news-reporter">https://github.com/LinHeLurking/mirai-news-reporter</a></li>
<li>占卜：<a href="https://github.com/AlerHugu3s/PluginVoodoo">https://github.com/AlerHugu3s/PluginVoodoo</a></li>
<li>涩图：<a href="https://github.com/Samarium150/mirai-console-lolicon">https://github.com/Samarium150/mirai-console-lolicon</a></li>
<li>禁言决斗：<a href="https://github.com/EvolvedGhost/MuteGames">https://github.com/EvolvedGhost/MuteGames</a></li>
<li>聊天控制台：<a href="https://github.com/project-mirai/chat-command">https://github.com/project-mirai/chat-command</a></li>
</ol>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>bot</tag>
      </tags>
  </entry>
  <entry>
    <title>fake Interior笔记</title>
    <url>/2022/05/03/fake%20Interior%E7%AC%94%E8%AE%B0-fakeinteriornotes/</url>
    <content><![CDATA[<h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><div style="position: relative; padding: 30% 45%;">
<iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=938747783&bvid=BV1XT4y1z7d9&cid=711309784&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>

<h1 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h1><p>和视差映射类似，但是是把一个正方体内的东西映射到一个平面上。<br><img src="https://pic2.zhimg.com/v2-b010b1565792a6d49600983791684131_r.jpg"></p>
<h1 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h1><h2 id="CubeMap采样"><a href="#CubeMap采样" class="headerlink" title="CubeMap采样"></a>CubeMap采样</h2><p><a href="https://www.dongjunto.xyz/archives/shadercubemap%E5%AD%A6%E4%B9%A0">cubeMap的学习</a></p>
<h2 id="如何获取室内点"><a href="#如何获取室内点" class="headerlink" title="如何获取室内点"></a>如何获取室内点</h2><p>这里和求AABB的方法相同。<br><img src="/upload/2022/05/image-1651584330472.png" alt="image-1651584330472"><br>首先假设相机cam，视角方向<strong>d</strong>，近平面交点为p<del>1</del>远平面焦点为p<del>2</del>设时间t。<br>那么可以得到这个公式。</p>
<p>①p<del>1</del>&#x3D;cam+t<del>1</del>*<strong>d</strong><br>②p<del>2</del>&#x3D;cam+t<del>2</del>*<strong>d</strong></p>
<p>由于贴图是模拟窗户，所以p<del>1</del>就是每个frag片元的位置，然后现在需要知道p<del>2</del>的位置。<br>我们把②反过来看t<del>2</del>就可以得到t<del>2</del>&#x3D;（p<del>2</del>-cam）&#x2F;<strong>d</strong><br>看上去这是一个鸡生蛋蛋生鸡的问题，但是这个包围盒的大小我们是可以设置的。例如在模型空间内这个包围盒是（0,0,0）~（1,1,1），但是我们选择在（-1,-1,-1）~（1,1,1）内计算（这里后面会解释）。<br>那么t<del>2</del>要如何解出来呢，可以这么想：一根射线穿过盒子，可以当做是和盒子的6个平面（这6个平面是无限大的）做相交。<br>我们先看二维情况，三维是完全相同的。<br><img src="/upload/2022/05/image-1651584539317.png" alt="image-1651584539317"><br>我们把<strong>d</strong>沿着x和y做分解，那么就会得到这个射线与x&#x3D;1这根直线以及与y&#x3D;1这根直线相交的时间t<del>x</del>，t<del>y</del>那么直线和包围盒相交的点p<del>2</del>的时间t<del>2</del>应该是min(t<del>x</del>,t<del>y</del>)，这是因为首先它和x&#x3D;1相交了。<br>放到三维则就是与平面x&#x3D;1，平面y&#x3D;1，平面z&#x3D;1相交，同理t<del>2</del>应该是min(t<del>x</del>,t<del>y</del>,t<del>z</del>)。</p>
<p>这时还有一个小问题就是这里是和y&#x3D;1做相交，但是室内还有y&#x3D;-1的时候呢，这又怎么解决呢？<br>这里就是用（-1,-1,-1）~（1,1,1）的好处了，我们只需要对方向取上绝对值即t<del>2</del>&#x3D;abs(1&#x2F;<strong>d</strong>)-cam&#x2F;<strong>d</strong>就可以把&#x3D;-1的问题和&#x3D;1问题统一了。</p>
<p>此时就可以用得到的t<del>2</del>反解出p<del>2</del>了，p<del>2</del>&#x3D;p<del>1</del>+t<del>2</del>*<strong>d</strong>由于我们是在frag里使用，因此p<del>2</del><br>就可以直接使用p<del>1</del>来计算，原理和cam一样。</p>
<h2 id="如何把获取到的p2用于cubemap采样"><a href="#如何把获取到的p2用于cubemap采样" class="headerlink" title="如何把获取到的p2用于cubemap采样"></a>如何把获取到的p<del>2</del>用于cubemap采样</h2><p>我们先前使用（-1,-1,-1）~（1,1,1）定义p<del>2</del>还有一个好处就是在这，cubemap的范围就是从（-0.5,-0.5,-0.5）~（0.5,0.5,0.5），我们直接使用p<del>2</del>的点坐标就是对应的cubemap的uvw。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Shader <span class="string">&quot;Unlit/fakeInterior&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">        _RoomTex (<span class="string">&quot;Texture&quot;</span>, CUBE) = <span class="string">&quot;white&quot;</span> &#123;&#125;</span><br><span class="line">        _Rotate(<span class="string">&quot;Rotate around XYZ&quot;</span>,<span class="built_in">vector</span>)=(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">        Tags &#123; <span class="string">&quot;RenderType&quot;</span>=<span class="string">&quot;Opaque&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">        Pass</span><br><span class="line">        &#123;</span><br><span class="line">            CGPROGRAM</span><br><span class="line">            <span class="meta">#<span class="keyword">pragma</span> vertex vert</span></span><br><span class="line">            <span class="meta">#<span class="keyword">pragma</span> fragment frag</span></span><br><span class="line">            </span><br><span class="line">            <span class="meta">#<span class="keyword">include</span> <span class="string">&quot;UnityCG.cginc&quot;</span></span></span><br><span class="line">            <span class="comment">//旋转函数</span></span><br><span class="line">            float3 rotateVectorAboutX(<span class="type">float</span> angle, float3 vec)</span><br><span class="line">            &#123; </span><br><span class="line">            angle = radians(angle);</span><br><span class="line">            float3x3 rotationMatrix =&#123;float3(<span class="number">1.0</span>,<span class="number">0.0</span>,<span class="number">0.0</span>),</span><br><span class="line">                                        float3(<span class="number">0.0</span>,<span class="built_in">cos</span>(angle),-<span class="built_in">sin</span>(angle)),</span><br><span class="line">                                        float3(<span class="number">0.0</span>,<span class="built_in">sin</span>(angle),<span class="built_in">cos</span>(angle))&#125;;</span><br><span class="line">            <span class="keyword">return</span> mul(vec, rotationMatrix);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            float3 <span class="title function_">rotateVectorAboutY</span><span class="params">(<span class="type">float</span> angle, float3 vec)</span></span><br><span class="line">            &#123; </span><br><span class="line">            angle = radians(angle);</span><br><span class="line">            float3x3 rotationMatrix =&#123;float3(<span class="built_in">cos</span>(angle),<span class="number">0.0</span>,<span class="built_in">sin</span>(angle)),</span><br><span class="line">                                        float3(<span class="number">0.0</span>,<span class="number">1.0</span>,<span class="number">0.0</span>),</span><br><span class="line">                                        float3(-<span class="built_in">sin</span>(angle),<span class="number">0.0</span>,<span class="built_in">cos</span>(angle))&#125;;</span><br><span class="line">            <span class="keyword">return</span> mul(vec, rotationMatrix);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            float3 <span class="title function_">rotateVectorAboutZ</span><span class="params">(<span class="type">float</span> angle, float3 vec)</span></span><br><span class="line">            &#123;</span><br><span class="line">            angle = radians(angle);</span><br><span class="line">            float3x3 rotationMatrix =&#123;float3(<span class="built_in">cos</span>(angle),-<span class="built_in">sin</span>(angle),<span class="number">0.0</span>),</span><br><span class="line">                                        float3(<span class="built_in">sin</span>(angle),<span class="built_in">cos</span>(angle),<span class="number">0.0</span>),</span><br><span class="line">                                        float3(<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">1.0</span>)&#125;;</span><br><span class="line">            <span class="keyword">return</span> mul(vec, rotationMatrix);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">appdata</span></span></span><br><span class="line"><span class="class">            &#123;</span></span><br><span class="line">                float4 vertex : POSITION;</span><br><span class="line">                float2 uv : TEXCOORD0;</span><br><span class="line">                </span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">v2f</span></span></span><br><span class="line"><span class="class">            &#123;</span></span><br><span class="line">                float2 uv : TEXCOORD0;</span><br><span class="line">                float3 vertex_OS:TEXCOORD1;</span><br><span class="line">                float3 viewDir_OS:TEXCOORD2;</span><br><span class="line">                float4 vertex : SV_POSITION;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            samplerCUBE _RoomTex;</span><br><span class="line">            float4 _RoomTex_ST;</span><br><span class="line">            float4 _Rotate;</span><br><span class="line"></span><br><span class="line">            v2f <span class="title function_">vert</span><span class="params">(appdata v)</span></span><br><span class="line">            &#123;</span><br><span class="line">                v2f o;</span><br><span class="line">                o.vertex = UnityObjectToClipPos(v.vertex);</span><br><span class="line">                <span class="comment">// slight scaling adjustment to work around &quot;noisy wall&quot; </span></span><br><span class="line">                <span class="comment">// when frac() returns a 0 on surface</span></span><br><span class="line">                o.vertex_OS = v.vertex * _RoomTex_ST.xyx * <span class="number">0.999</span> + _RoomTex_ST.zwz;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// get object space camera vector</span></span><br><span class="line">                float4 objCam = mul(unity_WorldToObject, float4(_WorldSpaceCameraPos, <span class="number">1.0</span>));</span><br><span class="line">                o.viewDir_OS = v.vertex.xyz - objCam.xyz;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// adjust for tiling</span></span><br><span class="line">                o.viewDir_OS *= _RoomTex_ST.xyx;</span><br><span class="line">                <span class="keyword">return</span> o;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fixed4 <span class="title function_">frag</span><span class="params">(v2f i)</span>:SV_TARGET&#123;</span><br><span class="line">                float3 d=normalize(i.viewDir_OS);</span><br><span class="line">                </span><br><span class="line">                float3 pos=frac(i.vertex_OS);</span><br><span class="line">                pos=pos*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="type">float</span> tx=<span class="built_in">abs</span>(<span class="number">1</span>/d.x)-pos.x/d.x;</span><br><span class="line">                <span class="type">float</span> ty=<span class="built_in">abs</span>(<span class="number">1</span>/d.y)-pos.y/d.y;</span><br><span class="line">                <span class="type">float</span> tz=<span class="built_in">abs</span>(<span class="number">1</span>/d.z)-pos.z/d.z;</span><br><span class="line">                <span class="type">float</span> t=min(tx,min(ty,tz));</span><br><span class="line"></span><br><span class="line">                float3 p2=pos+t*d;</span><br><span class="line">                <span class="comment">//rotate</span></span><br><span class="line">                p2=rotateVectorAboutX(_Rotate.x,p2);</span><br><span class="line">                p2=rotateVectorAboutY(_Rotate.y,p2);</span><br><span class="line">                p2=rotateVectorAboutZ(_Rotate.z,p2);</span><br><span class="line"></span><br><span class="line">                fixed3 col;</span><br><span class="line">                col=texCUBE(_RoomTex,p2);</span><br><span class="line">                <span class="keyword">return</span> fixed4(col,<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">            ENDCG</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>fakeinterior实现：</p>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/376762518">https://zhuanlan.zhihu.com/p/376762518</a><br><a href="https://zhuanlan.zhihu.com/p/159439811">https://zhuanlan.zhihu.com/p/159439811</a></p>
</blockquote>
<p>制作cubemap</p>
<blockquote>
<p><a href="https://blog.csdn.net/weixin_43839583/article/details/104213119">https://blog.csdn.net/weixin_43839583/article/details/104213119</a></p>
</blockquote>
<p>旋转cubemap</p>
<blockquote>
<p><a href="https://polycount.com/discussion/97779/shader-rotate-cubemap-any-tips">https://polycount.com/discussion/97779/shader-rotate-cubemap-any-tips</a></p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>unity</tag>
      </tags>
  </entry>
  <entry>
    <title>git命令学习</title>
    <url>/2022/12/14/git%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0-git%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="什么是git"><a href="#什么是git" class="headerlink" title="什么是git"></a>什么是git</h1><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p>
<p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p>
<h1 id="Git和GitHub和Gitlab有什么区别"><a href="#Git和GitHub和Gitlab有什么区别" class="headerlink" title="Git和GitHub和Gitlab有什么区别"></a>Git和GitHub和Gitlab有什么区别</h1><p>后两个都是基于Git和Web开发的Git远程仓库。<br>GitHub是用于公有开源项目，或者个人私有项目。由于GitHub共有项目需要开源，而大部分企业代码都不是开源，因此需要自己搭建Git仓库，这时候就需要使用GitLab了。<br>GitLab支持你自己搭建私有Git远程仓库，大部分公司会在内网搭建专门的GitLab服务。</p>
<h1 id="Git简单入门"><a href="#Git简单入门" class="headerlink" title="Git简单入门"></a>Git简单入门</h1><p><a href="https://www.runoob.com/manual/git-guide/">https://www.runoob.com/manual/git-guide/</a></p>
<h1 id="Git基本工作流程"><a href="#Git基本工作流程" class="headerlink" title="Git基本工作流程"></a>Git基本工作流程</h1><p><img src="https://www.runoob.com/wp-content/uploads/2015/02/git-process.png" alt="image-1670983184102"></p>
<h1 id="Git基础分区"><a href="#Git基础分区" class="headerlink" title="Git基础分区"></a>Git基础分区</h1><p>Git分为三部分：工作区，暂存区，版本库。<br><img src="https://www.runoob.com/wp-content/uploads/2015/02/1352126739_7909.jpg" alt="git-space"></p>
<h1 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h1><h2 id="设置提交代码用户信息"><a href="#设置提交代码用户信息" class="headerlink" title="设置提交代码用户信息"></a>设置提交代码用户信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 设置名字</span><br><span class="line">git config --global user.name ‘name’</span><br><span class="line"># 设置用户邮箱</span><br><span class="line">git config --global user.email test@email.com</span><br></pre></td></tr></table></figure>
<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init [仓库名]</span><br></pre></td></tr></table></figure>
<p>如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把当前目录下的所有.c文件添加到仓库</span></span><br><span class="line">git add *.c</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把当前目录下的README文件添加到仓库</span></span><br><span class="line">git add README</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">commit 提交，Windows需要用<span class="string">&quot;&quot;</span>,linux和git bash用‘’</span></span><br><span class="line">git commit -m &#x27;初始化项目版本&#x27;</span><br></pre></td></tr></table></figure>
<h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone &lt;git仓库&gt; [&lt;本地目录&gt;]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">比如克隆Ruby语言的Git代码仓库，名字是克隆下来后的项目名</span></span><br><span class="line">git clone git://github.com/schacon/grit.git [名字]</span><br></pre></td></tr></table></figure>
<h3 id="提交修改"><a href="#提交修改" class="headerlink" title="提交修改"></a>提交修改</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 添加到暂存区</span><br><span class="line">git add</span><br><span class="line"># 查看仓库当前状态,-s简短输出</span><br><span class="line">git status [-s]</span><br><span class="line"># 比较暂存区和工作区的差异</span><br><span class="line">git diff</span><br><span class="line"># 提交暂存区到本地仓库,-a无需add直接提交，-m添加备注信息</span><br><span class="line">git commit [-a -m message]</span><br><span class="line"># 把文件从暂存区和工作区中删除</span><br><span class="line">git rm</span><br><span class="line"># 移动或者重命名工作区文件</span><br><span class="line">git mv</span><br></pre></td></tr></table></figure>
<h3 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 回退版本</span><br><span class="line">git reset [--soft | --mixed | --hard] [HEAD]</span><br><span class="line"># 回退所有内容到上一个版本  </span><br><span class="line">git reset HEAD^        </span><br><span class="line"># 回退 hello.php 文件的版本到上一个版本</span><br><span class="line">git reset HEAD^ hello.php   </span><br><span class="line"># 回退到指定版本</span><br><span class="line">git  reset  052e    </span><br><span class="line">```       </span><br><span class="line">HEAD 说明：</span><br><span class="line">HEAD 表示当前版本</span><br><span class="line">HEAD^ 上一个版本</span><br><span class="line">HEAD^^ 上上一个版本</span><br><span class="line">HEAD^^^ 上上上一个版本</span><br><span class="line">以此类推...</span><br><span class="line"></span><br><span class="line">可以使用 ～数字表示</span><br><span class="line">HEAD~0 表示当前版本</span><br><span class="line">HEAD~1 上一个版本</span><br><span class="line">HEAD^2 上上一个版本</span><br><span class="line">HEAD^3 上上上一个版本</span><br><span class="line">以此类推...</span><br><span class="line"></span><br><span class="line">https://www.runoob.com/git/git-basic-operations.html</span><br><span class="line">### 远程仓库</span><br><span class="line">``` shell</span><br><span class="line"># 远程仓库操作</span><br><span class="line">git remote</span><br><span class="line"># 从远程仓库获取代码库</span><br><span class="line">git fetch</span><br><span class="line"># 下载远程远程代码并合并</span><br><span class="line">git pull</span><br><span class="line"># 上传远程代码并合并</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p>分支是多人并行开发必备的，每个人都可以在一个不同分支开发，最后合并分支。</p>
<h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><p>git branch (branchname)</p>
<h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><p>git branch (branchname)</p>
<h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><p>git merge</p>
<h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><p>git branch -d (branchname)</p>
<h3 id="合并冲突"><a href="#合并冲突" class="headerlink" title="合并冲突"></a>合并冲突</h3><p>当两个branch中同一文件内容不一致时，就会产生冲突，会出现这一类的提示<br>CONFLICT (content): Merge conflict in runoob.php<br>需要手动修改文件，使用 git diff 查看冲突，修改完冲突代码后，使用git add告诉Git文件冲突已经解决。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>菜鸟git教程：<a href="https://www.runoob.com/git/git-tutorial.html">https://www.runoob.com/git/git-tutorial.html</a><br>Git命令手册：<a href="https://www.runoob.com/manual/github-git-cheat-sheet.pdf">https://www.runoob.com/manual/github-git-cheat-sheet.pdf</a></p>
]]></content>
      <categories>
        <category>默认分类</category>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>实用类</tag>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity网络通信</title>
    <url>/2023/01/05/Unity%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<p>毕设打算把树莓派传感器上的参数传给unity，了解了一下具体实现，可以通过socket建立tcp连接，也可以创建HTTP服务通过Get，Post等请求获取。最后选择使用socket连接。</p>
<h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><p>因为在树莓派上获取参数，直接使用了python实现树莓派上的服务。</p>
<h2 id="python实现socket通信"><a href="#python实现socket通信" class="headerlink" title="python实现socket通信"></a>python实现socket通信</h2><blockquote>
<p>python网络编程：<a href="https://www.runoob.com/python/python-socket.html">https://www.runoob.com/python/python-socket.html</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入socket包</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="comment"># 测试时使用按钮触发，引入GUI库tkinter</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">click</span>(<span class="params">c</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;发送&quot;</span>)</span><br><span class="line">    c.send((<span class="string">&#x27;hello！ &#x27;</span>+<span class="built_in">str</span>(i)).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)   <span class="comment"># 创建 socket 对象</span></span><br><span class="line">host = socket.gethostname()  <span class="comment"># 获取本地主机名</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line">port = <span class="number">12345</span>  <span class="comment"># 设置端口</span></span><br><span class="line">s.bind((<span class="string">&#x27;localhost&#x27;</span>, port))  <span class="comment"># 绑定端口</span></span><br><span class="line">s.listen(<span class="number">5</span>)  <span class="comment"># 等待客户端连接</span></span><br><span class="line"></span><br><span class="line">c, addr = s.accept()  <span class="comment"># 建立客户端连接，accept是阻断试的</span></span><br><span class="line"><span class="built_in">print</span>( <span class="string">&#x27;连接地址：&#x27;</span>, addr)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建窗口</span></span><br><span class="line">root = tk.Tk()</span><br><span class="line">root.title(<span class="string">&quot;按钮示例&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建按钮</span></span><br><span class="line">button = tk.Button(root, text=<span class="string">&quot;点我&quot;</span>, command=<span class="keyword">lambda</span>: click(c))</span><br><span class="line">button.pack()</span><br><span class="line"><span class="comment">#进入消息循环</span></span><br><span class="line">root.mainloop()</span><br><span class="line">c.close()  <span class="comment"># 关闭连接</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><p>在unity中创建客户端，C#是.Net语言，可以使用.Net提供的Socket编程。</p>
<h2 id="C-实现网络通信"><a href="#C-实现网络通信" class="headerlink" title="C#实现网络通信"></a>C#实现网络通信</h2><blockquote>
<p>.Net Socket:<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.net.sockets.socket?view=net-7.0">https://learn.microsoft.com/zh-cn/dotnet/api/system.net.sockets.socket?view=net-7.0</a></p>
</blockquote>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SocketClient</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//创建一个新的 socket，使用 IPV4 地址族、流式 socket 类型和 TCP 协议</span></span><br><span class="line">            Socket socket = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//连接到服务器</span></span><br><span class="line">            socket.Connect(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">8080</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//发送一条消息</span></span><br><span class="line">            <span class="built_in">string</span> message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">            <span class="comment">//需要编码否则接收到的数据异常</span></span><br><span class="line">            <span class="built_in">byte</span>[] data = Encoding.UTF8.GetBytes(message);</span><br><span class="line">            socket.Send(data);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//接收服务器返回的数据</span></span><br><span class="line">            data = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="built_in">int</span> received = socket.Receive(data);</span><br><span class="line">            message = Encoding.UTF8.GetString(data, <span class="number">0</span>, received);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Received: &#123;0&#125;&quot;</span>, message);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//关闭 socket</span></span><br><span class="line">            socket.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的代码只是进行了一次通信发送和接受了数据就结束了，但是我需要持续接受来自树莓派的消息，并且这个脚本应该写到untiy中通过组件挂载脚本。需要做一些调整。</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">clientTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">     Socket socket=<span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line">    <span class="comment">//设置端口</span></span><br><span class="line">    <span class="built_in">int</span> port = <span class="number">12345</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">byte</span>[] data = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        socket.Connect(<span class="string">&quot;localhost&quot;</span>, port);</span><br><span class="line">    </span><br><span class="line">        Debug.Log(<span class="string">&quot;客户端启动！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//检查是否有可用的数据</span></span><br><span class="line">        <span class="keyword">if</span> (socket.Available &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//接收服务器返回的数据</span></span><br><span class="line">            <span class="comment">//Receive是阻断试的，当没有新的数据到达将会卡在update方法中</span></span><br><span class="line">            <span class="built_in">int</span> received = socket.Receive(data);</span><br><span class="line">            <span class="built_in">string</span> message = Encoding.UTF8.GetString(data, <span class="number">0</span>, received);</span><br><span class="line">            Array.Clear(data, <span class="number">0</span>, received);</span><br><span class="line">            Debug.Log(message);</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//类似析构函数，当组件销毁时调用</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnDestroy</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//关闭socket</span></span><br><span class="line">        socket.Close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>unity</tag>
        <tag>python</tag>
        <tag>socket编程</tag>
      </tags>
  </entry>
  <entry>
    <title>halo配置smtp</title>
    <url>/2022/04/25/halo%E9%85%8D%E7%BD%AEsmtp-halo%E9%85%8D%E7%BD%AEsmtp/</url>
    <content><![CDATA[<ol>
<li>邮箱要开启smtp服务</li>
<li>qq邮箱需要生成授权码作为smtp的账号密码</li>
<li>qq的smtp地址为 smtp.qq.com</li>
<li>ssl端口为465</li>
<li>服务器要开放465出端口</li>
<li>如果使用docker配置网页,对应的docker容器需要映射465端口，具体修改docker端口见<a href="https://blog.csdn.net/wkh___/article/details/114879500?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_antiscanv2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_antiscanv2&utm_relevant_index=1">这篇文章</a></li>
</ol>
]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
      <tags>
        <tag>smtp</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/12/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>livego+obs+potplayer|VLC 解决一起看问题</title>
    <url>/2022/05/27/livego+obs+potplayerVLC%20%E8%A7%A3%E5%86%B3%E4%B8%80%E8%B5%B7%E7%9C%8B%E9%97%AE%E9%A2%98-livegoobspotplayervlc%E8%A7%A3%E5%86%B3%E4%B8%80%E8%B5%B7%E7%9C%8B%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="/upload/2022/05/image-1653629017370.png" alt="image-1653629017370"><br>为我的直播间默哀一分钟。<br>昨天晚上和女朋友看死亡笔记的时候被超管警告了1次然后掐了1次，我不信邪继续播，然后就被超管封了。后面查了下，b站貌似专门盯着小主播的直播间下手，大主播虽然播的也没版权，但是基本不会去干涉。气的我打算自己搭一个直播服务器。</p>
<h1 id="应用选择"><a href="#应用选择" class="headerlink" title="应用选择"></a>应用选择</h1><h2 id="服务器端选择"><a href="#服务器端选择" class="headerlink" title="服务器端选择"></a>服务器端选择</h2><p>因为用惯了obs直播，我还打算使用obs来直播串流，看了一下obs的串流格式，我这里用的是RTMP，随即在GitHub上查了下相关的直播服务器，很快就相中了<a href="https://github.com/gwuhaolin/livego">livego</a>。livego可以提供多种串流支持，其中就包括RTMP，同时它支持Docker部署，能很轻松的就部署在服务器上。</p>
<h2 id="直播客户端选择"><a href="#直播客户端选择" class="headerlink" title="直播客户端选择"></a>直播客户端选择</h2><p><a href="https://obsproject.com/">OBS</a>真的很好用，开源，稳定，简洁。</p>
<h2 id="观众客户端选择"><a href="#观众客户端选择" class="headerlink" title="观众客户端选择"></a>观众客户端选择</h2><ol>
<li>PC端：由于我计划使用RTMP串流，因此需要一款可以直接接收RTMP的软件，我选择的是<a href="https://daumpotplayer.com/">PotPlayer</a>，这是一款开源的视频播放软件，功能强大，可以外挂字幕，局域网播放，以及串流播放。</li>
<li>移动端：可惜PotPlayer没有移动端，因此选择了另一家开源的视频播放器——<a href="https://www.videolan.org/">VLC</a>这家是多平台的，Windows，Linux，Android，IOS，MacOs都有，其实PC端也可以使用它。</li>
</ol>
<h1 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h1><h2 id="服务器信息"><a href="#服务器信息" class="headerlink" title="服务器信息"></a>服务器信息</h2><h2 id="我使用的是腾讯云海外服务器，2H4G，峰值带宽30MB，流量2560g，系统Ubuntu。对于串流来说这个配置高了些了，可以考虑最便宜的那个套餐。-部署livego并使用OBS调试我使用的是docker镜像部署，好处是非常节省时间，基本就是安装完docker后一键部署。不过我的个人博客已经使用了服务器的8090端口，因此我把8100端口作为串流端口。docker镜像运行起来后，记得在服务器防火墙处打开这几个端口，1935-7001-7002-8100。打开后按照livego说明中的访问http-公网IP-8100-control-get-room-movie获取推流key。打开OBS，在设置的推流中服务器填写-rtmp-x2F-x2F-公网IP-1935-x2F-live串流秘钥填写刚刚在网页获取到的推流key。保存后点击推流，如果右下角为绿色则表示推流成功。-获取串流视频1-PC端：-PotPlayer中ctrl-U（或者右键-打开-gt-打开链接），在文件网址处输入rtmp-公网IP-1935-live-movie，确定后，如果OBS开启了推流那么稍等一会就应该可以看到画面了。2-移动端：-首先要确保OBS已经开始推流（如果没有开启推流可能无法进入），打开VLC，更多-gt-串流-gt-新建串流，同样输入rtmp-公网IP-1935-live-movie后稍等片刻，即可看到画面。"><a href="#我使用的是腾讯云海外服务器，2H4G，峰值带宽30MB，流量2560g，系统Ubuntu。对于串流来说这个配置高了些了，可以考虑最便宜的那个套餐。-部署livego并使用OBS调试我使用的是docker镜像部署，好处是非常节省时间，基本就是安装完docker后一键部署。不过我的个人博客已经使用了服务器的8090端口，因此我把8100端口作为串流端口。docker镜像运行起来后，记得在服务器防火墙处打开这几个端口，1935-7001-7002-8100。打开后按照livego说明中的访问http-公网IP-8100-control-get-room-movie获取推流key。打开OBS，在设置的推流中服务器填写-rtmp-x2F-x2F-公网IP-1935-x2F-live串流秘钥填写刚刚在网页获取到的推流key。保存后点击推流，如果右下角为绿色则表示推流成功。-获取串流视频1-PC端：-PotPlayer中ctrl-U（或者右键-打开-gt-打开链接），在文件网址处输入rtmp-公网IP-1935-live-movie，确定后，如果OBS开启了推流那么稍等一会就应该可以看到画面了。2-移动端：-首先要确保OBS已经开始推流（如果没有开启推流可能无法进入），打开VLC，更多-gt-串流-gt-新建串流，同样输入rtmp-公网IP-1935-live-movie后稍等片刻，即可看到画面。" class="headerlink" title="我使用的是腾讯云海外服务器，2H4G，峰值带宽30MB，流量2560g，系统Ubuntu。对于串流来说这个配置高了些了，可以考虑最便宜的那个套餐。## 部署livego并使用OBS调试我使用的是docker镜像部署，好处是非常节省时间，基本就是安装完docker后一键部署。不过我的个人博客已经使用了服务器的8090端口，因此我把8100端口作为串流端口。docker镜像运行起来后，记得在服务器防火墙处打开这几个端口，1935,7001,7002,8100。打开后按照livego说明中的访问http://公网IP:8100/control/get?room=movie获取推流key。打开OBS，在设置的推流中服务器填写 rtmp:&#x2F;&#x2F;公网IP:1935&#x2F;live串流秘钥填写刚刚在网页获取到的推流key。保存后点击推流，如果右下角为绿色则表示推流成功。## 获取串流视频1. PC端：    PotPlayer中ctrl+U（或者右键 打开-&gt;打开链接），在文件网址处输入rtmp://公网IP:1935/live/movie，确定后，如果OBS开启了推流那么稍等一会就应该可以看到画面了。2. 移动端：    首先要确保OBS已经开始推流（如果没有开启推流可能无法进入），打开VLC，更多-&gt;串流-&gt;新建串流，同样输入rtmp://公网IP:1935/live/movie后稍等片刻，即可看到画面。"></a>我使用的是腾讯云海外服务器，2H4G，峰值带宽30MB，流量2560g，系统Ubuntu。<br>对于串流来说这个配置高了些了，可以考虑最便宜的那个套餐。<br>## 部署livego并使用OBS调试<br>我使用的是docker镜像部署，好处是非常节省时间，基本就是安装完docker后一键部署。不过我的个人博客已经使用了服务器的8090端口，因此我把8100端口作为串流端口。<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 1935:1935 -p 7001:7001 -p 7002:7002 -p 8100:8090 -d gwuhaolin/livego</span><br></pre></td></tr></table></figure><br>docker镜像运行起来后，记得在服务器防火墙处打开这几个端口，1935,7001,7002,8100。<br>打开后按照livego说明中的访问<a href="http://公网ip:8100/control/get?room=movie">http://公网IP:8100/control/get?room=movie</a>获取推流key。<br>打开OBS，在设置的推流中服务器填写 rtmp:&#x2F;&#x2F;公网IP:1935&#x2F;live<br>串流秘钥填写刚刚在网页获取到的推流key。<br>保存后点击推流，如果右下角为绿色则表示推流成功。<br>## 获取串流视频<br>1. PC端：<br>    PotPlayer中ctrl+U（或者右键 打开-&gt;打开链接），在文件网址处输入<a href="rtmp://公网IP:1935/live/movie">rtmp://公网IP:1935/live/movie</a>，确定后，如果OBS开启了推流那么稍等一会就应该可以看到画面了。<br>2. 移动端：<br>    首先要确保OBS已经开始推流（如果没有开启推流可能无法进入），打开VLC，更多-&gt;串流-&gt;新建串流，同样输入<a href="rtmp://公网IP:1935/live/movie">rtmp://公网IP:1935/live/movie</a>后稍等片刻，即可看到画面。</h2><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p>livego项目地址：<a href="https://github.com/gwuhaolin/livego/">https://github.com/gwuhaolin/livego/</a><br>livego中文说明文档：<a href="https://github.com/gwuhaolin/livego/blob/master/README_cn.md">https://github.com/gwuhaolin/livego/blob/master/README_cn.md</a><br>livego搭建视频：<a href="https://www.bilibili.com/video/BV1Bb4y1f71T">https://www.bilibili.com/video/BV1Bb4y1f71T</a><br>PotPlayer官网：<a href="https://daumpotplayer.com/">https://daumpotplayer.com</a><br>VLC官网：<a href="https://www.videolan.org/">https://www.videolan.org</a><br>OBS官网：<a href="https://obsproject.com/">https://obsproject.com/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
      <tags>
        <tag>实用类</tag>
        <tag>直播</tag>
      </tags>
  </entry>
  <entry>
    <title>shaderCubeMap学习</title>
    <url>/2022/04/30/shaderCubeMap%E5%AD%A6%E4%B9%A0-shadercubemap%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>cubemap是一个1*1*1的正方体，纹理采样时使用三个值uvw采样。采样原理是在cubemap立方体的中心设为原点（0，0，0），然后给入一个uvw作为一个空间向量，从原点指出。无论该向量大小如何，由原点延长到立方体上，获得采样的纹理。<br><img src="/upload/2022/04/image-1651250163847.png" alt="image-1651250163847"><br>一张普通的立方体贴图方向定义如下：<br><img src="/upload/2022/04/image-1651250220569.png" alt="image-1651250220569"><br>下图指某个值为正或负时采样对应的区块<br><img src="/upload/2022/04/image-1651250344252.png" alt="image-1651250344252"></p>
<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="Properties部分"><a href="#Properties部分" class="headerlink" title="Properties部分"></a>Properties部分</h2><p>使用CUBE标识。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">_MainTex (<span class="string">&quot;Texture&quot;</span>, CUBE) = <span class="string">&quot;white&quot;</span> &#123;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CGPROGRAM部分"><a href="#CGPROGRAM部分" class="headerlink" title="CGPROGRAM部分"></a>CGPROGRAM部分</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>用samplerCUBE定义，和普通sampler2D一样后面带_ST会创建一个缩放偏移参数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">samplerCUBE _MainTex;</span><br><span class="line">float4 _MainTex_ST;</span><br></pre></td></tr></table></figure>
<h3 id="fragment（）函数内"><a href="#fragment（）函数内" class="headerlink" title="fragment（）函数内"></a>fragment（）函数内</h3><p>使用texCube</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">fixed4 col = texCUBE(_MainTex, i.uvw);</span><br></pre></td></tr></table></figure>

<p><del>吐槽：Markdown代码块支持的语言好少，cg和shaderlab这种语言完全不支持。</del></p>
<blockquote>
<p>参考：<br><a href="https://www.freesion.com/article/43111443972/">https://www.freesion.com/article/43111443972/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>shader</tag>
        <tag>unity</tag>
      </tags>
  </entry>
  <entry>
    <title>steamdeck折腾记录01-换固态刷系统</title>
    <url>/2023/01/13/steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%9501-%E6%8D%A2%E5%9B%BA%E6%80%81%E5%88%B7%E7%B3%BB%E7%BB%9F-steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%9501-%E6%8D%A2%E5%9B%BA%E6%80%81%E5%88%B7%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="换硬盘"><a href="#换硬盘" class="headerlink" title="换硬盘"></a>换硬盘</h1><blockquote>
<p>参考视频：<a href="https://www.bilibili.com/video/BV11d4y1x7CM">https://www.bilibili.com/video/BV11d4y1x7CM</a></p>
</blockquote>
<blockquote>
<p>建议：先开始下载SteamOS文件，并且烧录，因为下载和烧录需要时间。<a href="#%E5%88%B7%E7%B3%BB%E7%BB%9F">刷系统</a></p>
</blockquote>
<blockquote>
<p>需要准备的工具：<br>小螺丝刀（十字口），拆机翘片（如果你相信你的指甲也可以不用），一个2230的固态</p>
</blockquote>
<p>我本以为换硬盘是很简单的事，拆机经验丰富如我（什么联想拯救者，戴尔灵越，华硕飞行堡垒，惠普暗夜精灵，华为magicbook，我都拆过），然而这次拆steamdeck给我的体验是灾难性的。</p>
<h2 id="固态购买"><a href="#固态购买" class="headerlink" title="固态购买"></a>固态购买</h2><blockquote>
<p>参考：<a href="https://tieba.baidu.com/p/7984464794">https://tieba.baidu.com/p/7984464794</a></p>
</blockquote>
<p>首先要知道steamdeck用的固态是特殊型号的，所以挑选的时候需要选择2230的固态，其次需要知道的就是steamdeck使用的是PCIe3.0，没必要买PCIe4.0的。</p>
<p>需要注意的参数：</p>
<ol>
<li><strong>型号一定要2230</strong>，虽然网传有魔改M.2 2242的方法，但是steamdeck工程师警告会影响deck寿命。</li>
<li><strong>低功耗</strong>（网上有一些换固态然后烧了的，所以一定要低功耗散热压力低），另外就是低功耗余留出的功耗是可以被用在cpu，gpu上的。</li>
</ol>
<p>ps：因为2230是没有零售的，也就是说市面上的都是散片，基本是没有保修的。</p>
<p>我挑选的是 西数sn530 1t</p>
<h2 id="拆外壳"><a href="#拆外壳" class="headerlink" title="拆外壳"></a>拆外壳</h2><p>外壳四个角有四个长螺丝，中间有4个短螺丝这个比较好下。<br>撬开外壳，和大部分笔记本一样，需要使用一个垫片沿着边缝翘，建议从扳机旁边翘，屏幕上下边都比较好翘，握手两侧比较费力。</p>
<h2 id="拆静电屏蔽板"><a href="#拆静电屏蔽板" class="headerlink" title="拆静电屏蔽板"></a>拆静电屏蔽板</h2><p>到这里也就花了我5分钟的时间，谁知道噩梦就从这开始了。<br><strong>静电屏蔽板上有3个螺丝，注意有2个空的，那个并不是漏了而是由外壳螺丝固定，所以需要注意位置，装回去的时候要一样。</strong><br>角上两颗螺丝，还有一颗大螺丝被胶带盖住了。<br>就这三颗螺丝<br>拆了我一个小时，这螺丝紧的像是被焊丝在上面一样，好在这螺丝质量够结实，否则早被我拧滑丝了。</p>
<h2 id="拔电"><a href="#拔电" class="headerlink" title="拔电"></a>拔电</h2><p>这个电线上还带一个拉环，很好拆，拔完电源按下开机键确保没电了。</p>
<h2 id="换固态"><a href="#换固态" class="headerlink" title="换固态"></a>换固态</h2><blockquote>
<p>可以先洗个手消除一下静电</p>
</blockquote>
<p>和普通笔记本的更换方法相同，拧下螺丝，拔卡，换卡，装螺丝。</p>
<h1 id="刷系统"><a href="#刷系统" class="headerlink" title="刷系统"></a>刷系统</h1><blockquote>
<p>需要准备的工具：<br>type-c转USB扩展坞，一个USB3.0的u盘（3.0很重要，否则你刷一次机得等1小时）</p>
</blockquote>
<h2 id="下载系统镜像文件"><a href="#下载系统镜像文件" class="headerlink" title="下载系统镜像文件"></a>下载系统镜像文件</h2><blockquote>
<p>镜像恢复官方教程：<a href="https://help.steampowered.com/zh-cn/faqs/view/1b71-edf2-eb6d-2bb3">https://help.steampowered.com/zh-cn/faqs/view/1b71-edf2-eb6d-2bb3</a><br>SteamOS下载地址：<a href="https://steamdeck-images.steamos.cloud/recovery/steamdeck-recovery-4.img.bz2">https://steamdeck-images.steamos.cloud/recovery/steamdeck-recovery-4.img.bz2</a><br>系统烧录工具：<a href="https://www.balena.io/etcher/">https://www.balena.io/etcher/</a></p>
</blockquote>
<h2 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h2><p>刷系统也有坑！！！<br><strong>必须usb3.0！必须usb3.0！必须usb3.0！</strong><br>我手上的两个u盘都不是usb3.0 读写速度慢的离谱。</p>
<p>用下好的烧录工具balena把SteamOS烧录到U盘中。</p>
<h2 id="恢复镜像"><a href="#恢复镜像" class="headerlink" title="恢复镜像"></a>恢复镜像</h2><p>接上U盘。<br>长按 <kbd>音量- </kbd> + <kbd>开机键</kbd><br>刷入系统镜像。</p>
<h2 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h2><ol>
<li>插上U盘，按<kbd>音量- </kbd> +  <kbd>开机键</kbd>没反应，屏幕还是黑的，但是触控板触摸有反馈<blockquote>
<p>U盘不是USB3.0，读取速度慢需要耐心等待，</p>
</blockquote>
</li>
<li>刷完系统后开机，一直卡在Installing（正在安装），从倒数3分钟到1s然后又来一轮倒数。<blockquote>
<p>耐心，慢慢等是会完成的，我卡了2小时。</p>
</blockquote>
</li>
<li>如果你看了官方的SteamDeck恢复教程，你可能用的是Rufus utility这个系统烧录工具，系统烧录到100%但什么反应也没有。<blockquote>
<p>我的解决方法是换一个烧录工具，用balena进行烧录。</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>steam</tag>
        <tag>steamdeck</tag>
        <tag>折腾</tag>
      </tags>
  </entry>
  <entry>
    <title>steamdeck折腾记录02-基础上手</title>
    <url>/2023/01/13/steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%9502-%E5%9F%BA%E7%A1%80%E4%B8%8A%E6%89%8B-steamdeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%9502-%E5%9F%BA%E7%A1%80%E4%B8%8A%E6%89%8B/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>vue+xlsxjs操作Excel</title>
    <url>/2022/12/28/vue+xlsxjs%E6%93%8D%E4%BD%9CExcel-vuexlsxjs-cao-zuo-excel/</url>
    <content><![CDATA[<h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><p>想写一个html用来打开Excel文件，添加人物，随机抽取人员，输出添加人员后的Excel。</p>
<h1 id="xlsx-js"><a href="#xlsx-js" class="headerlink" title="xlsx.js"></a>xlsx.js</h1><p>xlsx.js 是一个开源的 JavaScript 库，用于处理 Excel 文件。它可以读取、写入和转换 Excel 文件，支持多种格式（如 .xlsx、.xlsm、.xlsb 等），并且兼容多种浏览器。</p>
<h2 id="引用xlsx-js"><a href="#引用xlsx-js" class="headerlink" title="引用xlsx.js"></a>引用xlsx.js</h2><p>首先需要在html的head中引用xlsx.js</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/xlsx/0.18.5/xlsx.core.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>读取文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span>选择文件：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 使用一个file文件，这里vue的file不可以使用v-model，因此只能使用ref标记，可以使用this.$refs.fileInput来访问获取到的file --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;fileInput&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;readFile&quot;</span>&gt;</span>读取文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;writeFile&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;!jsonData.length&quot;</span>&gt;</span>写入文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意：将获取的file转换为JSON的代码不能写在readfil里，这是因为reader的readAsBinaryString是异步加载，加载完毕会触发一个load事件，所以要写到mounted中</p>
<p>mounted中<code>this.reader.addEventListener(&#39;load&#39;,()=&gt;&#123;&#125;)</code>监听了load事件，当异步加载完成后触发lambda表达式内的函数。</p>
<p>js脚本：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> app = &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">data</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">fileInput</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">reader</span>: <span class="keyword">new</span> <span class="title class_">FileReader</span>(),</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">jsonData</span>: []</span></span><br><span class="line"><span class="language-javascript">       &#125;</span></span><br><span class="line"><span class="language-javascript">     &#125;,</span></span><br><span class="line"><span class="language-javascript">     <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">this</span>.<span class="property">reader</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;read file to XLSX&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//   获取得到的BinaryString</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> data = <span class="variable language_">this</span>.<span class="property">reader</span>.<span class="property">result</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//console.log(&quot;result:&quot;+data)</span></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//   使用xlsx读取得到的二进制流文件，转为workbook类型</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> workbook = <span class="variable constant_">XLSX</span>.<span class="title function_">read</span>(data, &#123; <span class="attr">type</span>: <span class="string">&#x27;binary&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//console.log(&#x27;workbook:&#x27;+XLSX.read(data, &#123; type: &#x27;binary&#x27; &#125;))</span></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//   获取第一个表单名字</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> sheetName = workbook.<span class="property">SheetNames</span>[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//   通过表单名字获取对应的表单</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> sheet = workbook.<span class="property">Sheets</span>[sheetName]  </span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//console.log(workbook.Sheets[sheetName])</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//将表单转为JSON类型</span></span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">this</span>.<span class="property">jsonData</span> = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">sheet_to_json</span>(sheet)</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">       &#125;)</span></span><br><span class="line"><span class="language-javascript">     &#125;,</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="title function_">readFile</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;read file&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 由于使用的是ref标记，因此需要使用this.$refs.fileInput调用</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">const</span> file = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">fileInput</span>.<span class="property">files</span>[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">if</span> (!file) <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript">           <span class="comment">//console.log(&#x27;not null&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">this</span>.<span class="property">reader</span>.<span class="title function_">readAsBinaryString</span>(file)</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">//console.log(this.reader)</span></span></span><br><span class="line"><span class="language-javascript">       &#125;,</span></span><br><span class="line"><span class="language-javascript">       <span class="title function_">writeFile</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">           </span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 将 JSON 数据转换为工作表</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">const</span> sheet = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">json_to_sheet</span>(<span class="variable language_">this</span>.<span class="property">jsonData</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 将工作表转换为工作簿</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">const</span> workbook = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>()</span></span><br><span class="line"><span class="language-javascript">           <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_append_sheet</span>(workbook, sheet, <span class="string">&#x27;Sheet1&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 写入文件</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(workbook, &#123; <span class="attr">bookType</span>: <span class="string">&#x27;xlsx&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;array&#x27;</span> &#125;)], &#123; <span class="attr">type</span>: <span class="string">&#x27;application/octet-stream&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">           <span class="title function_">saveAs</span>(blob, <span class="string">&#x27;data.xlsx&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">       &#125;,</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">   <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(app).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>xlxs.js中需要用workbook装sheet表单，sheet表单内存着各行各列的数据。最后封装导出时需要用到FileSaver.js库，使用 FileSaver.js 很简单，只需调用 saveAs() 函数即可。saveAs() 函数需要两个参数：文件的 Blob 对象和文件名。</p>
<p>例如，如果要保存一个文本文件，可以使用以下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&#x27;file-saver&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">downloadTextFile</span>(<span class="params">text</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([text], &#123; <span class="attr">type</span>: <span class="string">&#x27;text/plain&#x27;</span> &#125;)</span><br><span class="line">  <span class="title function_">saveAs</span>(blob, <span class="string">&#x27;text-file.txt&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>保存xlsx文件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="variable constant_">XLSX</span> <span class="keyword">from</span> <span class="string">&#x27;xlsx&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&#x27;file-saver&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">downloadExcel</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> ws = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">aoa_to_sheet</span>(data)</span><br><span class="line">  <span class="keyword">const</span> wb = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>()</span><br><span class="line">  <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_append_sheet</span>(wb, ws, <span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, &#123; <span class="attr">bookType</span>: <span class="string">&#x27;xlsx&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;array&#x27;</span> &#125;)], &#123; <span class="attr">type</span>: <span class="string">&#x27;application/octet-stream&#x27;</span> &#125;)</span><br><span class="line">  <span class="title function_">saveAs</span>(blob, <span class="string">&#x27;data.xlsx&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>上面的代码首先使用 XLSX.utils.aoa_to_sheet() 将数据转换为工作表对象，然后使用 XLSX.utils.book_new() 创建新的工作簿对象。最后，使用 XLSX.utils.book_append_sheet() 将工作表添加到工作簿中，并使用 XLSX.write() 将工作簿转换为二进制数组。然后，将二进制数组包装在 Blob 对象中，并使用 saveAs() 函数将文件保存到用户计算机。</p>
</blockquote>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p>xlsx.js使用教程: <a href="https://blog.csdn.net/GFing18/article/details/125523446">https://blog.csdn.net/GFing18/article/details/125523446</a></p>
<p>xlsx.js官方文档：<a href="https://github.com/exceljs/exceljs/blob/HEAD/README_zh.md">https://github.com/exceljs/exceljs/blob/HEAD/README_zh.md</a></p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>xlsx</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2022/05/10/test-test/</url>
    <content><![CDATA[<?php
header("Content-Type:text/json;charset=UTF-8");
date_default_timezone_set("PRC");
$url = "https://api.vvhan.com/api/moyu";
$data=file_get_contents($url);
echo $data;
?>]]></content>
  </entry>
  <entry>
    <title>vue+xlsxjs操作Excel</title>
    <url>/2022/12/28/vue+xlsxjs%E6%93%8D%E4%BD%9CExcel/</url>
    <content><![CDATA[<h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><p>想写一个html用来打开Excel文件，添加人物，随机抽取人员，输出添加人员后的Excel。</p>
<h1 id="xlsx-js"><a href="#xlsx-js" class="headerlink" title="xlsx.js"></a>xlsx.js</h1><p>xlsx.js 是一个开源的 JavaScript 库，用于处理 Excel 文件。它可以读取、写入和转换 Excel 文件，支持多种格式（如 .xlsx、.xlsm、.xlsb 等），并且兼容多种浏览器。</p>
<h2 id="引用xlsx-js"><a href="#引用xlsx-js" class="headerlink" title="引用xlsx.js"></a>引用xlsx.js</h2><p>首先需要在html的head中引用xlsx.js</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/xlsx/0.18.5/xlsx.core.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>读取文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span>选择文件：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 使用一个file文件，这里vue的file不可以使用v-model，因此只能使用ref标记，可以使用this.$refs.fileInput来访问获取到的file --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;fileInput&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;readFile&quot;</span>&gt;</span>读取文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;writeFile&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;!jsonData.length&quot;</span>&gt;</span>写入文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意：将获取的file转换为JSON的代码不能写在readfil里，这是因为reader的readAsBinaryString是异步加载，加载完毕会触发一个load事件，所以要写到mounted中</p>
<p>mounted中<code>this.reader.addEventListener(&#39;load&#39;,()=&gt;&#123;&#125;)</code>监听了load事件，当异步加载完成后触发lambda表达式内的函数。</p>
<p>js脚本：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> app = &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">data</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">fileInput</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">reader</span>: <span class="keyword">new</span> <span class="title class_">FileReader</span>(),</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">jsonData</span>: []</span></span><br><span class="line"><span class="language-javascript">       &#125;</span></span><br><span class="line"><span class="language-javascript">     &#125;,</span></span><br><span class="line"><span class="language-javascript">     <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">this</span>.<span class="property">reader</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;read file to XLSX&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//   获取得到的BinaryString</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> data = <span class="variable language_">this</span>.<span class="property">reader</span>.<span class="property">result</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//console.log(&quot;result:&quot;+data)</span></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//   使用xlsx读取得到的二进制流文件，转为workbook类型</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> workbook = <span class="variable constant_">XLSX</span>.<span class="title function_">read</span>(data, &#123; <span class="attr">type</span>: <span class="string">&#x27;binary&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//console.log(&#x27;workbook:&#x27;+XLSX.read(data, &#123; type: &#x27;binary&#x27; &#125;))</span></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//   获取第一个表单名字</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> sheetName = workbook.<span class="property">SheetNames</span>[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//   通过表单名字获取对应的表单</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">const</span> sheet = workbook.<span class="property">Sheets</span>[sheetName]  </span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//console.log(workbook.Sheets[sheetName])</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//将表单转为JSON类型</span></span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">this</span>.<span class="property">jsonData</span> = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">sheet_to_json</span>(sheet)</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">       &#125;)</span></span><br><span class="line"><span class="language-javascript">     &#125;,</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="title function_">readFile</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;read file&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 由于使用的是ref标记，因此需要使用this.$refs.fileInput调用</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">const</span> file = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">fileInput</span>.<span class="property">files</span>[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">if</span> (!file) <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript">           <span class="comment">//console.log(&#x27;not null&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">this</span>.<span class="property">reader</span>.<span class="title function_">readAsBinaryString</span>(file)</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">//console.log(this.reader)</span></span></span><br><span class="line"><span class="language-javascript">       &#125;,</span></span><br><span class="line"><span class="language-javascript">       <span class="title function_">writeFile</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">           </span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 将 JSON 数据转换为工作表</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">const</span> sheet = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">json_to_sheet</span>(<span class="variable language_">this</span>.<span class="property">jsonData</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 将工作表转换为工作簿</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">const</span> workbook = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>()</span></span><br><span class="line"><span class="language-javascript">           <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_append_sheet</span>(workbook, sheet, <span class="string">&#x27;Sheet1&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 写入文件</span></span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(workbook, &#123; <span class="attr">bookType</span>: <span class="string">&#x27;xlsx&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;array&#x27;</span> &#125;)], &#123; <span class="attr">type</span>: <span class="string">&#x27;application/octet-stream&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">           <span class="title function_">saveAs</span>(blob, <span class="string">&#x27;data.xlsx&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">       &#125;,</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">   <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(app).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>xlxs.js中需要用workbook装sheet表单，sheet表单内存着各行各列的数据。最后封装导出时需要用到FileSaver.js库，使用 FileSaver.js 很简单，只需调用 saveAs() 函数即可。saveAs() 函数需要两个参数：文件的 Blob 对象和文件名。</p>
<p>例如，如果要保存一个文本文件，可以使用以下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&#x27;file-saver&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">downloadTextFile</span>(<span class="params">text</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([text], &#123; <span class="attr">type</span>: <span class="string">&#x27;text/plain&#x27;</span> &#125;)</span><br><span class="line">  <span class="title function_">saveAs</span>(blob, <span class="string">&#x27;text-file.txt&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>保存xlsx文件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="variable constant_">XLSX</span> <span class="keyword">from</span> <span class="string">&#x27;xlsx&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&#x27;file-saver&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">downloadExcel</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> ws = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">aoa_to_sheet</span>(data)</span><br><span class="line">  <span class="keyword">const</span> wb = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>()</span><br><span class="line">  <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_append_sheet</span>(wb, ws, <span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, &#123; <span class="attr">bookType</span>: <span class="string">&#x27;xlsx&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;array&#x27;</span> &#125;)], &#123; <span class="attr">type</span>: <span class="string">&#x27;application/octet-stream&#x27;</span> &#125;)</span><br><span class="line">  <span class="title function_">saveAs</span>(blob, <span class="string">&#x27;data.xlsx&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>上面的代码首先使用 XLSX.utils.aoa_to_sheet() 将数据转换为工作表对象，然后使用 XLSX.utils.book_new() 创建新的工作簿对象。最后，使用 XLSX.utils.book_append_sheet() 将工作表添加到工作簿中，并使用 XLSX.write() 将工作簿转换为二进制数组。然后，将二进制数组包装在 Blob 对象中，并使用 saveAs() 函数将文件保存到用户计算机。</p>
</blockquote>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p>xlsx.js使用教程: <a href="https://blog.csdn.net/GFing18/article/details/125523446">https://blog.csdn.net/GFing18/article/details/125523446</a></p>
<p>xlsx.js官方文档：<a href="https://github.com/exceljs/exceljs/blob/HEAD/README_zh.md">https://github.com/exceljs/exceljs/blob/HEAD/README_zh.md</a></p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>vue</tag>
        <tag>前端</tag>
        <tag>xlsx.js</tag>
      </tags>
  </entry>
  <entry>
    <title>《信息安全基础》复习大纲</title>
    <url>/2022/06/08/%E3%80%8A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E3%80%8B%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/</url>
    <content><![CDATA[<h1 id="第1章：安全体系结构与模型"><a href="#第1章：安全体系结构与模型" class="headerlink" title="第1章：安全体系结构与模型"></a>第1章：安全体系结构与模型</h1><ul>
<li><input checked="" disabled="" type="checkbox"> CIA 三元组的含义</li>
<li><input checked="" disabled="" type="checkbox"> OSI安全体系结构内容与含义</li>
<li><input checked="" disabled="" type="checkbox"> 主动攻击与被动攻击的含义与区别</li>
</ul>
<h1 id="第二章：对称加密算法"><a href="#第二章：对称加密算法" class="headerlink" title="第二章：对称加密算法"></a>第二章：对称加密算法</h1><ul>
<li><p><input checked="" disabled="" type="checkbox"> 
对称加密模型组成部分</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
对称加密安全要求</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
加密消息攻击类型</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
加密方案计算安全条件</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
DES加密核心过程(理解框架流程，不考具体细节）</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
DES优缺点</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
加密算法强度分析内容</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
3DES加解密原理</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
3DES优缺点</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
AES基本概念</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
AES优点</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
随机数要求</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
随机数生成方法</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
流密码基本原理</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
分组密码与流密码对比</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
分组密码工作模式作用与分类</p>
</li>
</ul>
<h1 id="第三章：公钥密码和消息认证"><a href="#第三章：公钥密码和消息认证" class="headerlink" title="第三章：公钥密码和消息认证"></a>第三章：公钥密码和消息认证</h1><ul>
<li><p><input checked="" disabled="" type="checkbox"> 
哈希函数原理及应用</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
密码学哈希函数应用</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
哈希函数的安全需求</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
常见的哈希函数</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
消息认证码原理</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
公钥密码组成部分</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
公钥加解密流程</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
公钥加密用途</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
RSA加密算法</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
Diffie-Hellman算法</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
数字签名的作用、流程</p>
</li>
</ul>
<h1 id="第四章：密钥分配和用户认证"><a href="#第四章：密钥分配和用户认证" class="headerlink" title="第四章：密钥分配和用户认证"></a>第四章：密钥分配和用户认证</h1><ul>
<li><input checked="" disabled="" type="checkbox"> 密钥分发方案与对应原理</li>
<li><input checked="" disabled="" type="checkbox"> Kerberos应用场景与基本元素</li>
<li><input checked="" disabled="" type="checkbox"> 公钥证书使用的原理与流程</li>
<li><input checked="" disabled="" type="checkbox"> X.509证书用途</li>
</ul>
<h1 id="第六章-传输层安全"><a href="#第六章-传输层安全" class="headerlink" title="第六章 传输层安全"></a>第六章 传输层安全</h1><ul>
<li><p><input checked="" disabled="" type="checkbox"> 
根据网络通信特性，提供Web安全的途径</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
TLS体系结构内容</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
TLS记录协议工作流程</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
TLS握手协议作用</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
HTTPS的含义</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
SSH的含义</p>
</li>
</ul>
<h1 id="第八章-电子邮件安全"><a href="#第八章-电子邮件安全" class="headerlink" title="第八章 电子邮件安全"></a>第八章 电子邮件安全</h1><ul>
<li><input checked="" disabled="" type="checkbox"> 电子邮件安全威胁及应对办法</li>
<li><input checked="" disabled="" type="checkbox"> S&#x2F;MIME含义</li>
</ul>
<h1 id="第九章-IP安全"><a href="#第九章-IP安全" class="headerlink" title="第九章 IP安全"></a>第九章 IP安全</h1><ul>
<li><input checked="" disabled="" type="checkbox"> IP安全基本原理</li>
<li><input checked="" disabled="" type="checkbox"> IPSec优点</li>
<li><input checked="" disabled="" type="checkbox"> IPSec模式分类</li>
<li><input disabled="" type="checkbox"> IP安全与传输层安全对比</li>
<li><input checked="" disabled="" type="checkbox"> IPSec防止重放服务</li>
</ul>
<h1 id="第十章-系统安全"><a href="#第十章-系统安全" class="headerlink" title="第十章 系统安全"></a>第十章 系统安全</h1><ul>
<li><input checked="" disabled="" type="checkbox"> DDOS防护措施</li>
<li><input checked="" disabled="" type="checkbox"> 口令文件保护方式</li>
<li><input checked="" disabled="" type="checkbox"> 口令加盐</li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
      </tags>
  </entry>
  <entry>
    <title>一些AI飞升对比</title>
    <url>/2022/10/14/%E4%B8%80%E4%BA%9BAI%E9%A3%9E%E5%8D%87%E5%AF%B9%E6%AF%94-yi-xie-ai-fei-sheng-dui-bi/</url>
    <content><![CDATA[<p>最近在玩Novelai，感叹AI的进步速度，同时把以前的老画用AI飞升了。<br><img src="/upload/2022/10/002.png" alt="002"><br><img src="/upload/2022/10/006.png" alt="006"><br><img src="/upload/2022/10/003.png" alt="003"><br><img src="/upload/2022/10/004.png" alt="004"><br><img src="/upload/2022/10/005.png" alt="005"><br><img src="/upload/2022/10/001.png" alt="001"><br><img src="/upload/2022/10/000.png" alt="000"></p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>一些好玩的html效果</title>
    <url>/2022/05/09/%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84html%E6%95%88%E6%9E%9C-%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84html%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h1 id="透明波浪效果"><a href="#透明波浪效果" class="headerlink" title="透明波浪效果"></a>透明波浪效果</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hans-bolang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://api.vvhan.com/api/bolang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="梅花特效"><a href="#梅花特效" class="headerlink" title="梅花特效"></a>梅花特效</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;https://api.vvhan.com/api/meihua&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="春节灯笼"><a href="#春节灯笼" class="headerlink" title="春节灯笼"></a>春节灯笼</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://api.vvhan.com/api/denglong&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="雪花"><a href="#雪花" class="headerlink" title="雪花"></a>雪花</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;https://api.vvhan.com/api/snow&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="樱花"><a href="#樱花" class="headerlink" title="樱花"></a>樱花</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://api.vvhan.com/api/yinghua&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<script src="https://api.vvhan.com/api/yinghua"></script>]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>个人硬件清单</title>
    <url>/2023/01/09/%E4%B8%AA%E4%BA%BA%E7%A1%AC%E4%BB%B6%E6%B8%85%E5%8D%95-%E4%B8%AA%E4%BA%BA%E7%A1%AC%E4%BB%B6%E6%B8%85%E5%8D%95/</url>
    <content><![CDATA[<h1 id="笔记本"><a href="#笔记本" class="headerlink" title="笔记本"></a>笔记本</h1><p>拯救者y7000-2019</p>
<ul>
<li>CPU：i5 9300H</li>
<li>GPU：NVIDIA GeForce GTX1650-4g</li>
<li>内存：联想DDR4-3200-8G*2</li>
<li>硬盘：<ul>
<li>机械：希捷st2000lm015-2T- 5400转</li>
<li>固态：三星MZVLB1T0-1T</li>
</ul>
</li>
</ul>
<h1 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h1><ul>
<li>雷蛇：毒蝰mini</li>
<li>罗技：M590</li>
</ul>
<h1 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h1><ul>
<li>罗技：k780</li>
<li>机械师：k600-普鲁士蓝-100键</li>
</ul>
<h1 id="屏幕"><a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h1><ul>
<li>三星C32F391FWC-32寸-曲面1800（对比度稀烂）</li>
<li>Dasung Paperlike HD-FT-13.3寸-水墨屏</li>
</ul>
<h1 id="平板"><a href="#平板" class="headerlink" title="平板"></a>平板</h1><ul>
<li>iPadPro-2020 2代pencil <del>（我是伞兵为什么不等2021上m1）</del></li>
</ul>
<h1 id="手柄"><a href="#手柄" class="headerlink" title="手柄"></a>手柄</h1><ul>
<li><del>飞智：黑武士一代</del></li>
<li>Xbox One-无线</li>
</ul>
<h1 id="耳机"><a href="#耳机" class="headerlink" title="耳机"></a>耳机</h1><ul>
<li>beats-flex</li>
<li>AKG K451</li>
<li>fill cc pro2</li>
</ul>
<h1 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h1><ul>
<li>Kindle Paperwhite 4</li>
</ul>
<h1 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a>树莓派</h1><p>4B-4G</p>
<ul>
<li>显示屏：<ul>
<li>微雪：1.54inch e-Paper</li>
<li>OLED-0.96inch-SSD1306</li>
</ul>
</li>
<li>机械硬盘：1T-5400转</li>
</ul>
<h1 id="SteamDeck"><a href="#SteamDeck" class="headerlink" title="SteamDeck"></a>SteamDeck</h1><p> 美版64g</p>
<ul>
<li>固态：西数SN530-1T</li>
</ul>
<h1 id="数位板"><a href="#数位板" class="headerlink" title="数位板"></a>数位板</h1><ul>
<li>Wacom672</li>
</ul>
<h1 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h1><ul>
<li>荣耀v20-128g</li>
</ul>
<h1 id="其他乱七八糟的东西"><a href="#其他乱七八糟的东西" class="headerlink" title="其他乱七八糟的东西"></a>其他乱七八糟的东西</h1><ul>
<li>人体工学椅：西昊M18</li>
<li>手柄电池：南孚锂电池2775mWh</li>
<li>mp3：飞利浦SA2208</li>
</ul>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>个人硬件清单</title>
    <url>/2023/01/09/%E4%B8%AA%E4%BA%BA%E7%A1%AC%E4%BB%B6%E6%B8%85%E5%8D%95/</url>
    <content><![CDATA[<h1 id="笔记本"><a href="#笔记本" class="headerlink" title="笔记本"></a>笔记本</h1><p>拯救者y7000-2019</p>
<ul>
<li>CPU：i5 9300H</li>
<li>GPU：NVIDIA GeForce GTX1650-4g</li>
<li>内存：联想DDR4-3200-8G*2</li>
<li>硬盘：<ul>
<li>机械：希捷st2000lm015-2T- 5400转</li>
<li>固态：三星MZVLB1T0-1T</li>
</ul>
</li>
</ul>
<h1 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h1><ul>
<li>雷蛇：毒蝰mini</li>
<li>罗技：M590</li>
</ul>
<h1 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h1><ul>
<li>罗技：k780</li>
<li>机械师：k600-普鲁士蓝-100键</li>
</ul>
<h1 id="屏幕"><a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h1><ul>
<li>三星C32F391FWC-32寸-曲面1800（对比度稀烂）</li>
<li>Dasung Paperlike HD-FT-13.3寸-水墨屏</li>
</ul>
<h1 id="平板"><a href="#平板" class="headerlink" title="平板"></a>平板</h1><ul>
<li>iPadPro-2020 2代pencil <del>（我是伞兵为什么不等2021上m1）</del></li>
</ul>
<h1 id="手柄"><a href="#手柄" class="headerlink" title="手柄"></a>手柄</h1><ul>
<li><del>飞智：黑武士一代</del></li>
<li>Xbox One-无线</li>
</ul>
<h1 id="耳机"><a href="#耳机" class="headerlink" title="耳机"></a>耳机</h1><ul>
<li>beats-flex</li>
<li>AKG K451</li>
<li>fill cc pro2</li>
</ul>
<h1 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h1><ul>
<li>Kindle Paperwhite 4</li>
</ul>
<h1 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a>树莓派</h1><p>4B-4G</p>
<ul>
<li>显示屏：<ul>
<li>微雪：1.54inch e-Paper</li>
<li>OLED-0.96inch-SSD1306</li>
</ul>
</li>
<li>机械硬盘：1T-5400转</li>
</ul>
<h1 id="SteamDeck"><a href="#SteamDeck" class="headerlink" title="SteamDeck"></a>SteamDeck</h1><p> 美版64g</p>
<ul>
<li>固态：西数SN530-1T</li>
</ul>
<h1 id="数位板"><a href="#数位板" class="headerlink" title="数位板"></a>数位板</h1><ul>
<li>Wacom672</li>
</ul>
<h1 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h1><ul>
<li>荣耀v20-128g</li>
</ul>
<h1 id="其他乱七八糟的东西"><a href="#其他乱七八糟的东西" class="headerlink" title="其他乱七八糟的东西"></a>其他乱七八糟的东西</h1><ul>
<li>人体工学椅：西昊M18</li>
<li>手柄电池：南孚锂电池2775mWh</li>
</ul>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始mcmod开发-00</title>
    <url>/2022/11/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bmcmod%E5%BC%80%E5%8F%91-00-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bmcmod%E5%BC%80%E5%8F%91-00/</url>
    <content><![CDATA[<h1 id="一些教程"><a href="#一些教程" class="headerlink" title="一些教程"></a>一些教程</h1><h2 id="视频类"><a href="#视频类" class="headerlink" title="视频类"></a>视频类</h2><h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><ul>
<li>一个比较老的教程<a href="https://fmltutor.ustc-zzzz.net/">https://fmltutor.ustc-zzzz.net/</a></li>
<li>Forge1.12的中文文档<a href="https://mcforge-cn.readthedocs.io/zh/latest/">https://mcforge-cn.readthedocs.io/zh/latest/</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>从零开始mcmod开发-02</title>
    <url>/2022/11/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bmcmod%E5%BC%80%E5%8F%91-02-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bmcmod%E5%BC%80%E5%8F%91-02/</url>
    <content><![CDATA[<h1 id="MDK文件结构及说明"><a href="#MDK文件结构及说明" class="headerlink" title="MDK文件结构及说明"></a>MDK文件结构及说明</h1><h1 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h1><h1 id="build"><a href="#build" class="headerlink" title="build"></a>build</h1><h1 id="src"><a href="#src" class="headerlink" title="src"></a>src</h1><h2 id="main"><a href="#main" class="headerlink" title="main"></a>main</h2><h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><h3 id="resources"><a href="#resources" class="headerlink" title="resources"></a>resources</h3><h4 id="META-INF"><a href="#META-INF" class="headerlink" title="META-INF"></a>META-INF</h4><h5 id="mods-toml-这个是编辑mod信息的文件，在游戏中mod名字，介绍，mod图标都在这。"><a href="#mods-toml-这个是编辑mod信息的文件，在游戏中mod名字，介绍，mod图标都在这。" class="headerlink" title="mods.toml 这个是编辑mod信息的文件，在游戏中mod名字，介绍，mod图标都在这。"></a>mods.toml 这个是编辑mod信息的文件，在游戏中mod名字，介绍，mod图标都在这。</h5><h1 id="build-gradle文件"><a href="#build-gradle文件" class="headerlink" title="build.gradle文件"></a>build.gradle文件</h1>]]></content>
  </entry>
  <entry>
    <title>从零开始mcmod开发-01</title>
    <url>/2022/11/18/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bmcmod%E5%BC%80%E5%8F%91-01-cong-ling-kai-shi-mcmod-kai-fa--01/</url>
    <content><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><ol>
<li>下载MDK<br> 下载地址<a href="https://files.minecraftforge.net/net/minecraftforge/forge/">https://files.minecraftforge.net/net/minecraftforge/forge/</a><br> Q:什么是MDK？<br> A:MDK是Mod Development Kit缩写，是FORGE开发的工具箱</li>
<li>开发工具选择<br> 官方说明中是只对Eclipse做支持，但是也可以使用其他开发环境，例如IDEA。</li>
<li>使用IDEA打开解压后的MDK文件，使用gradle导入必要环境。<br> gradle成功导入后可以看到IDEA左边有Gradle的各选项。</li>
</ol>
<h1 id="模组开发的基本操作"><a href="#模组开发的基本操作" class="headerlink" title="模组开发的基本操作"></a>模组开发的基本操作</h1><h2 id="在哪写？"><a href="#在哪写？" class="headerlink" title="在哪写？"></a>在哪写？</h2><p>在src.main.java下创建软件包，并在里面编写。</p>
<h2 id="怎么测试？"><a href="#怎么测试？" class="headerlink" title="怎么测试？"></a>怎么测试？</h2><p>IDEA右侧Gradle栏中Tasks.forgegradle runs.runClient或runServer</p>
<h2 id="怎么打包"><a href="#怎么打包" class="headerlink" title="怎么打包"></a>怎么打包</h2><p>IDEA右侧Gradle栏中Tasks.build.build打包，打包后的jar文件在build.libs文件夹内</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://docs.minecraftforge.net/en/1.18.x">FORGE官方文档</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>mcmod开发</tag>
      </tags>
  </entry>
  <entry>
    <title>伪焦散笔记</title>
    <url>/2022/06/04/%E4%BC%AA%E7%84%A6%E6%95%A3%E7%AC%94%E8%AE%B0-%E4%BC%AA%E7%84%A6%E6%95%A3%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h1>]]></content>
  </entry>
  <entry>
    <title>使用HMCL自动更新服务器客户端</title>
    <url>/2023/01/11/%E4%BD%BF%E7%94%A8HMCL%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    <content><![CDATA[<blockquote>
<p>阅读本文前，请先阅读HMCL官方文章：<a href="https://hmcl.huangyuhui.net/help/launcher/serverpack.html">https://hmcl.huangyuhui.net/help/launcher/serverpack.html</a></p>
</blockquote>
<p>本文是HMCL官方文章的一些补充，以及Nginx静态资源示例。</p>
<h1 id="配置静态资源网站"><a href="#配置静态资源网站" class="headerlink" title="配置静态资源网站"></a>配置静态资源网站</h1><p>这里有两种解决方案：</p>
<ol>
<li>使用GitHub来当静态资源网站，好处是可以白嫖，坏处是国内访问GitHub处于<em>量子叠加态</em>时好时坏，本来是可以使用Gitee的，但是现在Gitee倒了，开源仓库需要审核。</li>
<li>自行搭建静态资源网站，其实对于各位腐竹来说这个选择也不错，因为本身就有服务器，只需要搭建一下静态资源服务器就可以使用。</li>
</ol>
<p>对于以上两种解决方案各位自行选择。<br>这里提供参考资料：</p>
<ol>
<li>使用GitHub第三方静态资源网站教程：<a href="https://www.bilibili.com/video/BV1hu411C7BZ">https://www.bilibili.com/video/BV1hu411C7BZ</a></li>
<li>自行搭建静态资源服务器，参考我之前的文章：Nginx静态资源服务器使用 <a href="https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/">https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/</a></li>
</ol>
<p><strong>本篇将以Nginx做静态资源服务器为例，所以请看第二篇<a href="https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/">Nginx静态资源服务器使用</a> 。</strong></p>
<h1 id="导出整合包"><a href="#导出整合包" class="headerlink" title="导出整合包"></a>导出整合包</h1><p><img src="https://s2.loli.net/2023/01/11/JwLryPXjdU8HEKo.png" alt="image.png"><br>选择服务器自动更新整合包<br><img src="https://s2.loli.net/2023/01/11/Yr2e5N1qXAuMiIx.png" alt="image.png"><br><strong>整合包下载链接前缀</strong>：填静态资源服务器的地址。<br>我们从<a href="https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/">Nginx静态资源服务器使用</a>这篇文章继续，我们需要先去静态资源文件夹下新建一个modepack文件夹（也就是&#x2F;MinecraftClientStatic&#x2F;modepack），然后整合包下载链接前缀这里填写<code>http://minecraft.buggzd.com/modepack</code><br><img src="https://s2.loli.net/2023/01/11/PQfCEkdVAoqm1Ru.png" alt="image.png"></p>
<h1 id="上传整合包到静态资源服务器"><a href="#上传整合包到静态资源服务器" class="headerlink" title="上传整合包到静态资源服务器"></a>上传整合包到静态资源服务器</h1><p>假设我们刚刚打包的整合包名称为<code>client1.0.zip</code><br>我们把<code>client1.0.zip</code>通过ftp上传到服务器中，然后使用解压命令将这个整合包解压到<code>/MinecraftClientStatic/modepack</code>文件夹中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">假设我们把client1.0.zip上传到了/home/ftp文件夹中</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把 /home/ftp/client1.0.zip 解压到 /minecraftClientStatic/modepack</span></span><br><span class="line">unzip /home/ftp/client1.0.zip -d /minecraftClientStatic/modepack</span><br></pre></td></tr></table></figure>
<p>解压完以后我们查看一下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls /minecraftClientStatic/modepack</span><br></pre></td></tr></table></figure>
<p>服务器返回：</p>
<p><font color="blue">overrides</font> server-manifest.json</p>
<p>其中overrides是一个文件夹，server-manifest.json是整合包配置文件。</p>
<h1 id="客户端初始化"><a href="#客户端初始化" class="headerlink" title="客户端初始化"></a>客户端初始化</h1><p>第一次使用客户端需要在一个空文件夹中放一个hmcl启动器，打开hmcl导入刚刚做好的<code>client1.0.zip</code>。<br>然后就可以把这个文件夹打包成一个zip发给玩家了，以后玩家每次打开hmcl登录时，hmcl就会自动向静态资源服务器中查询整合包配置信息，当发现更新时会自动下载。<br>当缺少mod时会自动下载静态资源服务器上的mod<br><img src="https://s2.loli.net/2023/01/11/WpD4Xm7i561YbIj.png" alt="image.png"></p>
<h1 id="更新客户端"><a href="#更新客户端" class="headerlink" title="更新客户端"></a>更新客户端</h1><p>目前HMCL版本更新的步骤是这样的：</p>
<ol>
<li>hmcl对比本地的mod和服务器的mod<strong>名称</strong>，发现服务器上存在本地不存在的mod，把不存在的mod下载。</li>
<li>对比名称相同的mod，当对比的mod存在<strong>名称相同时</strong>，对比其<strong>MD5哈希值</strong>，如果哈希值不匹配则重新下载服务器上的mod。</li>
<li>在获得更新的时候对比一次本地的文件，如果以前版本的模组在新的版本没有了，hmcl会自动将本地的这个模组删除</li>
</ol>
<p>当想要添加新的mod，添加后需要重新导出整合包，导出的整合包版本++，然后重新上传整合包到静态资源服务器，玩家打开hmcl点击启动后，HMCL就会检测到版本更新，自动更新mod。</p>
<blockquote>
<p>参考资料：<br>HMCL官方文章：<a href="https://hmcl.huangyuhui.net/help/launcher/serverpack.html">https://hmcl.huangyuhui.net/help/launcher/serverpack.html</a><br>使用Gitee作为静态资源服务器：<a href="https://www.kdocs.cn/l/ck0hwms5llq8">https://www.kdocs.cn/l/ck0hwms5llq8</a><br>Nginx配置静态资源服务器：<a href="https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/">https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>实用类</tag>
        <tag>mc</tag>
      </tags>
  </entry>
  <entry>
    <title>使用HMCL自动更新服务器客户端</title>
    <url>/2023/01/11/%E4%BD%BF%E7%94%A8HMCL%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF-%E4%BD%BF%E7%94%A8hmcl%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    <content><![CDATA[<blockquote>
<p>阅读本文前，请先阅读HMCL官方文章：<a href="https://hmcl.huangyuhui.net/help/launcher/serverpack.html">https://hmcl.huangyuhui.net/help/launcher/serverpack.html</a></p>
</blockquote>
<p>本文是HMCL官方文章的一些补充，以及Nginx静态资源示例。</p>
<h1 id="配置静态资源网站"><a href="#配置静态资源网站" class="headerlink" title="配置静态资源网站"></a>配置静态资源网站</h1><p>这里有两种解决方案：</p>
<ol>
<li>使用GitHub来当静态资源网站，好处是可以白嫖，坏处是国内访问GitHub处于<em>量子叠加态</em>时好时坏，本来是可以使用Gitee的，但是现在Gitee倒了，开源仓库需要审核。</li>
<li>自行搭建静态资源网站，其实对于各位腐竹来说这个选择也不错，因为本身就有服务器，只需要搭建一下静态资源服务器就可以使用。</li>
</ol>
<p>对于以上两种解决方案各位自行选择。<br>这里提供参考资料：</p>
<ol>
<li>使用GitHub第三方静态资源网站教程：<a href="https://www.bilibili.com/video/BV1hu411C7BZ">https://www.bilibili.com/video/BV1hu411C7BZ</a></li>
<li>自行搭建静态资源服务器，参考我之前的文章：Nginx静态资源服务器使用 <a href="https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/">https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/</a></li>
</ol>
<p><strong>本篇将以Nginx做静态资源服务器为例，所以请看第二篇<a href="https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/">Nginx静态资源服务器使用</a> 。</strong></p>
<h1 id="导出整合包"><a href="#导出整合包" class="headerlink" title="导出整合包"></a>导出整合包</h1><p><img src="https://s2.loli.net/2023/01/11/JwLryPXjdU8HEKo.png" alt="image.png"><br>选择服务器自动更新整合包<br><img src="https://s2.loli.net/2023/01/11/Yr2e5N1qXAuMiIx.png" alt="image.png"><br><strong>整合包下载链接前缀</strong>：填静态资源服务器的地址。<br>我们从<a href="https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/">Nginx静态资源服务器使用</a>这篇文章继续，我们需要先去静态资源文件夹下新建一个modepack文件夹（也就是&#x2F;MinecraftClientStatic&#x2F;modepack），然后整合包下载链接前缀这里填写<code>http://minecraft.buggzd.com/modepack</code><br><img src="https://s2.loli.net/2023/01/11/PQfCEkdVAoqm1Ru.png" alt="image.png"></p>
<h1 id="上传整合包到静态资源服务器"><a href="#上传整合包到静态资源服务器" class="headerlink" title="上传整合包到静态资源服务器"></a>上传整合包到静态资源服务器</h1><p>假设我们刚刚打包的整合包名称为<code>client1.0.zip</code><br>我们把<code>client1.0.zip</code>通过ftp上传到服务器中，然后使用解压命令将这个整合包解压到<code>/MinecraftClientStatic/modepack</code>文件夹中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">假设我们把client1.0.zip上传到了/home/ftp文件夹中</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把 /home/ftp/client1.0.zip 解压到 /minecraftClientStatic/modepack</span></span><br><span class="line">unzip /home/ftp/client1.0.zip -d /minecraftClientStatic/modepack</span><br></pre></td></tr></table></figure>
<p>解压完以后我们查看一下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls /minecraftClientStatic/modepack</span><br></pre></td></tr></table></figure>
<p>服务器返回：</p>
<p><font color="blue">overrides</font> server-manifest.json</p>
<p>其中overrides是一个文件夹，server-manifest.json是整合包配置文件。</p>
<h1 id="客户端初始化"><a href="#客户端初始化" class="headerlink" title="客户端初始化"></a>客户端初始化</h1><p>第一次使用客户端需要在一个空文件夹中放一个hmcl启动器，打开hmcl导入刚刚做好的<code>client1.0.zip</code>。<br>然后就可以把这个文件夹打包成一个zip发给玩家了，以后玩家每次打开hmcl登录时，hmcl就会自动向静态资源服务器中查询整合包配置信息，当发现更新时会自动下载。<br>当缺少mod时会自动下载静态资源服务器上的mod<br><img src="https://s2.loli.net/2023/01/11/WpD4Xm7i561YbIj.png" alt="image.png"></p>
<h1 id="更新客户端"><a href="#更新客户端" class="headerlink" title="更新客户端"></a>更新客户端</h1><p>目前HMCL版本更新的步骤是这样的：</p>
<ol>
<li>hmcl对比本地的mod和服务器的mod<strong>名称</strong>，发现服务器上存在本地不存在的mod，把不存在的mod下载。</li>
<li>对比名称相同的mod，当对比的mod存在<strong>名称相同时</strong>，对比其<strong>MD5哈希值</strong>，如果哈希值不匹配则重新下载服务器上的mod。</li>
<li>在获得更新的时候对比一次本地的文件，如果以前版本的模组在新的版本没有了，hmcl会自动将本地的这个模组删除</li>
<li>在不通过远端服务器更新的资源都不回被下次更新删除，换句话说就是如果是玩家自己魔改整合包，往里面放的mod是不会被删除的。</li>
</ol>
<p>当想要添加新的mod，添加后需要重新导出整合包，导出的整合包版本++，然后重新上传整合包到静态资源服务器，玩家打开hmcl点击启动后，HMCL就会检测到版本更新，自动更新mod。</p>
<blockquote>
<p>参考资料：<br>HMCL官方文章：<a href="https://hmcl.huangyuhui.net/help/launcher/serverpack.html">https://hmcl.huangyuhui.net/help/launcher/serverpack.html</a><br>使用Gitee作为静态资源服务器：<a href="https://www.kdocs.cn/l/ck0hwms5llq8">https://www.kdocs.cn/l/ck0hwms5llq8</a><br>Nginx配置静态资源服务器：<a href="https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/">https://buggzd.github.io/2023/01/11/Nginx%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>mc</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>制作透明背景GIF</title>
    <url>/2022/04/28/%E5%88%B6%E4%BD%9C%E9%80%8F%E6%98%8E%E8%83%8C%E6%99%AFGIF-%E5%88%B6%E4%BD%9C%E9%80%8F%E6%98%8E%E8%83%8C%E6%99%AFgif/</url>
    <content><![CDATA[<h1 id="素材准备"><a href="#素材准备" class="headerlink" title="素材准备"></a>素材准备</h1><p>使用的视频素材：绿幕素材（可以在b站搜b站的视频用<a href="https://www.aconvert.com/cn/video/">flv转换网站</a>，油管找Green Screen）</p>
<p>使用的软件：PS，PR</p>
<h1 id="PR部分"><a href="#PR部分" class="headerlink" title="PR部分"></a>PR部分</h1><ol>
<li>导入视频，添加超级键去除绿幕</li>
<li>导出媒体为PNG（带alpha通道）帧序列，我喜欢的大小为700*700,12.5hz</li>
</ol>
<h1 id="PS部分"><a href="#PS部分" class="headerlink" title="PS部分"></a>PS部分</h1><ol>
<li>拉入一张图片，点击下方创建时间轴</li>
<li>时间轴右边导入把剩余的关键帧也导入</li>
<li>时间轴左下角切换到帧动画，全选所有帧设置时间为0.02s</li>
<li>导出选择web（旧版）。</li>
</ol>
<p>至此就得到了一张透明的GIF了。<br><img src="/upload/2022/04/spiderman00.gif" alt="spiderman00"></p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>ps</tag>
        <tag>pr</tag>
      </tags>
  </entry>
  <entry>
    <title>卢正义吃瓜</title>
    <url>/2022/05/10/%E5%8D%A2%E6%AD%A3%E4%B9%89%E5%90%83%E7%93%9C-lu-zheng-yi-chi-gua/</url>
    <content><![CDATA[<h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>卢正义视频被怀疑是机器雕刻，最近的几个视频里都是各种机雕嘲讽，同时截至目前<a href="2022-5-10%E5%8F%B7">^时间</a>，卢正义最近的一次更新是6个月前2021-11-17的视频。</p>
<h1 id="疑点"><a href="#疑点" class="headerlink" title="疑点"></a>疑点</h1><h2 id="1-雕塑没有手工痕迹"><a href="#1-雕塑没有手工痕迹" class="headerlink" title="1. 雕塑没有手工痕迹"></a>1. 雕塑没有手工痕迹</h2><p>卢正义的每一个雕塑都看的打磨过为精细，看起来很像是机器做的东西，我对比了几个越南木雕的视频，他们的很多雕塑都是有风格的，和绘画类似有详有略。</p>
<h2 id="2-缺少细节描绘画面，以及大量空镜特写"><a href="#2-缺少细节描绘画面，以及大量空镜特写" class="headerlink" title="2. 缺少细节描绘画面，以及大量空镜特写"></a>2. 缺少细节描绘画面，以及大量空镜特写</h2><p>并且在知道这个传闻后，我自己又去重新看了一下卢正义的视频，我发现他的每一个视频都是最初一些大致形态的雕刻（这里没有问题），但是越到后面视频却不会展现木雕的主体了，大部分是钻头的特写，老头的特写，木屑的特写，以及各种空镜头（房子，天，鸟，水盆），没有细节雕刻环节是很有问题的，绘画中细节描绘可以占到整个作画过程的一半以上，同理对于木雕而言也是，从最初的体块到基本成型的过程应该只有全过程时间的一半不到，但是每一个视屏都是在这戛然而止，下一个画面就变成了最终使用砂纸打磨的环节了，砂纸只是抛光并不是细节如衣服纹理等雕刻。</p>
<h2 id="3-龟仙人的雕像有梅花顶针痕迹"><a href="#3-龟仙人的雕像有梅花顶针痕迹" class="headerlink" title="3. 龟仙人的雕像有梅花顶针痕迹"></a>3. 龟仙人的雕像有梅花顶针痕迹</h2><p>机器雕刻为了固定木块会使用梅花顶针卡住木块，在某个up主的视频中，他得到了卢正义的真迹，但是看到龟仙人的底座上却存在梅花顶针的凹痕。这里基本就已经石锤了。</p>
<table>
<thead>
<tr>
<th align="center">龟仙人底座</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><img src="/upload/2022/05/image-1652198903209.png" alt="image-1652198903209"></td>
</tr>
</tbody></table>
<h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p>最初看到卢正义的视频的时候，我觉着老头子挺有趣，同时加速的凿木头的声音听起来很解压，但是最后那个“你的每一个点赞和收藏都是对中国传统手艺的传播和认可”让我感到一丝不适，后面对这话也有些思考，他既然是传统手艺，那有没有什么门派？而且为什么还要用电钻？当时也没细想，现在回想起来多少有点讽刺。卢正义后期我没怎么关注了，原因之一是他只发恰饭视频，而且我就是听不惯阿伟的声音，后期阿伟出场太多了。<br>现在吃完瓜感到有些难过，一个风趣手艺人老头的形象在心中崩塌了。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>【揭露卢正义是机雕仙人！】:<a href="https://www.bilibili.com/video/BV1w34y1R7Qp">https://www.bilibili.com/video/BV1w34y1R7Qp</a></p>
]]></content>
      <categories>
        <category>今天吃瓜了吗？</category>
      </categories>
      <tags>
        <tag>吃瓜</tag>
      </tags>
  </entry>
  <entry>
    <title>奇异博士2吃瓜</title>
    <url>/2022/04/29/%E5%A5%87%E5%BC%82%E5%8D%9A%E5%A3%AB2%E5%90%83%E7%93%9C-qi-yi-bo-shi-2-chi-gua/</url>
    <content><![CDATA[<p>今天爆出奇异博士2里有法轮功的大纪元报的宣传，漫威这是觉得自己进不了中国，直接完全摆烂了吗？<br>有个笑话是“终于知道奇异博士为啥要画轮子了”</p>
]]></content>
      <categories>
        <category>今天吃瓜了吗？</category>
      </categories>
      <tags>
        <tag>吃瓜</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在博客里插入B站视频</title>
    <url>/2022/05/04/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%8D%9A%E5%AE%A2%E9%87%8C%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91-%E5%A6%82%E4%BD%95%E5%9C%A8%E5%8D%9A%E5%AE%A2%E9%87%8C%E6%8F%92%E5%85%A5b%E7%AB%99%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><div style="position: relative; padding: 30% 45%;">
<iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=683543453&bvid=BV1fS4y1c7Cd&cid=585405069&page=1"scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>

<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol>
<li>从b站复制视频代码<br><img src="/upload/2022/05/image-1651594096012.png" alt="image-1651594096012"><br>复制出来是这么一坨<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=683543453&amp;bvid=BV1fS4y1c7Cd&amp;cid=585405069&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>粘贴模板<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">模板</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span><span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=683543453&amp;bvid=BV1fS4y1c7Cd&amp;cid=585405069&amp;page=1&quot;</span><span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">sandbox</span>=<span class="string">&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
把src&#x3D;后面那一段用1里的替换。</li>
</ol>
]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>小米手柄吃瓜</title>
    <url>/2022/04/25/%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9F%84%E5%90%83%E7%93%9C-2022-04-25-23-37-12/</url>
    <content><![CDATA[<p><img src="/upload/2022/04/image.png" alt="image"><br>小米要出手柄了，价格一点也不便宜，329稍微加点价格就是一个360手柄了。同时小米的手柄不支持xbox也不支持ns或者ps只支持安卓和pc。不会真有人买吧？阿修罗3不比这香多了。</p>
]]></content>
      <categories>
        <category>今天吃瓜了吗？</category>
      </categories>
      <tags>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>恶霸语录</title>
    <url>/2022/05/02/%E6%81%B6%E9%9C%B8%E8%AF%AD%E5%BD%95-e-ba-yu-lu/</url>
    <content><![CDATA[<p><em>I’m gonna put some dirt in your eye</em></p>
<p><em>I  missed the part where that’s my problem</em></p>
<p><em>You’ll get your rent when you fix this damn door!</em></p>
<p><em>My back</em></p>
<p><img src="/upload/2022/04/3.gif" alt="3"></p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>手动Caddy使用NginxSSL将http转https</title>
    <url>/2022/04/23/%E6%89%8B%E5%8A%A8Caddy%E4%BD%BF%E7%94%A8NginxSSL%E5%B0%86http%E8%BD%AChttps-%E6%89%8B%E5%8A%A8caddy%E4%BD%BF%E7%94%A8nginxssl%E5%B0%86http%E8%BD%AChttps/</url>
    <content><![CDATA[<ol>
<li><p>腾讯云上申请免费SSL，下载到服务器</p>
</li>
<li><p>配置Caddyfile文件<br>tls后加pem文件的绝对地址 key文件的绝对地址,代理网址改为https  </p>
 <figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">reverse_proxy localhost:8090</span><br><span class="line">tls &lt;prm绝对路径&gt;空格&lt;key绝对路径&gt; </span><br></pre></td></tr></table></figure></li>
<li><p>重启caddy</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service caddy restart</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
  </entry>
  <entry>
    <title>摸鱼人日历</title>
    <url>/2022/05/11/%E6%91%B8%E9%B1%BC%E4%BA%BA%E6%97%A5%E5%8E%86-mo-yu-ren-ri-li/</url>
    <content><![CDATA[<img src="https://api.vvhan.com/api/moyu">]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>摸鱼</tag>
      </tags>
  </entry>
  <entry>
    <title>昆明好吃的</title>
    <url>/2023/01/09/%E6%98%86%E6%98%8E%E5%A5%BD%E5%90%83%E7%9A%84-kun-ming-hao-chi-de/</url>
    <content><![CDATA[<ol>
<li>味之绝-金鹰店</li>
<li>南强街-太小</li>
<li></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>新 奥特曼观后感</title>
    <url>/2022/10/15/%E6%96%B0%20%E5%A5%A5%E7%89%B9%E6%9B%BC%E8%A7%82%E5%90%8E%E6%84%9F-xin-ao-te-man-guan-hou-gan/</url>
    <content><![CDATA[<ol>
<li>新奥日本票房惨淡是有原因的</li>
<li>先说特效，新奥的vfx比较拉胯，很多都是一眼丁真鉴定为假，唯独可以的还得是粒子（日本粒子vfx领先世界论）</li>
<li>再说镜头语言和构图，我觉得导演是很想用镜头语言讲点故事的，但是平凡使用镜头语言暗喻反而让人感觉在作秀，还有就是很多场面的构图实在是不好看，给人压抑感。</li>
<li>剧情方面，感情戏缺失，小队没有成长线，新人入队却没看到多少磨合期，后面女主就莫名其妙信任奥特曼，给男主送变身器。<br> 逻辑不自洽，扎拉布为了毁灭人类，不想动用武力希望人类内斗而亡，但是却去树立一个“奥特曼对地球是敌人”的概念，当人类有了共同的外部敌人理当更加团结而不是内斗。</li>
<li>演技，主角神永基本没有怎么变换过表情，也可以理解是奥特曼还在融入人类生活，感觉演技比较好的也就特祸队那个物理科学家了。</li>
<li>致敬，全是致敬情怀，如果像我这样奥特曼看的少的这部分基本没有加分。</li>
<li>痞子，后面庵野秀明个人风格非常明显，爆炸，杰顿的类使徒形象，突破at立场，逃离黑洞都很有痞子的个人色彩。</li>
</ol>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>观后感</tag>
      </tags>
  </entry>
  <entry>
    <title>最后一次手动更新客户端指南</title>
    <url>/2023/01/11/%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E6%89%8B%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8C%87%E5%8D%97-zui-hou-yi-ci-shou-dong-geng-xin-ke-hu-duan-zhi-nan/</url>
    <content><![CDATA[<p>大概这是最后一次要求玩家自行更新客户了，以后将会采用hmcl自动更新整合包的方式更新客户端，只需要通上网就能自动更新。</p>
<h1 id="更新方法"><a href="#更新方法" class="headerlink" title="更新方法"></a>更新方法</h1><p>群内下载<code>v7.2客户端.zip</code>，解压文件夹。<br>打开v7.2文件夹里的hmcl启动器。<br>点击左侧的1.18.2<br><img src="https://s2.loli.net/2023/01/11/erojJnNg2fBX1hR.png" alt="image.png"><br>点击浏览-&gt;游戏文件夹<br><img src="https://s2.loli.net/2023/01/11/wYBP3nxmHUb8p7t.png" alt="image.png"><br>同样把之前版本的hmcl也打开然后按照以上步骤打开老版本的游戏文件夹（例如v7版本）。<br>将老版本文件夹中的<code>XaeroWaypoints</code>,<code>XaeroWaypoints_BACKUP032021</code>,<code>XaeroWorldMap</code>三个文件夹复制粘贴到v7.2（新版本）的游戏文件夹中。</p>
<p>粘贴以后你v7.2版本游戏文件夹应该是长这样的<br><img src="https://s2.loli.net/2023/01/11/58pqnVv9fAJ64lx.png" alt="image.png"></p>
<h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><p>记得填游戏ID！</p>
<p>以后每次登录游戏，hmcl会多进行一部验证操作，验证游戏客户端是否是最新，如果有新版本会自动下载更新。</p>
<p><img src="https://s2.loli.net/2023/01/11/l9U2rpVq8JSQt4A.png" alt="image.png"></p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>mc</tag>
      </tags>
  </entry>
  <entry>
    <title>最后一次手动更新指南</title>
    <url>/2023/01/11/%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E6%89%8B%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>大概这是最后一次要求玩家自行更新客户了，以后将会采用hmcl自动更新整合包的方式更新客户端，只需要通上网就能自动更新。</p>
<h1 id="更新方法"><a href="#更新方法" class="headerlink" title="更新方法"></a>更新方法</h1><p>群内下载<code>v7.2客户端.zip</code>，解压文件夹。<br>打开v7.2文件夹里的hmcl启动器。<br>点击左侧的1.18.2<br><img src="https://s2.loli.net/2023/01/11/erojJnNg2fBX1hR.png" alt="image.png"><br>点击浏览-&gt;游戏文件夹<br><img src="https://s2.loli.net/2023/01/11/wYBP3nxmHUb8p7t.png" alt="image.png"><br>同样把之前版本的hmcl也打开然后按照以上步骤打开老版本的游戏文件夹（例如v7版本）。<br>将老版本文件夹中的<code>XaeroWaypoints</code>,<code>XaeroWaypoints_BACKUP032021</code>,<code>XaeroWorldMap</code>三个文件夹复制粘贴到v7.2（新版本）的游戏文件夹中。</p>
<p>粘贴以后你v7.2版本游戏文件夹应该是长这样的<br><img src="https://s2.loli.net/2023/01/11/58pqnVv9fAJ64lx.png" alt="image.png"></p>
<h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><p>记得填游戏ID！</p>
<p>以后每次登录游戏，hmcl会多进行一部验证操作，验证游戏客户端是否是最新，如果有新版本会自动下载更新。</p>
<p><img src="https://s2.loli.net/2023/01/11/l9U2rpVq8JSQt4A.png" alt="image.png"></p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>mc</tag>
      </tags>
  </entry>
  <entry>
    <title>机械动力服务器总结</title>
    <url>/2022/07/29/%E6%9C%BA%E6%A2%B0%E5%8A%A8%E5%8A%9B%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%BB%E7%BB%93-%E6%9C%BA%E6%A2%B0%E5%8A%A8%E5%8A%9B%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h1><p>腾讯海外云香港服务器，2h 4G 60G 30Mb ubuntu20.04 价格54￥&#x2F;月<br>这个配置大概只够3-5人的小型服务器。服务端JVM内存分配我只分配了3G，同时为了服务器其他服务正常工作，对服务器另外划分了4G的虚拟内存。</p>
]]></content>
  </entry>
  <entry>
    <title>泡泡观后感</title>
    <url>/2022/04/29/%E6%B3%A1%E6%B3%A1%E8%A7%82%E5%90%8E%E6%84%9F-bubblereview/</url>
    <content><![CDATA[<h1 id="剧情"><a href="#剧情" class="headerlink" title="剧情"></a>剧情</h1><p>整个故事感觉很平庸，没有什么新颖的，而且基本上就是开头就能猜到结尾，原本我以为我猜的不对，心想“总不会那么俗套吧。”然而是我想太多了，老虚有点被限制发挥了。大概定位就像是美剧里经典的家庭喜剧。</p>
<h1 id="作画"><a href="#作画" class="headerlink" title="作画"></a>作画</h1><p>我吹爆！感觉这电影wit全程在秀肌肉，跑酷片段真的是及其丝滑。画面色彩真的好好看，这次融入了很多插画风格的画面，真的好看。不过由于画面有时存在大量的泡泡，但是泡泡本身的薄膜干涉成彩色，但是这样子画面压缩就会糊，所以建议下10几g的原画。</p>
<h1 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h1><p>Eve+泽野，无需多言。</p>
<h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>这部电影能引发人思考的主旨挺少的，而且很多都是老生常谈的东西了。主题之一就是原子再会。<br>基本思路就是“人都是由原子组成，人死了但原子还在，也许千年万年亿年后，这些原子又聚在了一起，那时‘我’又重生。”<br>这是很经典的一个“身体粉碎”问题，这个思想忽略了人本身的持续性，对于“我是谁”这个问题身体论，大脑论，数据论都是片面的，人从出生就不断的有细胞死亡，有原子被替换。80岁的你和6岁的你都是你，其中无论是脑中存储的数据或是人身体的原子组成都是不同的，但是这两个你都是你，这就是人的连续性。由此我认为《泡泡》中诗已经无了，哪怕所有泡泡再聚到一起那也不再是她。</p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>观后感</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习小组作业</title>
    <url>/2022/09/24/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%84%E4%BD%9C%E4%B8%9A-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%84%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<h1 id="待做"><a href="#待做" class="headerlink" title="待做"></a>待做</h1><ul>
<li>了解项目工作原理<ul>
<li>项目b站介绍<a href="https://www.bilibili.com/video/BV1TU4y1H7u7">https://www.bilibili.com/video/BV1TU4y1H7u7</a></li>
</ul>
</li>
</ul>
<h1 id="已做"><a href="#已做" class="headerlink" title="已做"></a>已做</h1><ul>
<li>运行下载项目，进行可行性测试<ul>
<li>训练测试，在迭代1800次后趋于稳定。</li>
<li>测试集测试无差错。</li>
</ul>
</li>
<li>GitHub项目下载<ul>
<li>项目地址 <a href="https://github.com/JerrybroDu/cats_vs_dogs">https://github.com/JerrybroDu/cats_vs_dogs</a></li>
</ul>
</li>
<li>pycharm-tensorflow-gpu环境配置</li>
<li>下载猫图集<ul>
<li>数据集地址<a href="https://www.kaggle.com/competitions/dogs-vs-cats/data">https://www.kaggle.com/competitions/dogs-vs-cats/data</a></li>
</ul>
</li>
<li>老鼠图集爬取<ul>
<li>爬虫软件<a href="https://github.com/sczhengyabin/Image-Downloader">https://github.com/sczhengyabin/Image-Downloader</a></li>
<li>人工筛选图集 （由于是从百度和bing爬取，会掺有其他图片，需要先进行人工筛选）</li>
<li>爬虫图集中格式转换，由于爬取图片为png，gif，jpg等不同格式，为了统一为jpg格式 需要使用++ps++进行批量图片转换处理。</li>
<li>使用++Image-Downloader++和++Fatkun++插件爬取各种鼠类图片，由于网络上大部分鼠类图片都是仓鼠，因此训练集中仓鼠也占大部分。 </li>
<li>使用++everthing++对图片进行批量重命名</li>
</ul>
</li>
</ul>
<h1 id="数据说明"><a href="#数据说明" class="headerlink" title="数据说明"></a>数据说明</h1><p><strong>老鼠图集</strong>：共1063张，使用1000张作为训练，剩余图像用于测试。</p>
<p><strong>猫图集</strong>：共12500张，使用欠采样，减少猫图集数量至1000，使得正负样本比例均衡。</p>
<h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul>
<li>CPU：i5-9400h</li>
<li>GPU：GTX1650-4g</li>
<li>RAM：16G-DDR4</li>
</ul>
<h2 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h2><ul>
<li>Python 3.7.3</li>
<li>tensorflow-gpu 2.4.0</li>
<li>numpy 1.19.5</li>
<li>CUDA 11.7.57</li>
<li>PyCharm</li>
</ul>
<h1 id="算法说明"><a href="#算法说明" class="headerlink" title="算法说明"></a>算法说明</h1>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>番剧推荐</title>
    <url>/2022/09/21/%E7%95%AA%E5%89%A7%E6%8E%A8%E8%8D%90-fan-ju-tui-jian/</url>
    <content><![CDATA[<h1 id="智斗类"><a href="#智斗类" class="headerlink" title="智斗类"></a>智斗类</h1><ol>
<li>死亡笔记<br> 目前看到的智斗天花板</li>
</ol>
<h1 id="科幻类"><a href="#科幻类" class="headerlink" title="科幻类"></a>科幻类</h1><ol>
<li>命运石之门<br> 回溯类番剧鼻祖。</li>
<li>星际牛仔<br> 披着科幻外壳的鲁邦，究极浪漫，并且本作是赛璐璐动画制作的巅峰。</li>
</ol>
<h1 id="推理"><a href="#推理" class="headerlink" title="推理"></a>推理</h1><ol>
<li>GOSICK<br> 算是我的入坑作品了，很有意思的单元短剧，而且维包子很可爱。</li>
</ol>
<h1 id="异世界"><a href="#异世界" class="headerlink" title="异世界"></a>异世界</h1><ol>
<li>OVERLORD<br> 招牌异世界之作了，龙傲天代表作</li>
<li>关于我转生变成史莱姆这档事<br> 种田向的异世界番</li>
<li>回复术士的重启人生<br> 限制级作品，看着爽就完事了</li>
<li>从零开始的异世界生活<br> 和石头门类似，女主爱蜜莉雅也好看</li>
</ol>
<h1 id="恋爱番"><a href="#恋爱番" class="headerlink" title="恋爱番"></a>恋爱番</h1><ol>
<li>辉夜大小姐想要我告白<br> 第三季封神，既好笑也好嗑</li>
<li>总之就是非常可爱<br> 夫妻日常</li>
</ol>
<h1 id="超能力战斗"><a href="#超能力战斗" class="headerlink" title="超能力战斗"></a>超能力战斗</h1><ol>
<li>普罗米亚<br> 燃的p爆</li>
<li>JOJO的奇妙冒险<br> 王牌热血漫，豆瓣每部都9.9的神作</li>
<li>罪恶王冠<br> 单纯是因为我喜欢祈妹 </li>
<li>一拳超人<br> 第一部，霸权社究极无敌制作</li>
<li>灵能百分百<br> 同样是One老师的作品，也很有意思 </li>
<li>寄生兽<br> 很有意思的漫改，比较血腥猎奇。</li>
</ol>
<h1 id="悲剧"><a href="#悲剧" class="headerlink" title="悲剧"></a>悲剧</h1><ol>
<li>魔法少女小圆<br> 可以反复刷的神作，老虚封神一战</li>
<li>赛博朋克：边缘行者<br> 在夜之城有一半的传奇都在墓碑里，扳机社的超强原创动画</li>
<li>四月是你的谎言<br> 青春恋爱</li>
</ol>
<h1 id="喜剧"><a href="#喜剧" class="headerlink" title="喜剧"></a>喜剧</h1><ol>
<li>碧蓝之海</li>
<li>齐木楠雄的灾难</li>
</ol>
<h1 id="百合"><a href="#百合" class="headerlink" title="百合"></a>百合</h1><ol>
<li>Lycoris Recoil<br> 单纯因为两女主就可以看完一部番。</li>
<li>lovelive<br> 如果奇迹有颜色，那么一定是橙色。</li>
<li>轻音<del>少妇</del>少女<br> 也是音乐番的老牌。</li>
</ol>
<h1 id="机甲战斗"><a href="#机甲战斗" class="headerlink" title="机甲战斗"></a>机甲战斗</h1><ol>
<li>EVA新世纪的福音战士TV版<br> 神作，内涵大量宗教哲学，各个人物都刻画的很饱满，名场面也很多。</li>
</ol>
<h1 id="日常向"><a href="#日常向" class="headerlink" title="日常向"></a>日常向</h1><ol>
<li>粗点心战争<br> 零食小卖铺日常</li>
<li>彻夜之歌</li>
</ol>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>番剧</tag>
      </tags>
  </entry>
  <entry>
    <title>给博客图片插入图注</title>
    <url>/2022/05/13/%E7%BB%99%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E5%9B%BE%E6%B3%A8-%E7%BB%99%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E5%9B%BE%E6%B3%A8/</url>
    <content><![CDATA[<p>示例：</p>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/upload/2022/05/image-1652409758182.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">两相机视图</div>
</center>
直接上模板：

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 0.3125em;</span></span></span><br><span class="line"><span class="string"><span class="tag">    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">&quot;这里放图片地址&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color:orange; border-bottom: 1px solid #d9d9d9;</span></span></span><br><span class="line"><span class="string"><span class="tag">    display: inline-block;</span></span></span><br><span class="line"><span class="string"><span class="tag">    color: #999;</span></span></span><br><span class="line"><span class="string"><span class="tag">    padding: 2px;&quot;</span>&gt;</span>这里是图注<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>html</tag>
        <tag>网页编写</tag>
      </tags>
  </entry>
  <entry>
    <title>网站们</title>
    <url>/2022/04/27/%E7%BD%91%E7%AB%99%E4%BB%AC-webs/</url>
    <content><![CDATA[<h1 id="番剧"><a href="#番剧" class="headerlink" title="番剧"></a>番剧</h1><h2 id="在线"><a href="#在线" class="headerlink" title="在线"></a>在线</h2><p>AGE：<a href="https://www.agemys.com/">https://www.agemys.com/</a></p>
<p>樱花：<a href="http://www.imomoe.live/">http://www.imomoe.live/</a></p>
<p>哔咪：<a href="https://www.bimiacg4.net/">https://www.bimiacg4.net/</a></p>
<p>omo: <a href="https://omofun.tv/">https://omofun.tv/</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>爱恋BT（番剧磁力链接）:<a href="https://www.kisssub.org/">https://www.kisssub.org/</a></p>
<h1 id="美剧-x2F-电影"><a href="#美剧-x2F-电影" class="headerlink" title="美剧&#x2F;电影"></a>美剧&#x2F;电影</h1><h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p>人人：<a href="https://webhd.cc/">https://webhd.cc/</a></p>
<h1 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h1><h2 id="下载-2"><a href="#下载-2" class="headerlink" title="下载"></a>下载</h2><p>毛子的byrutor：<a href="https://s1.byrutor.com/">https://s1.byrutor.com/</a></p>
<p>三大妈： <a href="https://bbs.3dmgame.com/forum.php">https://bbs.3dmgame.com/forum.php</a></p>
<h1 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h1><p>Office安装：<a href="https://otp.landian.vip/zh-cn/">https://otp.landian.vip/zh-cn/</a></p>
<p>各种格式转换(视频，音频，文本)：<a href="https://www.aconvert.com/cn/">https://www.aconvert.com/cn/</a></p>
<p>PDF转换：<a href="https://www.ilovepdf.com/zh-cn">https://www.ilovepdf.com/zh-cn</a></p>
<p>背景音去声：<a href="https://vocalremover.org/ch/">https://vocalremover.org/ch/</a></p>
<p>油猴：<a href="https://greasyfork.org/zh-CN">https://greasyfork.org/zh-CN</a></p>
<p>ZeroTier(内网穿透)：<a href="https://my.zerotier.com/">https://my.zerotier.com/</a></p>
<p>各种API：<a href="https://api.vvhan.com/">https://api.vvhan.com/</a></p>
<h1 id="MC相关"><a href="#MC相关" class="headerlink" title="MC相关"></a>MC相关</h1><p>地图区块查找：<a href="https://chunkbase.com/Minecraft">https://chunkbase.com/Minecraft</a></p>
<p>MCWIKI：<a href="https://minecraft.fandom.com/zh/wiki/Minecraft_Wiki">https://minecraft.fandom.com/zh/wiki/Minecraft_Wiki</a></p>
<h1 id="MMD制作"><a href="#MMD制作" class="headerlink" title="MMD制作"></a>MMD制作</h1><p>模型：<a href="https://www.aplaybox.com/">https://www.aplaybox.com/</a></p>
<h1 id="网页开发"><a href="#网页开发" class="headerlink" title="网页开发"></a>网页开发</h1><p>占位图片：<a href="https://picsum.photos/images">https://picsum.photos/images</a></p>
<p>icon获取：<a href="https://fontawesome.com/icons">https://fontawesome.com/icons</a></p>
<p>纹理背景图：<a href="https://www.toptal.com/designers/subtlepatterns/">https://www.toptal.com/designers/subtlepatterns/</a></p>
<p>随机头像：<a href="https://joeschmoe.io/api/v1/random">https://joeschmoe.io/api/v1/random</a></p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>番剧</tag>
        <tag>工具</tag>
        <tag>实用类</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>腾讯站长验证</title>
    <url>/2022/05/01/%E8%85%BE%E8%AE%AF%E7%AB%99%E9%95%BF%E9%AA%8C%E8%AF%81-teng-xun-zhan-chang-yan-zheng/</url>
    <content><![CDATA[<p>在微信公众号 <em>腾讯安全反诈骗实验室</em> 写下自己的网站，站长验证需要在网站根目录放一个特定名的txt文本同时txt内也有内容要求。查了一下方法，传统PHP可以直接在服务器找到对应的文件夹然后用ftp上传。但是halo可以更简单的进入开发者工具，然后上传静态文件，就是直接放到了根目录。</p>
<blockquote>
<p>参考<br><a href="https://bbs.halo.run/d/2057-adstxt">https://bbs.halo.run/d/2057-adstxt</a></p>
</blockquote>
]]></content>
      <categories>
        <category>网站搭建相关</category>
      </categories>
      <tags>
        <tag>腾讯安全验证</tag>
      </tags>
  </entry>
  <entry>
    <title>解决树莓派硬盘总掉线问题</title>
    <url>/2022/11/29/%E8%A7%A3%E5%86%B3%E6%A0%91%E8%8E%93%E6%B4%BE%E7%A1%AC%E7%9B%98%E6%80%BB%E6%8E%89%E7%BA%BF%E9%97%AE%E9%A2%98-jie-jue-shu-mei-pai-ying-pan-zong-diao-xian-wen-ti/</url>
    <content><![CDATA[<h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><p>用机械硬盘给树莓派做smb服务器硬盘，但是发现挂载的硬盘经常消失，需要重新挂载。</p>
<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>树莓派的usb3.0供电不足，所以机械硬盘会出现断联问题。</p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>购买双usb的硬盘接口线，一根用于供电一根用于数据传输。</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>写一个shell脚本，定期自动检测硬盘自动挂载。</p>
<h3 id="shell如何检测硬盘是否挂载"><a href="#shell如何检测硬盘是否挂载" class="headerlink" title="shell如何检测硬盘是否挂载"></a>shell如何检测硬盘是否挂载</h3><p>使用命令 <em>ls &#x2F;mnt&#x2F;data</em> 可以查看挂载文件夹，如果未挂载则会出现错误提示。<br>shell中使用 <em>$?</em> 可以得到上一条命令的返回值，默认正常情况下返回值为0，异常状态则不为0.<br>因此可以通过判断该命令的返回值，确定硬盘是否挂载。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">file=`ls /mnt/data`</span><br><span class="line">flag=$?</span><br><span class="line">if [ $flag == 0 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;已挂载&quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot;未挂载&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h3 id="如何挂载硬盘"><a href="#如何挂载硬盘" class="headerlink" title="如何挂载硬盘"></a>如何挂载硬盘</h3><p>linux挂载硬盘有两种方式，一种是直接写硬盘目录挂载，另一种则是用UUID的方式挂载，由于机械硬盘总是会断联，每次硬盘目录都会发生变化，因此选用UUID的方式挂载。<br><strong>查看硬盘UUID</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure>
<p><strong>挂载</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mount UUID=9a13874f-40f0-0747-aa7e-88f484803037 /mnt/data</span><br></pre></td></tr></table></figure>
<h3 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a>shell脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">file=`ls /mnt/data`</span><br><span class="line">flag=$?</span><br><span class="line">if [ $flag == 0 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;OK&quot; &gt;&gt; /home/ubuntu/Pi/log.txt</span><br><span class="line">else</span><br><span class="line">        sudo mount UUID=9a13874f-40f0-0747-aa7e-88f484803037 /mnt/data</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h3 id="定时启动脚本"><a href="#定时启动脚本" class="headerlink" title="定时启动脚本"></a>定时启动脚本</h3><p>使用crontab定时启动脚本，详见这篇文章<a href="https://www.dongjunto.xyz/archives/shi-yong-crontab-ding-qi-zhi-xing-jiao-ben">Linux使用crontab定期执行脚本</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>linux</tag>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>解决树莓派硬盘总掉线问题</title>
    <url>/2022/11/29/%E8%A7%A3%E5%86%B3%E6%A0%91%E8%8E%93%E6%B4%BE%E7%A1%AC%E7%9B%98%E6%80%BB%E6%8E%89%E7%BA%BF%E9%97%AE%E9%A2%98-%E8%A7%A3%E5%86%B3%E6%A0%91%E8%8E%93%E6%B4%BE%E7%A1%AC%E7%9B%98%E6%80%BB%E6%8E%89%E7%BA%BF%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><p>用机械硬盘给树莓派做smb服务器硬盘，但是发现挂载的硬盘经常消失，需要重新挂载。</p>
<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>树莓派的usb3.0供电不足，所以机械硬盘会出现断联问题。</p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>购买双usb的硬盘接口线，一根用于供电一根用于数据传输。</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>写一个shell脚本，定期自动检测硬盘自动挂载。</p>
<h3 id="shell如何检测硬盘是否挂载"><a href="#shell如何检测硬盘是否挂载" class="headerlink" title="shell如何检测硬盘是否挂载"></a>shell如何检测硬盘是否挂载</h3><p>使用命令 <em>ls &#x2F;mnt&#x2F;data</em> 可以查看挂载文件夹，如果未挂载则会出现错误提示。<br>shell中使用 <em>$?</em> 可以得到上一条命令的返回值，默认正常情况下返回值为0，异常状态则不为0.<br>因此可以通过判断该命令的返回值，确定硬盘是否挂载。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">file=`ls /mnt/data`</span><br><span class="line">flag=$?</span><br><span class="line">if [ $flag == 0 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;已挂载&quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot;未挂载&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h3 id="如何挂载硬盘"><a href="#如何挂载硬盘" class="headerlink" title="如何挂载硬盘"></a>如何挂载硬盘</h3><p>linux挂载硬盘有两种方式，一种是直接写硬盘目录挂载，另一种则是用UUID的方式挂载，由于机械硬盘总是会断联，每次硬盘目录都会发生变化，因此选用UUID的方式挂载。<br><strong>查看硬盘UUID</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure>
<p><strong>挂载</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mount UUID=9a13874f-40f0-0747-aa7e-88f484803037 /mnt/data</span><br></pre></td></tr></table></figure>
<h3 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a>shell脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">file=`ls /mnt/data`</span><br><span class="line">flag=$?</span><br><span class="line">if [ $flag == 0 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;OK&quot; &gt;&gt; /home/ubuntu/Pi/log.txt</span><br><span class="line">else</span><br><span class="line">        sudo mount UUID=9a13874f-40f0-0747-aa7e-88f484803037 /mnt/data</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h3 id="定时启动脚本"><a href="#定时启动脚本" class="headerlink" title="定时启动脚本"></a>定时启动脚本</h3><p>使用</p>
]]></content>
  </entry>
  <entry>
    <title>计算机体系结构-计算题</title>
    <url>/2022/06/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-%E8%AE%A1%E7%AE%97%E9%A2%98-computerarchitecalculationproblems/</url>
    <content><![CDATA[<h1 id="加速比计算"><a href="#加速比计算" class="headerlink" title="加速比计算"></a>加速比计算</h1><p>公式：<br><img src="/upload/2022/06/image-1655564432228.png" alt="image-1655564432228"><br>Fe可改进比例：一个运行60秒的程序有20秒可以加速，则Fe&#x3D;20&#x2F;60</p>
<p>Se部件加速比：可改进部分，改进后提高的倍数<br><img src="/upload/2022/06/image-1655564362405.png" alt="image-1655564362405"><br>例题：<br><img src="/upload/2022/06/image-1655564185256.png" alt="image-1655564185256"><br><img src="/upload/2022/06/image-1655564559945.png" alt="image-1655564559945"></p>
<h1 id="CPU性能公式"><a href="#CPU性能公式" class="headerlink" title="CPU性能公式"></a>CPU性能公式</h1><p><img src="/upload/2022/06/image-1655564638905.png" alt="image-1655564638905"><br><img src="/upload/2022/06/image-1655564774492.png" alt="image-1655564774492"><br><img src="/upload/2022/06/image-1655564816001.png" alt="image-1655564816001"><br>例题：<br><img src="/upload/2022/06/image-1655564848084.png" alt="image-1655564848084"></p>
<h1 id="霍夫曼编码"><a href="#霍夫曼编码" class="headerlink" title="霍夫曼编码"></a>霍夫曼编码</h1><p>信息熵计算公式：<br>Pi是某一种指令i的频率<br><img src="/upload/2022/06/image-1655605996593.png" alt="image-1655605996593"><br>例题：<br><img src="/upload/2022/06/image-1655606763112.png" alt="image-1655606763112"><br><img src="/upload/2022/06/image-1655606788581.png" alt="image-1655606788581"><br><img src="/upload/2022/06/image-1655606854597.png" alt="image-1655606854597"><br><img src="/upload/2022/06/image-1655609750429.png" alt="image-1655609750429"><br><img src="/upload/2022/06/image-1655609812541.png" alt="image-1655609812541"></p>
<h1 id="单功能非线性流水线最优调度问题"><a href="#单功能非线性流水线最优调度问题" class="headerlink" title="单功能非线性流水线最优调度问题"></a>单功能非线性流水线最优调度问题</h1><p>启动距离：向一条非线性流水线的输入端连续输入两个任务之间的时间间隔。</p>
<p>禁用启动距离：会引起非线性流水线功能段使用冲突的启动距离。</p>
<p>预约表：<br><img src="/upload/2022/06/image-1655719678764.png" alt="image-1655719678764"></p>
<p>禁止表：<br>禁用启动距离构成的集合。<br><img src="/upload/2022/06/image-1655719830459.png" alt="image-1655719830459"></p>
<p>冲突向量：<br>把禁止表中的内容进行或操作。<br>例如：F&#x3D;{1,5,6,8}<br>则C<del>0</del>&#x3D;00000001||00010000||00100000||10000000&#x3D;10110001<br><img src="/upload/2022/06/image-1655720129740.png" alt="image-1655720129740"></p>
<p>状态转换图：<br><img src="/upload/2022/06/image-1655720367561.png" alt="image-1655720367561"><br><img src="/upload/2022/06/image-1655720407460.png" alt="image-1655720407460"><br>逻辑右移补0<br><img src="/upload/2022/06/image-1655720755575.png" alt="image-1655720755575"><br><img src="/upload/2022/06/image-1655720852013.png" alt="image-1655720852013"><br>9^+^表示右移9位，得到00000000||C<del>0</del><br>得到状态转换图后，找图中的回路。<br><img src="/upload/2022/06/image-1655721245413.png" alt="image-1655721245413"><br>选择平均延迟方案最低的</p>
<p>流程：</p>
<ol>
<li>根据所给预约表，写出禁止表和冲突向量C<del>0</del>。（右左相减，去重，逻辑位与）</li>
<li>写出新的冲突向量。and（C<del>0</del>，SHR<del>k</del>（C<del>0</del>））, k∈ { R - 禁止表 }.</li>
<li>画出状态转换图。对每一个C<del>k</del>查看空位是否是非禁止表元素，如果有则构造新的冲突向量。<br>例如：10111011中3,7是空位，同时禁止表为{8,6,5,1}，那么还需要构造移动3,7的冲突向量。</li>
<li>从状态转换图中找回路，求平均延迟拍数。选择最小的。</li>
</ol>
<h1 id="多级cache计算不命中率计算"><a href="#多级cache计算不命中率计算" class="headerlink" title="多级cache计算不命中率计算"></a>多级cache计算不命中率计算</h1><p>公式：<br>局部不命中率&#x3D;该级的cache不命中次数&#x2F;到达该级的访问次数。<br>全局不命中率&#x3D;该级cache的不命中次数&#x2F;CPU发出访存的总次数</p>
<p><img src="/upload/2022/06/image-1655894931688.png" alt="image-1655894931688"><br>&#x3D;&#x3D;每次访存&#x3D;&#x3D;平均停顿时间&#x3D;平均访存周期 - 一级cache命中时间</p>
<p>&#x3D;&#x3D;每条指令&#x3D;&#x3D;的平均停顿时间 &#x3D; 每条指令的平均访存次数 x 每次访存平均停顿周期<br><img src="/upload/2022/06/image-1655900950892.png" alt="image-1655900950892"></p>
<h1 id="MTTF，MTTR，系统失效率的计算"><a href="#MTTF，MTTR，系统失效率的计算" class="headerlink" title="MTTF，MTTR，系统失效率的计算"></a>MTTF，MTTR，系统失效率的计算</h1><p>平均无故障时间MTTF，系统失效率&#x3D;1&#x2F;MTTF<br>平均修复时间MTTR<br><img src="/upload/2022/06/image-1655966593310.png" alt="image-1655966593310"><br><img src="/upload/2022/06/image-1655966945294.png" alt="image-1655966945294"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>解决连接openVPN后无法访问外网问题</title>
    <url>/2022/11/13/%E8%A7%A3%E5%86%B3%E8%BF%9E%E6%8E%A5openVPN%E5%90%8E%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91%E9%97%AE%E9%A2%98-%E8%A7%A3%E5%86%B3%E8%BF%9E%E6%8E%A5openvpn%E5%90%8E%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>客户端连接服务器后可以ping通其他客户端，但是无法ping通外网ip</p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure>
<p>把net.ipv4.ip_forward&#x3D;1 的注释去掉</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure>
<p>放开 openVpn 的端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># openVpn</span></span><br><span class="line">sudo iptables -A INPUT -p udp --dport 2077 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># openVpn 出网口</span></span><br><span class="line">sudo iptables -A OUTPUT -p udp --dport 2077 -j ACCEPT</span><br></pre></td></tr></table></figure>

<p>将 openVpn 的数据转发</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE</span><br></pre></td></tr></table></figure>

<p>重启openVPN服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su</span><br><span class="line">service openvpn restart</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网站搭建相关</category>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>vpn</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机体系结构复习纲要</title>
    <url>/2022/06/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%BA%B2%E8%A6%81-ji-suan-ji-ti-xi-jie-gou-fu-xi-gang-yao/</url>
    <content><![CDATA[<h1 id="2022年计算机体系结构复习纲要"><a href="#2022年计算机体系结构复习纲要" class="headerlink" title="2022年计算机体系结构复习纲要"></a>2022年计算机体系结构复习纲要</h1><blockquote>
<p><strong>题目类型</strong></p>
<p><strong>选择题：15个，每题2分，合计30分；</strong></p>
<p><strong>填空题：20个空，每空1分，合计20分；</strong></p>
<p><strong>判断题：10个，每题1分，合计10分；</strong></p>
<p><strong>简答题：2个，每题5分，合计10分；</strong></p>
<p><strong><a href="https://www.dongjunto.xyz/archives/computerarchitecalculationproblems">综合计算题</a>：3个，合计30分。</strong></p>
</blockquote>
<h2 id="第一章："><a href="#第一章：" class="headerlink" title="第一章："></a><strong>第一章：</strong></h2><p><a href="https://www.dongjunto.xyz/archives/computerarchitecture01">第一章笔记</a></p>
<ol>
<li><p>计算机系统的&#x3D;&#x3D;多级层级结构&#x3D;&#x3D;（六层图，包括虚拟机与物理机标注）；</p>
</li>
<li><p>计算机系统结构的经典&#x3D;&#x3D;定义&#x3D;&#x3D;与广义系统结构定义；</p>
</li>
<li><p>计算机系统结构与计算机组成原理、硬件实现之间的关系；</p>
</li>
<li><p>Flynn分类法、冯氏分类法对系统结构的划分结果及Handler分类法的三个层次；</p>
</li>
<li><p>&#x3D;&#x3D;Amdahl定律的内容&#x3D;&#x3D;；</p>
</li>
<li><p>加速比的计算（计算题）；</p>
</li>
<li><p>CPU性能公式（计算题）；</p>
</li>
<li><p>&#x3D;&#x3D;程序的局部性原理&#x3D;&#x3D;（两部分，概念，包含的两部分内容P10）；</p>
</li>
<li><p>冯诺依曼结构组成及特点；</p>
</li>
<li><p>系列机的概念；</p>
</li>
<li><p>系列机的软件兼容分类（前后，上下的区别）；</p>
</li>
<li><p>仿真与模拟的概念与区别；</p>
</li>
<li><p>并行性的概念与含义（同时性，并发性）；</p>
</li>
<li><p>提高并行性的途径（包括具体内容）。</p>
</li>
</ol>
<h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a><strong>第二章</strong></h2><p><a href="https://www.dongjunto.xyz/archives/computerarchitecture02">第二章笔记</a></p>
<ol>
<li><p>指令系统的分类（重点：通用寄存器）</p>
</li>
<li><p>寻址方式中，物理地址空间的信息存放（P34）</p>
</li>
<li><p>对指令系统的五个基本要求；</p>
</li>
<li><p>控制指令的内容；</p>
</li>
<li><p>&#x3D;&#x3D;指令操作码优化-霍夫曼编码（计算题）&#x3D;&#x3D;；</p>
</li>
<li><p>指令系统的三种编码格式；</p>
</li>
<li><p>指令系统的两个发展方向（CISC，RISC）；</p>
</li>
<li><p>MIPS的指令格式（三类）</p>
</li>
</ol>
<h2 id="x3D-x3D-第三章-x3D-x3D"><a href="#x3D-x3D-第三章-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;第三章&#x3D;&#x3D;"></a><strong>&#x3D;&#x3D;第三章&#x3D;&#x3D;</strong></h2><p><a href="https://www.dongjunto.xyz/archives/computerarchitecture03">第三章笔记</a></p>
<ol>
<li><p>流水线的概念；</p>
</li>
<li><p>通过时间和排空时间的概念；</p>
</li>
<li><p>流水线的性能指标，包括吞吐率、加速比、效率的计算；</p>
</li>
<li><p>流水线设计中的三个问题；</p>
</li>
<li><p>&#x3D;&#x3D;单功能非线性流水线的最优调度问题，根据预约表计算禁止表、初始冲突向量、状态转换图等，最终求出最佳调度方案（计算题，大题分高）&#x3D;&#x3D;；</p>
</li>
<li><p>经典5段流水包含的执行过程及每个过程的内容；</p>
</li>
<li><p>相关的概念与三种类型；（给出例子，判断相关类型）；</p>
</li>
<li><p>冲突的概念与三种类型；（给出例子，判断冲突类型）；</p>
</li>
<li><p>解决冲突的方法（对应三种冲突的解决）</p>
</li>
</ol>
<h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a><strong>第四章</strong></h2><p><a href="https://www.dongjunto.xyz/archives/computerarchitecture04">第四章笔记</a></p>
<ol>
<li>向量处理的三种方式（了解）；</li>
</ol>
<h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a><strong>第五章</strong></h2><p><a href="https://www.dongjunto.xyz/archives/computerarchitecture05">第五章笔记</a></p>
<ol>
<li><p>指令级并行的&#x3D;&#x3D;概念&#x3D;&#x3D;；</p>
</li>
<li><p>指令动态调度的&#x3D;&#x3D;概念&#x3D;&#x3D;；<br>不要求方法</p>
</li>
</ol>
<h2 id="x3D-x3D-第七章-x3D-x3D"><a href="#x3D-x3D-第七章-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;第七章&#x3D;&#x3D;"></a><strong>&#x3D;&#x3D;第七章&#x3D;&#x3D;</strong></h2><p><a href="https://www.dongjunto.xyz/archives/computerarchitecture07">第七章笔记</a></p>
<ol>
<li><p>&#x3D;&#x3D;系统的三级存储系统&#x3D;&#x3D;；</p>
</li>
<li><p>三级存储系统中两个层次的比较；</p>
</li>
<li><p>映像规则的三种分类；</p>
</li>
<li><p>常用的三种替换算法；</p>
</li>
<li><p>写策略的两种分类与区别；</p>
</li>
<li><p>平均访存时间计算公式；</p>
</li>
<li><p>三种类型的不命中及其含义；</p>
</li>
<li><p>17种Cache的优化技术与平均访存时间公式中三个元素的关系（了解）</p>
</li>
<li><p>多级Cache的不命中率（局部，全局）（计算题）；</p>
</li>
</ol>
<h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a><strong>第八章</strong></h2><p><a href="https://www.dongjunto.xyz/archives/computerarchitecture08">第八章笔记</a></p>
<ol>
<li><p>反应存储外设可靠性的参数；（可靠性，可用性，可信性）</p>
</li>
<li><p>MTTF，MTTR，系统失效率的含义与计算（计算题）；</p>
</li>
<li><p>RAID的概念以及各级RAID的区别与实现方案（RAID0-6）；</p>
</li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机体系结构笔记第一章</title>
    <url>/2022/06/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%80%E7%AB%A0-computerarchitecture01/</url>
    <content><![CDATA[<h1 id="x3D-x3D-计算机系统多级层次结构-x3D-x3D"><a href="#x3D-x3D-计算机系统多级层次结构-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;计算机系统多级层次结构&#x3D;&#x3D;"></a>&#x3D;&#x3D;计算机系统多级层次结构&#x3D;&#x3D;</h1><p><img src="/upload/2022/06/image.png" alt="image"></p>
<h1 id="x3D-x3D-计算机系统体系结构的定义-x3D-x3D"><a href="#x3D-x3D-计算机系统体系结构的定义-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;计算机系统体系结构的定义&#x3D;&#x3D;"></a>&#x3D;&#x3D;计算机系统体系结构的定义&#x3D;&#x3D;</h1><h2 id="经典定义"><a href="#经典定义" class="headerlink" title="经典定义"></a>经典定义</h2><p>计算机体系结构是指传统机器程序员所看到的计算机属性，即概念结构与功能特效。</p>
<h2 id="广义定义"><a href="#广义定义" class="headerlink" title="广义定义"></a>广义定义</h2><p>系统结构定义为：指令系统结构，组成，硬件。</p>
<h1 id="计算机组成和实现"><a href="#计算机组成和实现" class="headerlink" title="计算机组成和实现"></a>计算机组成和实现</h1><p>计算机系统结构：计算机系统的软硬件的界面。（传统机器所具有的结构）</p>
<p>计算机组成：逻辑结构的实现（控制方式，功能等）</p>
<p>计算机实现：物理实现（引脚，电压，散热等）</p>
<p><del>翻译和解释的区别：</del><br><del>翻译：全部一起翻译后一起执行，占用空间大<br>解释：逐条解释执行，占用空间小，消耗时间大</del></p>
<h1 id="计算机系统结构分类"><a href="#计算机系统结构分类" class="headerlink" title="计算机系统结构分类"></a>计算机系统结构分类</h1><h2 id="Flynn分类"><a href="#Flynn分类" class="headerlink" title="Flynn分类"></a>Flynn分类</h2><p>按照指令流和数据流分类<br>Single Multiple | Instruction Data</p>
<ol>
<li>SISD</li>
<li>SIMD</li>
<li>MISD 并不存在</li>
<li>MIMD</li>
</ol>
<h2 id="冯式分类"><a href="#冯式分类" class="headerlink" title="冯式分类"></a>冯式分类</h2><p>按照系统最大并行度分类<br>最大并行度：能处理的最大二进制位数<br><img src="/upload/2022/06/2022-06-06.png" alt="2022-06-06"></p>
<ol>
<li>WSBS字串位串</li>
<li>WSBP字串位并</li>
<li>WPBS字并位串</li>
<li>WPBP字并位并</li>
</ol>
<h2 id="Handler分类法"><a href="#Handler分类法" class="headerlink" title="Handler分类法"></a>Handler分类法</h2><p>根据并行度和流水线分类</p>
<ol>
<li>控制部件个数k</li>
<li>ALU部件d</li>
<li>ALU包含的基本逻辑线路ELC套数w</li>
</ol>
<p>公式t&#x3D;（k，d，w）</p>
<p>如果考虑流水线：<br>t&#x3D;（k*k` ，d*d`，w*w`）加上流水线并行<br>例如：Cray有一个CPU，12个相当于ALU或者PE的处理部件，最多可以实现8级流水，字长为64位，可实现1<del>14位流水线处理。则表示为t（Cray）&#x3D;（1,12*8,64*（1\</del>14））</p>
<h1 id="计算机系统设计"><a href="#计算机系统设计" class="headerlink" title="计算机系统设计"></a>计算机系统设计</h1><h2 id="定量原理"><a href="#定量原理" class="headerlink" title="定量原理"></a>定量原理</h2><p>4个定量原理：</p>
<ol>
<li>经常性事件为重点</li>
<li>&#x3D;&#x3D;Amdahl定理：系统性能加速比&#x3D;系统性能改进后&#x2F;系统性能改进前 &#x3D;总执行时间改进前&#x2F;总执行时间改进后  。&#x3D;&#x3D;<br>&#x3D;&#x3D;这意味着提升百分比是非直线的，改进越多总收益提升增长越慢，一般加速比不会超过1&#x2F;（1-可改进比例）&#x3D;&#x3D;</li>
<li>CPU性能公式：执行所需时钟周期*时钟周期<br> CPI（执行每条指令平均时钟周期）&#x3D;执行程序总时间&#x2F;总指令条数</li>
<li>&#x3D;&#x3D;程序的局部性原理：程序执行时访问的存储器地址分布不是随机的而是相对的簇聚。&#x3D;&#x3D;<ul>
<li>时间局部性</li>
<li>空间局部性</li>
</ul>
</li>
</ol>
<h2 id="系统设计的主要方法"><a href="#系统设计的主要方法" class="headerlink" title="系统设计的主要方法"></a><del>系统设计的主要方法</del></h2><p><del>1. 由上往下<br>2. 由下往上<br>3. 从中间开始：解决前两种软硬件设计分离和脱节问题</del></p>
<p> <del>计算机系统性能评测</del><br> <del>执行时间和吞吐率</del><br><del>执行时间</del><br><del>CPU时间：不包含I&#x2F;O等待和运行其他程序时间</del><br><del>- 用户程序CPU时间</del><br><del>- 系统CPU时间</del><br><del>基准测试程序：用于比较性能的测试程序（编译器等等）</del></p>
<h1 id="计算机系统结构的发展"><a href="#计算机系统结构的发展" class="headerlink" title="计算机系统结构的发展"></a>计算机系统结构的发展</h1><h2 id="冯诺依曼结构及其改进"><a href="#冯诺依曼结构及其改进" class="headerlink" title="冯诺依曼结构及其改进"></a>冯诺依曼结构及其改进</h2><p>冯诺依曼结构的组成：输入设备，输出设备，&#x3D;&#x3D;运算器&#x3D;&#x3D;，存储器，控制器<br>冯诺依曼结构特点：</p>
<ul>
<li>运算器为中心</li>
<li>指令和数据都在存储器中同等对待</li>
<li>存储器按地址访问</li>
<li>指令执行按顺序的</li>
<li>指令由操作码和地址码组成</li>
<li>指令和数据都以二进制表示使用二进制运算</li>
</ul>
<p><del>对冯诺依曼的改进</del></p>
<ul>
<li><del>输入输出改进降低CPU负担，使用 程序控制，DMA，I&#x2F;O处理机</del></li>
<li><del>采用并行处理技术</del></li>
<li><del>存储器改进：相联存储器，通用寄存器组，Cache</del></li>
<li><del>指令系统发展：复杂指令集，精简指令集（目前常用）</del></li>
</ul>
<h2 id="软件对系统结构的影响"><a href="#软件对系统结构的影响" class="headerlink" title="软件对系统结构的影响"></a>软件对系统结构的影响</h2><h3 id="实现可移植性的方法："><a href="#实现可移植性的方法：" class="headerlink" title="实现可移植性的方法："></a>实现可移植性的方法：</h3><ol>
<li>统一高级语言</li>
<li>&#x3D;&#x3D;系列机&#x3D;&#x3D;，比如Intel酷睿系列，系统结构相同。因此分为向上，向下，向前和向后兼容，重点是向后兼容<br><img src="/upload/2022/06/image-1654596959856.png" alt="image-1654596959856"></li>
<li>模拟和仿真<br>模拟：虚拟机（通常用&#x3D;&#x3D;解释&#x3D;&#x3D;的方法实现）<br><img src="/upload/2022/06/image-1654597159717.png" alt="image-1654597159717"><br>仿真：使用主机的微程序解释目标机的微程序，&#x3D;&#x3D;速度快很多&#x3D;&#x3D;但是需要系统结构差别不大的计算机。</li>
</ol>
<p><del>器件发展对系统结构的影响：</del><br><del>1. 摩尔定律</del><br><del>2. 计算机分代主要以器件作为划分标准</del></p>
<p><del>应用发展对系统结构的影响：</del><br><del>应用需求是促使计算机系统结构发展的最根本的动力</del></p>
<h2 id="计算机系统结构中并行性的发展"><a href="#计算机系统结构中并行性的发展" class="headerlink" title="计算机系统结构中并行性的发展"></a>计算机系统结构中并行性的发展</h2><h3 id="并行性："><a href="#并行性：" class="headerlink" title="并行性："></a>并行性：</h3><p>同时性：同一个时刻<br>并发性：同一个时间间隔</p>
<h3 id="提高并行性的方法"><a href="#提高并行性的方法" class="headerlink" title="提高并行性的方法"></a>提高并行性的方法</h3><ol>
<li>时间重叠：流水线技术</li>
<li>资源重复：空间取胜，比如磁盘整列</li>
<li>资源共享：软件方法，比如操作系统时间片</li>
</ol>
<h3 id="单机系统并行性的发展"><a href="#单机系统并行性的发展" class="headerlink" title="单机系统并行性的发展"></a>单机系统并行性的发展</h3><p>重点是&#x3D;&#x3D;时间重叠&#x3D;&#x3D;，指令流水线技术。<br>在单处理机中资源共享是模拟多处理机的功能，例如分时系统。</p>
<h3 id="多机系统并行性的发展"><a href="#多机系统并行性的发展" class="headerlink" title="多机系统并行性的发展"></a>多机系统并行性的发展</h3><p>耦合性：描述各机之间物理连接紧密程度和交互作用力的强弱。</p>
<table>
<thead>
<tr>
<th>紧密耦合系统</th>
<th>松散耦合系统</th>
</tr>
</thead>
<tbody><tr>
<td>总线互联共享主存</td>
<td>通信互联共享文件</td>
</tr>
</tbody></table>
<p>功能专用化（时间重叠）<br>机间互联：容错系统</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机体系结构笔记第七章</title>
    <url>/2022/06/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%83%E7%AB%A0-computerarchitecture07/</url>
    <content><![CDATA[<h1 id="系统的三级存储结构"><a href="#系统的三级存储结构" class="headerlink" title="系统的三级存储结构"></a>系统的三级存储结构</h1><p>缓存Cache-主存储器-辅存（磁盘存储器）<br><img src="/upload/2022/06/image-1655802335804.png" alt="image-1655802335804"></p>
<h1 id="映像规则的三种分类"><a href="#映像规则的三种分类" class="headerlink" title="映像规则的三种分类"></a>映像规则的三种分类</h1><h2 id="全相联映像"><a href="#全相联映像" class="headerlink" title="全相联映像"></a>全相联映像</h2><p>全相连：主存中的任意一块可以被放置到cache中任意一个位置。<br><img src="/upload/2022/06/image-1655885253586.png" alt="image-1655885253586"></p>
<h2 id="直接联映像"><a href="#直接联映像" class="headerlink" title="直接联映像"></a>直接联映像</h2><p>主存中每块只能被放置到cache中唯一的一个位置。<br>主存i块可以放到cache中的j块。<br>j&#x3D;i mod（M）       M：cache的块数<br><img src="/upload/2022/06/image-1655885442474.png" alt="image-1655885442474"></p>
<h2 id="组相连映像"><a href="#组相连映像" class="headerlink" title="组相连映像"></a>组相连映像</h2><p>是前两种的结合，把cache分组，每一个组对主存都是直接相连，对组内是全相连。<br>主存第i块映像到第k组。<br>k&#x3D;i mod （G）                            G：cache组数<br><img src="/upload/2022/06/image-1655887250919.png" alt="image-1655887250919"></p>
<h3 id="n路组相连"><a href="#n路组相连" class="headerlink" title="n路组相连"></a>n路组相连</h3><p>每组中有n个块（n&#x3D;M&#x2F;G）。n为相连度。相连度越高空间利用率越高，块冲突越低，不命中率也越低。</p>
<table>
<thead>
<tr>
<th></th>
<th>n</th>
<th>G</th>
</tr>
</thead>
<tbody><tr>
<td>全相连</td>
<td>M</td>
<td>1</td>
</tr>
<tr>
<td>直接映像</td>
<td>1</td>
<td>M</td>
</tr>
<tr>
<td>组相连</td>
<td>1&lt;n&lt;M</td>
<td>1&lt;G&lt;M</td>
</tr>
</tbody></table>
<p>通常n&lt;&#x3D;4</p>
<h1 id="替换算法"><a href="#替换算法" class="headerlink" title="替换算法"></a>替换算法</h1><h2 id="x3D-x3D-随机法-x3D-x3D"><a href="#x3D-x3D-随机法-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;随机法&#x3D;&#x3D;"></a>&#x3D;&#x3D;随机法&#x3D;&#x3D;</h2><h2 id="先进先出FIFO"><a href="#先进先出FIFO" class="headerlink" title="先进先出FIFO"></a>先进先出FIFO</h2><h2 id="x3D-x3D-最近最少使用LRU-x3D-x3D"><a href="#x3D-x3D-最近最少使用LRU-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;最近最少使用LRU&#x3D;&#x3D;"></a>&#x3D;&#x3D;最近最少使用LRU&#x3D;&#x3D;</h2><p>使用堆栈（可以被随机访问），被访问后重新入栈，提升优先级。当需要替换时，选栈低元素。</p>
<h1 id="写策略"><a href="#写策略" class="headerlink" title="写策略"></a>写策略</h1><h2 id="写直达法"><a href="#写直达法" class="headerlink" title="写直达法"></a>写直达法</h2><p>不只写入cache也写入主存。缺块不按写分配。</p>
<h2 id="写回法"><a href="#写回法" class="headerlink" title="写回法"></a>写回法</h2><p>值写入cache，cache要被替换时才写入主存。（cache需要增添一个修改位），缺块按写分配。</p>
<table>
<thead>
<tr>
<th></th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>写直达法</td>
<td>一致性好</td>
<td>写停顿</td>
</tr>
<tr>
<td>写回法</td>
<td>速度快，存储器使用带宽低</td>
<td>比写直达法难实现</td>
</tr>
</tbody></table>
<h1 id="cache性能分析"><a href="#cache性能分析" class="headerlink" title="cache性能分析"></a>cache性能分析</h1><h2 id="平均访存时间"><a href="#平均访存时间" class="headerlink" title="平均访存时间"></a>平均访存时间</h2><p>平均访存时间&#x3D;命中时间+不命中率x不命中开销</p>
<h1 id="降低cache不命中率"><a href="#降低cache不命中率" class="headerlink" title="降低cache不命中率"></a>降低cache不命中率</h1><h2 id="cache不命中分类"><a href="#cache不命中分类" class="headerlink" title="cache不命中分类"></a>cache不命中分类</h2><ol>
<li>强制性不命中<br>第一次访问，该块不在cache中。</li>
<li>容量不命中<br>cache容量不足以放入整个块。但是又被重新访问。</li>
<li>冲突不命中<br>组相连或者直接映像cache中，太多块映像到同一个块中，但对应的块都要访问，产生冲突。</li>
</ol>
<p>增大cache大小，降低容量不命中概率。<br>相联度增加，降低冲突不命中。</p>
<h1 id="降低cache不命中开销"><a href="#降低cache不命中开销" class="headerlink" title="降低cache不命中开销"></a>降低cache不命中开销</h1><h2 id="两级cache加速"><a href="#两级cache加速" class="headerlink" title="两级cache加速"></a>两级cache加速</h2><p>L1块，L2容量大<br>平均访存时间&#x3D;命中时间<del>L1</del>+不命中率<del>L1</del>x不命中开销<del>L1</del><br>不命中开销<del>L1</del>&#x3D;命中时间<del>L2</del>+不命中率<del>L2</del>x不命中开销<del>L2</del></p>
<h2 id="局部不命中与全局不命中"><a href="#局部不命中与全局不命中" class="headerlink" title="局部不命中与全局不命中"></a>局部不命中与全局不命中</h2><p>局部不命中率&#x3D;该级的cache不命中次数&#x2F;到达该级的访问次数。<br>全局不命中率&#x3D;该级cache的不命中次数&#x2F;CPU发出访存的总次数</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机体系结构笔记第二章</title>
    <url>/2022/06/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%BA%8C%E7%AB%A0-computerarchitecture02/</url>
    <content><![CDATA[<h1 id="x3D-x3D-指令系统结构分类-x3D-x3D"><a href="#x3D-x3D-指令系统结构分类-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;指令系统结构分类&#x3D;&#x3D;"></a>&#x3D;&#x3D;指令系统结构分类&#x3D;&#x3D;</h1><h2 id="按照存储分类"><a href="#按照存储分类" class="headerlink" title="按照存储分类"></a>按照存储分类</h2><ol>
<li>堆栈结构</li>
<li>累加器结构</li>
<li>通用寄存器结构：根据操作数来源分为RM，RR （R寄存器，M存储器）</li>
</ol>
<p>对于不同结构操作数位置和给出方式会不同。</p>
<ul>
<li>显式给出：例如mov</li>
<li>隐式给出：例如push，pop</li>
</ul>
<h2 id="x3D-x3D-通用寄存器型结构-x3D-x3D"><a href="#x3D-x3D-通用寄存器型结构-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;通用寄存器型结构&#x3D;&#x3D;"></a>&#x3D;&#x3D;通用寄存器型结构&#x3D;&#x3D;</h2><p> 现代指令系统主流结构。<br> 根据ALU指令操作数个数可以分为：</p>
<ol>
<li>3操作数指令</li>
<li>2操作数指令</li>
</ol>
<table>
<thead>
<tr>
<th>指令结构类型</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>RR</td>
<td>字长固定，结构简洁</td>
<td>指令条数多，程序占用空间大</td>
</tr>
<tr>
<td>RM</td>
<td>不必load加载，易于编码</td>
<td>从R和M中读取时间差异大</td>
</tr>
<tr>
<td>MM</td>
<td>代码最紧凑，不需要寄存器保存变量</td>
<td>指令字长变化大，速度慢</td>
</tr>
</tbody></table>
<h1 id="寻址方式"><a href="#寻址方式" class="headerlink" title="寻址方式"></a>寻址方式</h1><p>寻找有效地址EA<br>表达方式：<br><img src="/upload/2022/06/image-1654697899593.png" alt="image-1654697899593"></p>
<ol>
<li>寄存器寻址ADD R1，R2</li>
<li>立即数寻址ADD R1，#6</li>
<li>偏移寻址ADD R1，120（R2）</li>
<li>寄存器间接寻址ADD R1，（R2）</li>
<li>索引寻址ADD R1，（R2+R3）</li>
<li>直接寻址ADD R1，（1000）</li>
<li>存储器间接寻址ADD R2，@（R1）</li>
<li>自增寻址ADD R1，（R2）+    &#x2F;&#x2F;R2会自增</li>
<li>自减寻址ADD R1，-（R2）</li>
<li>缩放寻址ADD R1，80（R2）[R3]</li>
</ol>
<p>不同寻址方式使用频率不同<br>最高为立即数寻址和偏移寻址</p>
<p>物理空间的信息存放问题：<br><img src="/upload/2022/06/image-1654698935808.png" alt="image-1654698935808"><br>如果使用左侧则会降低读入效率，右侧浪费存储空间。</p>
<h1 id="指令系统的设计与优化"><a href="#指令系统的设计与优化" class="headerlink" title="指令系统的设计与优化"></a>指令系统的设计与优化</h1><h2 id="指令系统的设计"><a href="#指令系统的设计" class="headerlink" title="指令系统的设计"></a>指令系统的设计</h2><p>功能设计，格式设计。<br>指令系统的设计需要考虑速度，成本，灵活性</p>
<h2 id="x3D-x3D-指令系统的基本要求-x3D-x3D"><a href="#x3D-x3D-指令系统的基本要求-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;指令系统的基本要求&#x3D;&#x3D;"></a>&#x3D;&#x3D;指令系统的基本要求&#x3D;&#x3D;</h2><ol>
<li>完整性：提供的指令对于程序而言足够</li>
<li>规整性：每种操作要对所有数据类型都兼容</li>
<li>正交性：不同含义字段互不相干，互相独立</li>
<li>高效率：速度快</li>
<li>兼容性：向后兼容</li>
</ol>
<h2 id="控制指令"><a href="#控制指令" class="headerlink" title="控制指令"></a>控制指令</h2><p>包括：跳转，分支。<br>对于控制指令而言，分支指令最为常用。<br>分支条件的方法：<br><img src="/upload/2022/06/image-1655605265132.png" alt="image-1655605265132"></p>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><h3 id="哈夫曼编码"><a href="#哈夫曼编码" class="headerlink" title="哈夫曼编码"></a>哈夫曼编码</h3><p>&#x3D;&#x3D;使用频率最高的用最短的编码。&#x3D;&#x3D;<br>构造方式：哈夫曼树<br>缺点：变长，难以处理。<br>改进：使用几种固定长度的编码，但是也是概率高的用短的。</p>
<h3 id="操作码优化程度的判定"><a href="#操作码优化程度的判定" class="headerlink" title="操作码优化程度的判定"></a>操作码优化程度的判定</h3><p>信息熵：<br><img src="/upload/2022/06/image-1654865460945.png" alt="image-1654865460945"><br>信息冗余计算&#x3D;(实际平均编码长度-理论最短平均长度)&#x2F;实际平均编码长度 *100% </p>
<h3 id="等长扩展码"><a href="#等长扩展码" class="headerlink" title="等长扩展码"></a>等长扩展码</h3><p>15&#x2F;15&#x2F;15编码 每一轮的1111作为扩展位<br>8&#x2F;64&#x2F;512编码 每四位选第一为做扩展位<br><img src="/upload/2022/06/image-1654867059473.png" alt="image-1654867059473"></p>
<h3 id="定长操作码：目前常用"><a href="#定长操作码：目前常用" class="headerlink" title="定长操作码：目前常用"></a>定长操作码：目前常用</h3><p>优点：编译速度快<br>缺点：存储空间占用大</p>
<h3 id="x3D-x3D-编码格式-x3D-x3D"><a href="#x3D-x3D-编码格式-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;编码格式&#x3D;&#x3D;"></a>&#x3D;&#x3D;编码格式&#x3D;&#x3D;</h3><ol>
<li>可变长度编码格式：</li>
<li>固定长度编码：操作码和寻址方式放到一起，大部分RISC使用</li>
<li>混合型编码格式：类似哈夫曼改进。</li>
</ol>
<h1 id="指令系统的发展和改进"><a href="#指令系统的发展和改进" class="headerlink" title="指令系统的发展和改进"></a>指令系统的发展和改进</h1><h2 id="CISC方向"><a href="#CISC方向" class="headerlink" title="CISC方向"></a>CISC方向</h2><p>指令数量多，功能多。<br>改进方向：</p>
<ol>
<li>面向目标程序增强指令功能：增强处理速度，I&#x2F;O，控制</li>
<li>面向高级语言优化</li>
<li>面向操作系统优化：进程同步互斥信号量。</li>
</ol>
<h2 id="RISC方向"><a href="#RISC方向" class="headerlink" title="RISC方向"></a>RISC方向</h2><p>只对常用指令编码。<br>指令定长，指令条数少。</p>
<h1 id="操作数的类型和大小"><a href="#操作数的类型和大小" class="headerlink" title="操作数的类型和大小"></a>操作数的类型和大小</h1><h2 id="表示操作数的方法"><a href="#表示操作数的方法" class="headerlink" title="表示操作数的方法"></a>表示操作数的方法</h2><ol>
<li>给指令操作码制定的操作数</li>
<li>给数据加上表示，数据本身给出操作类型。</li>
</ol>
<h2 id="操作数大小"><a href="#操作数大小" class="headerlink" title="操作数大小"></a>操作数大小</h2><p>字节，半字，字，双字</p>
<h2 id="操作数表示"><a href="#操作数表示" class="headerlink" title="操作数表示"></a>操作数表示</h2><p>字符：ASCII<br>整数：二进制补码<br>浮点：IEEE 754</p>
<h1 id="MIPS指令系统结构"><a href="#MIPS指令系统结构" class="headerlink" title="MIPS指令系统结构"></a>MIPS指令系统结构</h1><p>MIPS寄存器：</p>
<ol>
<li>32个64位通用寄存器</li>
<li>32个64位浮点数寄存器</li>
<li>特殊寄存器，如溢出<br>数据表示：<br>字节8b半字16b字32b双子64b<br>存储方式：<br>大端存储：低地址放高位，高地址放地位</li>
</ol>
<p>MIPS指令格式分类：</p>
<ol>
<li>I类指令（立即跳转），如load，store，立即数，分支，寄存器跳转<br><img src="/upload/2022/06/image-1655713665768.png" alt="image-1655713665768"></li>
<li>R类指令（Register）<br><img src="/upload/2022/06/image-1655713848575.png" alt="image-1655713848575"></li>
<li>J类指令（Jump）<br><img src="/upload/2022/06/image-1655713918821.png" alt="image-1655713918821"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机体系结构笔记第三章</title>
    <url>/2022/06/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%89%E7%AB%A0-computerarchitecture03/</url>
    <content><![CDATA[<h1 id="流水线的概念"><a href="#流水线的概念" class="headerlink" title="流水线的概念"></a>流水线的概念</h1><p>基本定义：把一个重复的过程分解为若干个子过程，每个子过程由专门的功能部件实现。把多个处理过程在时间上错开，依次通过个功能段，每个子过程可以与其他子过程并行处理。</p>
<p>流水线的段（级）：流水线中每个子过程及其功能部件。<br>流水线的深度：流水线的段数。</p>
<h1 id="流水线的通过时间和排空时间"><a href="#流水线的通过时间和排空时间" class="headerlink" title="流水线的通过时间和排空时间"></a>流水线的通过时间和排空时间</h1><p><img src="/upload/2022/06/image-1655714992274.png" alt="image-1655714992274"></p>
<h2 id="通过时间"><a href="#通过时间" class="headerlink" title="通过时间"></a>通过时间</h2><p>第一个任务从开始到结束的时间。</p>
<h2 id="排空时间"><a href="#排空时间" class="headerlink" title="排空时间"></a>排空时间</h2><p>最后一个任务n开始到结束时间</p>
<h1 id="流水线的性能指标"><a href="#流水线的性能指标" class="headerlink" title="流水线的性能指标"></a>流水线的性能指标</h1><h2 id="吞吐率TP"><a href="#吞吐率TP" class="headerlink" title="吞吐率TP"></a>吞吐率TP</h2><p>单位时间内流水线所完成的任务数量或输出结果的数量。<br>TP&#x3D;n&#x2F;T<del>k</del><br>n：任务数<br>T<del>k</del>：处理n个任务所用时间</p>
<h3 id="各段时间相等的流水线"><a href="#各段时间相等的流水线" class="headerlink" title="各段时间相等的流水线"></a>各段时间相等的流水线</h3><p><img src="/upload/2022/06/image-1655715839281.png" alt="image-1655715839281"><br>T<del>k</del>&#x3D;k△t+（n-1）△t<br>TP&#x3D;n&#x2F;(k△t+（n-1）△t)<br>最大吞吐率为n趋近于∞时，TP<del>max</del>&#x3D;1&#x2F;△t</p>
<h3 id="各段时间不完全相等的流水线"><a href="#各段时间不完全相等的流水线" class="headerlink" title="各段时间不完全相等的流水线"></a>各段时间不完全相等的流水线</h3><p>流水线中时间最长的段被称为流水线的++瓶颈段++。<br><img src="/upload/2022/06/image-1655716370952.png" alt="image-1655716370952"><br>因此对于瓶颈段，多要采用分割，分为多个子流水段，或者增加处理硬件。</p>
<h2 id="加速比S"><a href="#加速比S" class="headerlink" title="加速比S"></a>加速比S</h2><p>完成同一批任务，不使用流水线的时间（T<del>s</del>）和使用流水线的时间（T<del>k</del>）之比。<br>S&#x3D;T<del>s</del>&#x2F;T<del>k</del></p>
<h3 id="各段时间相等的流水线-1"><a href="#各段时间相等的流水线-1" class="headerlink" title="各段时间相等的流水线"></a>各段时间相等的流水线</h3><p>S&#x3D;nk△t&#x2F;(k△t+（n-1）△t)&#x3D;nk&#x2F;(k+n-1)<br>n趋于∞时S<del>max</del>&#x3D;k</p>
<h3 id="各段时间不完全相等的流水线-1"><a href="#各段时间不完全相等的流水线-1" class="headerlink" title="各段时间不完全相等的流水线"></a>各段时间不完全相等的流水线</h3><p><img src="/upload/2022/06/image-1655716859307.png" alt="image-1655716859307"></p>
<h2 id="流水线的效率"><a href="#流水线的效率" class="headerlink" title="流水线的效率"></a>流水线的效率</h2><p>流水线中设备实际使用时间：整个运行时间的比值，也就是利用率。</p>
<h3 id="各段时间相等的流水线-2"><a href="#各段时间相等的流水线-2" class="headerlink" title="各段时间相等的流水线"></a>各段时间相等的流水线</h3><p>e<del>1</del>&#x3D;e<del>2</del>&#x3D;…&#x3D;e<del>k</del>&#x3D;n&#x2F;(k+n-1)<br>整条流水线效率为：E&#x3D;(e<del>1</del>+e<del>2</del>+…e<del>k</del>)&#x2F;k&#x3D;n&#x2F;(k+n-1)<br>E<del>max</del>&#x3D;1<br>在图像上，流水线效率&#x3D;流水线面积&#x2F;总面积</p>
<h1 id="流水线设计中的三个问题："><a href="#流水线设计中的三个问题：" class="headerlink" title="流水线设计中的三个问题："></a>流水线设计中的三个问题：</h1><h2 id="颈问题："><a href="#颈问题：" class="headerlink" title="颈问题："></a>颈问题：</h2><p>机器时钟周期取决于瓶颈段的延迟时间。设计时应该使各段时间相等</p>
<h2 id="流水线的额外开销："><a href="#流水线的额外开销：" class="headerlink" title="流水线的额外开销："></a>流水线的额外开销：</h2><ul>
<li>流水寄存器需要建立时间和传输延迟</li>
<li>时钟偏移开销</li>
</ul>
<h2 id="冲突问题"><a href="#冲突问题" class="headerlink" title="冲突问题"></a>冲突问题</h2><ul>
<li>运算操作的数据准备</li>
<li>指令操作的相互关联</li>
</ul>
<h1 id="五段流水线"><a href="#五段流水线" class="headerlink" title="五段流水线"></a>五段流水线</h1><h2 id="取指令周期-IF"><a href="#取指令周期-IF" class="headerlink" title="取指令周期 IF"></a>取指令周期 IF</h2><ul>
<li>从PC取出指令放到IR</li>
<li>PC+&#x3D;4</li>
</ul>
<h2 id="指令译码-x2F-读寄存器周期-ID"><a href="#指令译码-x2F-读寄存器周期-ID" class="headerlink" title="指令译码&#x2F;读寄存器周期 ID"></a>指令译码&#x2F;读寄存器周期 ID</h2><ul>
<li>译码，读出操作数</li>
</ul>
<h2 id="执行-x2F-有效地址计算周期-EX"><a href="#执行-x2F-有效地址计算周期-EX" class="headerlink" title="执行&#x2F;有效地址计算周期 EX"></a>执行&#x2F;有效地址计算周期 EX</h2><ul>
<li>计算有效地址</li>
</ul>
<h2 id="存储器访问-x2F-分支完成周期-MEM"><a href="#存储器访问-x2F-分支完成周期-MEM" class="headerlink" title="存储器访问&#x2F;分支完成周期 MEM"></a>存储器访问&#x2F;分支完成周期 MEM</h2><ul>
<li>只有load，store和分支指令，其他类型指令不做任何操作。</li>
</ul>
<h2 id="写回周期-WB"><a href="#写回周期-WB" class="headerlink" title="写回周期 WB"></a>写回周期 WB</h2><ul>
<li>ALU运算指令和load指令把结果数据写入通用寄存器组。</li>
</ul>
<h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><p>两条指令之间存在某种依赖关系。</p>
<h2 id="数据相关："><a href="#数据相关：" class="headerlink" title="数据相关："></a>数据相关：</h2><p>两条指令i和j如果存在：<br>    - j使用i产生的结果<br>    - 指令j与指令k数据相关，而k又和i数据相关。（传递性）<br>    例如：<br>    <img src="/upload/2022/06/image-1655724310200.png" alt="image-1655724310200"></p>
<h2 id="名相关"><a href="#名相关" class="headerlink" title="名相关"></a>名相关</h2><p>名：指令所访问的寄存器或存储器单元的名称<br>指令i，j之间：<br>反相关：指令J写的名&#x3D;指令I读的名<br>输出相关：指令J写的名&#x3D;指令I写的名<br><img src="/upload/2022/06/image-1655726426480.png" alt="image-1655726426480"></p>
<h2 id="控制相关"><a href="#控制相关" class="headerlink" title="控制相关"></a>控制相关</h2><p>是由分支指令引起的相关。<br>例如if-then语句</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> p1&#123;</span><br><span class="line">	S1；</span><br><span class="line">&#125;</span><br><span class="line">S;</span><br><span class="line"><span class="keyword">if</span> p2&#123;</span><br><span class="line">	S2；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>P1与S1存在控制相关，P2与S2存在控制相关</p>
<h1 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h1><h2 id="结构冲突："><a href="#结构冲突：" class="headerlink" title="结构冲突："></a>结构冲突：</h2><p>硬件资源不满足指令执行要求</p>
<h2 id="数据冲突："><a href="#数据冲突：" class="headerlink" title="数据冲突："></a>数据冲突：</h2><p>需要用到前面的指令执行结果<br>指令I和J，I在J前进入流水线。</p>
<h3 id="写后读冲突RAW"><a href="#写后读冲突RAW" class="headerlink" title="写后读冲突RAW"></a>写后读冲突RAW</h3><p>i写入前j先读（数据相关）</p>
<h3 id="写后写冲突WAW"><a href="#写后写冲突WAW" class="headerlink" title="写后写冲突WAW"></a>写后写冲突WAW</h3><p>i写入前j先写（输出相关）</p>
<h3 id="读后写冲突WAR"><a href="#读后写冲突WAR" class="headerlink" title="读后写冲突WAR"></a>读后写冲突WAR</h3><p>i读入前j先写（反相关）</p>
<h2 id="控制冲突："><a href="#控制冲突：" class="headerlink" title="控制冲突："></a>控制冲突：</h2><p>遇到分支指令和其他会改变PC值的指令</p>
<h1 id="解决冲突的方法"><a href="#解决冲突的方法" class="headerlink" title="解决冲突的方法"></a>解决冲突的方法</h1><p>指令被暂停时，该暂停指令之后流出的所有指令都要暂停，之前的继续执行</p>
<h2 id="结构冲突"><a href="#结构冲突" class="headerlink" title="结构冲突"></a>结构冲突</h2><p>访存冲突：只有一个存储器时，数据指令都要读取。<br>方法1：插入气泡<br><img src="/upload/2022/06/image-1655727386817.png" alt="image-1655727386817"><br>方法2：设置独立指令Cache和数据Cache</p>
<h2 id="数据冲突"><a href="#数据冲突" class="headerlink" title="数据冲突"></a>数据冲突</h2><p>++定向技术++减少写后读冲突（数据相关）：EX段和MEM段之间的流水寄存器保存的ALU计算结果总是回送到ALU入口，当检测到需要用前一个ALU运算结果，就用保存在流水寄存器的值运算。<br>需要停顿的数据冲突：当定向技术无法解决，需要暂停流水线直到冲突消失<br>编译器解决数据冲突：通过编译器重新组织顺序。</p>
<h2 id="控制冲突"><a href="#控制冲突" class="headerlink" title="控制冲突"></a>控制冲突</h2><p>冻结或者排空流水线，优点：简单。<br>分支指令引起的延迟叫分支延迟。<br>编译器减少分支延迟。预测分支失败，预测分支成功，延迟分支（插入延迟槽）。<br>延迟槽调度：<img src="/upload/2022/06/image-1655733199443.png" alt="image-1655733199443"><br>分支取消机制：</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机体系结构笔记第五章</title>
    <url>/2022/06/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%BA%94%E7%AB%A0-computerarchitecture05/</url>
    <content><![CDATA[<h1 id="指令集并行的概念"><a href="#指令集并行的概念" class="headerlink" title="指令集并行的概念"></a>指令集并行的概念</h1><p>指令集并行ILP：指令之间存在的一种并行性，利用它，计算机可以并行执行两条或者两条以上的指令。</p>
<h2 id="开发ILP方法分类"><a href="#开发ILP方法分类" class="headerlink" title="开发ILP方法分类"></a>开发ILP方法分类</h2><ol>
<li>基于硬件的动态开发</li>
<li>基于软件的静态开发</li>
</ol>
<h2 id="流水线处理机的实际CPI"><a href="#流水线处理机的实际CPI" class="headerlink" title="流水线处理机的实际CPI"></a>流水线处理机的实际CPI</h2><p>CPI<del>流水线</del>&#x3D;CPI<del>理想状态</del>+停顿<del>结构冲突</del>+停顿<del>数据冲突</del>+停顿<del>控制冲突</del></p>
<p>IPC：每个时钟周期完成的指令条数&#x3D;CPI的倒数</p>
<h2 id="基本程序块"><a href="#基本程序块" class="headerlink" title="基本程序块"></a>基本程序块</h2><p>编译中提到的只有出入口，没有别的分支和跳转的代码块。</p>
<h2 id="循环级并行"><a href="#循环级并行" class="headerlink" title="循环级并行"></a>循环级并行</h2><p>使一个循环的不同循环体并行执行。</p>
<h1 id="指令的动态调度"><a href="#指令的动态调度" class="headerlink" title="指令的动态调度"></a>指令的动态调度</h1><h2 id="静态调度"><a href="#静态调度" class="headerlink" title="静态调度"></a>静态调度</h2><p>编译器减少相关和冲突</p>
<h2 id="动态调度"><a href="#动态调度" class="headerlink" title="动态调度"></a>动态调度</h2><p>执行过程通过计算机硬件减少停顿。</p>
<h2 id="动态调度的基本思想"><a href="#动态调度的基本思想" class="headerlink" title="动态调度的基本思想"></a>动态调度的基本思想</h2><p>将译码阶段ID拆分为两个阶段：</p>
<ol>
<li>流出IS：指令译码检查是否存在结果冲突</li>
<li>读操作数RO：等待时间冲突消失，后读操作数<br>不同的动态调度算法</li>
</ol>
<h3 id="记分牌动态调度"><a href="#记分牌动态调度" class="headerlink" title="记分牌动态调度"></a>记分牌动态调度</h3><p>在没有结构冲突时，尽可能早的执行没有数据冲突的指令，实现每个周期都执行一条指令（把等待的空闲时间用来干活）</p>
<h3 id="Tomasulo算法"><a href="#Tomasulo算法" class="headerlink" title="Tomasulo算法"></a>Tomasulo算法</h3><p>记录和检测指令相关。操作数一旦就绪就立即执行，把发生RAW冲突的可能性降低。<br>通过寄存器换名消除WAR冲突和WAW冲突。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机体系结构笔记第八章</title>
    <url>/2022/06/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%85%AB%E7%AB%A0-computerarchitecture08/</url>
    <content><![CDATA[<h1 id="IO系统的可靠性，可用性，可信性"><a href="#IO系统的可靠性，可用性，可信性" class="headerlink" title="IO系统的可靠性，可用性，可信性"></a>IO系统的可靠性，可用性，可信性</h1><h2 id="可靠性"><a href="#可靠性" class="headerlink" title="可靠性"></a>可靠性</h2><p>系统从某个初始参考点开始一直连续提供服务的能力。</p>
<h3 id="平均无故障时间MTTF"><a href="#平均无故障时间MTTF" class="headerlink" title="平均无故障时间MTTF"></a>平均无故障时间MTTF</h3><h3 id="平均修复时间MTTR"><a href="#平均修复时间MTTR" class="headerlink" title="平均修复时间MTTR"></a>平均修复时间MTTR</h3><h2 id="可用性"><a href="#可用性" class="headerlink" title="可用性"></a>可用性</h2><p>系统正常工作的时间在连续两次正常服务间隔时间所占比率。<br>可用性&#x3D;MTTF&#x2F;(MTTF+MTTR)</p>
<h2 id="可信性"><a href="#可信性" class="headerlink" title="可信性"></a>可信性</h2><p>服务的质量。（主观评价非量化）</p>
<h1 id="廉价磁盘冗余阵列RAID"><a href="#廉价磁盘冗余阵列RAID" class="headerlink" title="廉价磁盘冗余阵列RAID"></a>廉价磁盘冗余阵列RAID</h1><p>磁盘整列：用多个磁盘构成一个大容量的磁盘。</p>
<h2 id="数据交叉存放的粒度（-RAID的特征）"><a href="#数据交叉存放的粒度（-RAID的特征）" class="headerlink" title="数据交叉存放的粒度（ RAID的特征）"></a>数据交叉存放的粒度（ RAID的特征）</h2><p>细粒度磁盘整列：在概念上把数据分割为相对较小的单位交叉存放。<br>高传输速度，存在IO请求定位，浪费时间。<br>粗粒度磁盘整列：把数据以较大的单位交叉存放</p>
<h2 id="RAID分级"><a href="#RAID分级" class="headerlink" title="RAID分级"></a>RAID分级</h2><p><img src="/upload/2022/06/image-1655967824497.png" alt="image-1655967824497"><br><img src="/upload/2022/06/image-1655967867081.png" alt="image-1655967867081"></p>
<h2 id="RAID0"><a href="#RAID0" class="headerlink" title="RAID0"></a>RAID0</h2><p>无冗余盘，把数据切分为条带，按条带为单位交叉分布存放到多个磁盘内。</p>
<h2 id="RAID1"><a href="#RAID1" class="headerlink" title="RAID1"></a>RAID1</h2><p>镜像磁盘，对每一个磁盘添加一个冗余备份。速度最快。但是成高<br><img src="/upload/2022/06/image-1655969483088.png" alt="image-1655969483088"></p>
<h2 id="RAID2"><a href="#RAID2" class="headerlink" title="RAID2"></a>RAID2</h2><p>使用汉明码做伪纠错。冗余盘个数为log<del>2</del>m  m是数据盘个数<br><img src="/upload/2022/06/image-1655969635428.png" alt="image-1655969635428"></p>
<h2 id="RAID3"><a href="#RAID3" class="headerlink" title="RAID3"></a>RAID3</h2><p>使用位交叉奇偶校验磁盘阵列<br>细粒度整列。<br><img src="/upload/2022/06/image-1655982074406.png" alt="image-1655982074406"></p>
<h2 id="RAID4"><a href="#RAID4" class="headerlink" title="RAID4"></a>RAID4</h2><p>块交叉奇偶校验磁盘阵列<br>和RAID3类似，但是是粗粒度</p>
<h2 id="RAID5"><a href="#RAID5" class="headerlink" title="RAID5"></a>RAID5</h2><p>块交叉分布奇偶校验磁盘阵列<br>不使用专用的冗余盘，把冗余校验信息放在各盘中。<br><img src="/upload/2022/06/image-1655982582515.png" alt="image-1655982582515"></p>
<h2 id="RAID6"><a href="#RAID6" class="headerlink" title="RAID6"></a>RAID6</h2><p>P+Q双校验磁盘阵列<br>是RAID5校验开销的2倍，因为使用了两次校验。允许两个盘出现错误。<br><img src="/upload/2022/06/image-1655982698240.png" alt="image-1655982698240"></p>
<h2 id="RAID10和RAID01"><a href="#RAID10和RAID01" class="headerlink" title="RAID10和RAID01"></a>RAID10和RAID01</h2><p><img src="/upload/2022/06/image-1655987540182.png" alt="image-1655987540182"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机体系结构笔记第四章</title>
    <url>/2022/06/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%9B%9B%E7%AB%A0-computerarchitecture04/</url>
    <content><![CDATA[<h1 id="向量处理方式"><a href="#向量处理方式" class="headerlink" title="向量处理方式"></a>向量处理方式</h1><p>例：<br><img src="/upload/2022/06/image-1655794201810.png" alt="image-1655794201810"></p>
<h2 id="横向（水平）处理方式"><a href="#横向（水平）处理方式" class="headerlink" title="横向（水平）处理方式"></a>横向（水平）处理方式</h2><p>从左到右计算，D[i]&#x3D;A[i]x(B[i]-C[i])<br>数据相关N，功能切换2N次</p>
<h2 id="纵向（垂直）处理方式"><a href="#纵向（垂直）处理方式" class="headerlink" title="纵向（垂直）处理方式"></a>纵向（垂直）处理方式</h2><p>显卡的工作方式。<br>从上到下进行<br>先算Q[i]&#x3D;B[i]-C[i]后算A[i]xQ[i]<br>功能切换1次。</p>
<h2 id="纵横（分组）处理方式"><a href="#纵横（分组）处理方式" class="headerlink" title="纵横（分组）处理方式"></a>纵横（分组）处理方式</h2><p>组内是纵向处理，组外是横向处理。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>计算机体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>语录1</title>
    <url>/2022/04/23/%E8%AF%AD%E5%BD%951-%E8%AF%AD%E5%BD%951/</url>
    <content><![CDATA[<blockquote>
<p>无限的“过去”都以“现在”为归宿，无限的“未来”都以“现在”为渊源。<br>———《今》李大钊</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>鬼谷八荒吃瓜</title>
    <url>/2022/04/25/%E9%AC%BC%E8%B0%B7%E5%85%AB%E8%8D%92%E5%90%83%E7%93%9C-gui-gu-ba-huang-chi-gua/</url>
    <content><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>官方展示了一个创意工坊的东西，说要出mod之类的。</p>
<h1 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h1><p>版本正式更新后，玩家发现所谓的创意工坊，实际上是需要下一个额外的mod制作平台，同时这个制作平台却是需要审核，同时对于mod的制作版权都有要求，同时作者提出要申请国内版号，以及出2,。</p>
<h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><p>到现在4,25日，鬼谷八荒的steam页面已经差评如潮，好评率仅为3%，可以说已经是暴死了。</p>
<h1 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h1><p>起初鬼谷八荒在国内上不了，就绕到了steam。然而这次不使用创意工坊的官方解释却是，steam创意工坊没有审核机制，会出现很多r18或者反对政治的mod，所以不上。这种一开始疯狂讨好玩家最后却明知道玩家喜欢是什么却就是不给，作者还目中无人，这不是作死是啥？此外作者吃相难看，一心想要维护真面形象，其实是为了能够申请国内版号，好在国内恰钱。</p>
]]></content>
      <categories>
        <category>今天吃瓜了吗？</category>
      </categories>
      <tags>
        <tag>steam</tag>
        <tag>游戏</tag>
        <tag>鬼谷八荒</tag>
      </tags>
  </entry>
  <entry>
    <title>流浪地球2 扫盲</title>
    <url>/2023/02/08/%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%832%20%E6%89%AB%E7%9B%B2/</url>
    <content><![CDATA[<p>有人和我说流浪地球2不够硬核？</p>
<p>流浪地球2的很多硬核科幻都没有直接解释含义，还有一些硬核细节就直接是一个镜头一带而过，因此存在一定门槛，这梳理了一些我看到的硬核科幻细节。</p>
<h1 id="太空电梯"><a href="#太空电梯" class="headerlink" title="太空电梯"></a>太空电梯</h1><p><strong>太空电梯是什么？</strong></p>
<p>太空电梯是一种人类去往宇宙的设备，是一种科学设想，它和火箭是同一时期被提出的。</p>
<p><strong>为什么要造太空电梯？</strong></p>
<p>要制造领航员空间站，月球发动机，需要运输大量的人力物力，如果往返一直使用火箭或者航天器，那么成本是极高的。所以需要太空电梯降低成本，三体中也称太空电梯是地球和宇宙的巴拿马运河。</p>
<p><strong>为什么电影里太空电梯下降会有白雾？</strong></p>
<p>白雾是冷却液气化产生的，下降过程中和陨石一样，电梯间与空气摩擦会导致过热，电影中设计了冷却液进行降温。</p>
<h1 id="太阳风暴"><a href="#太阳风暴" class="headerlink" title="太阳风暴"></a>太阳风暴</h1><p><strong>550C是怎么损坏的？</strong></p>
<p>电影中夸大了太阳风暴的影响，太阳风暴是的太阳的剧烈活动，一般表象就是电磁干扰。电影中太阳风暴的磁场强度高的惊人，以至于应当于引爆了一颗巨型emp炸弹，极大的电磁场突变带来的就是极高的瞬时电流，这么高的电流足以击穿一切精密电路上的二极管。</p>
<p><strong>为什么笨笨没有烧掉？</strong></p>
<p>月球上避难时有一个微不足道的细节，笨笨进入安全屋后，用一个铝箔毯把自己盖住了，这就是对抗emp攻击最有效的方法，电磁屏蔽技术。</p>
<h1 id="550c底层操作系统实时生成是什么？被黑入后操作系统覆写又是什么？"><a href="#550c底层操作系统实时生成是什么？被黑入后操作系统覆写又是什么？" class="headerlink" title="550c底层操作系统实时生成是什么？被黑入后操作系统覆写又是什么？"></a>550c底层操作系统实时生成是什么？被黑入后操作系统覆写又是什么？</h1><p>众所周知，我们的计算机被分为了软硬件，硬件是实际的电路，软件则是驱动这些硬件的逻辑关系，而操作系统才是真正和硬件直接打交道的软件。</p>
<p>一般我们组装一些复杂功能的系统，都需要一个底层的操作系统来管理各个硬件，而操作系统中就有各个硬件的驱动代码，而550c的功能就是在原有操作系统运行的过程中，实时动态生成这些操作系统代码，每接入一个设备就自动生成新的操作系统，这大大降低了各功能设备接入的难度。</p>
<p>同时由于550c是量子计算机，其计算速度比原有计算机速度快的多（和现有超算的速度相比，可能是现有超算上百万倍的速度），因此可以加速月球发动机的建设。</p>
<p>另外覆写操作系统是一种极端的抵御黑客攻击的方法，类似于得了绝症直接下辈子重开抵御绝症。</p>
<h1 id="月亮怎么炸的？"><a href="#月亮怎么炸的？" class="headerlink" title="月亮怎么炸的？"></a>月亮怎么炸的？</h1><blockquote>
<p>科普：月球上有丰富的氦3，根据月球探测的结果，月球上的氦-3含量估计约100万吨以上。氦3是优质的核聚变原料。</p>
</blockquote>
<p>引爆月亮的基本原理就是：使用大量核弹同时引爆，核爆的高温会使月球上的氦3发生聚变反应，也就是让月球成为一颗超级氢弹。</p>
<h1 id="什么是相控阵核爆？为什么要用相控阵核爆？"><a href="#什么是相控阵核爆？为什么要用相控阵核爆？" class="headerlink" title="什么是相控阵核爆？为什么要用相控阵核爆？"></a>什么是相控阵核爆？为什么要用相控阵核爆？</h1><p>相控阵这个词是实际存在的，只是并不是用在核爆上，而是用在通信领域，例如5G通信就是用了相控阵波束成形。</p>
<p>解释相控阵前需要一些前置物理学常识–波的叠加。<br>如果描述波的方程是线性的，则可以使用叠加原理。这就意味着由在同一空间中传播的两个或多个波的合成振幅，是由每个波单独产生的振幅之和。<br><img src="https://s2.loli.net/2023/02/08/ljHAmUxC1GhZSP5.png" alt="image.png"><br>例如光的干涉现象<br><img src="https://s2.loli.net/2023/02/08/gJojPDqAl7etiNr.png" alt="image.png"><br>在同相位的地方会亮，异相位的地方是暗。</p>
<p>相控阵就是基于叠加原理，通过多个排列有序的可控波源，在相同方向产生同相波，从而达到束波，聚能的效果。<br><img src="https://s2.loli.net/2023/02/08/lSgzTDKZ4nqyjJ5.png" alt="image.png"></p>
<p><strong>为什么要用相控阵？</strong></p>
<p>尽管月球上有大量的氦3，但是想要他们发生聚变反应就需要极高的温度，这个温度即使是所有核弹一起爆炸也无法达到。但是如果把核弹以相控阵的方式排布引爆，其辐射场叠加的温度则足以诱发聚变。</p>
<h1 id="数字生命"><a href="#数字生命" class="headerlink" title="数字生命"></a>数字生命</h1><p>数字生命一直有一个经典悖论：忒修斯之船</p>
<blockquote>
<p>忒修斯之船：如果忒修斯的船上的木头逐渐被替换，直到所有的木头都不是原来的木头，那这艘船还是原来的那艘船吗？</p>
</blockquote>
<p>数字生命是一次性替换所有的木头。</p>
<p>在《赛博朋克2077》中也有和数字生命类似的Relic技术，只不过探讨的侧重点不同。</p>
<p><strong>人在回路（HITL ）是什么？</strong></p>
<p>这是人工智能机器学习领域的一种方法，它主要依靠人的智能帮助机器更加智能化。例如前不久大火的ChatGPT就使用了人在回路，通过用户反馈调参。</p>
<blockquote>
<p>参考：<br>维基百科编者. 太空電梯[G&#x2F;OL]. 维基百科, 2023(20230124)[2023-01-24]. <a href="https://zh.wikipedia.org/w/index.php?title=%E5%A4%AA%E7%A9%BA%E9%9B%BB%E6%A2%AF&oldid=75664572">https://zh.wikipedia.org/w/index.php?title=%E5%A4%AA%E7%A9%BA%E9%9B%BB%E6%A2%AF&amp;oldid=75664572</a>.</p>
</blockquote>
<blockquote>
<p>维基百科编者. 相控阵[G&#x2F;OL]. 维基百科, 2022(20221129)[2022-11-29]. <a href="https://zh.wikipedia.org/w/index.php?title=%E7%9B%B8%E6%8E%A7%E9%98%B5&oldid=74838774">https://zh.wikipedia.org/w/index.php?title=%E7%9B%B8%E6%8E%A7%E9%98%B5&amp;oldid=74838774</a>.</p>
</blockquote>
<blockquote>
<p>维基百科编者. 叠加原理[G&#x2F;OL]. 维基百科, 2021(20210426)[2021-04-26]. <a href="https://zh.wikipedia.org/w/index.php?title=%E5%8F%A0%E5%8A%A0%E5%8E%9F%E7%90%86&oldid=65365763">https://zh.wikipedia.org/w/index.php?title=%E5%8F%A0%E5%8A%A0%E5%8E%9F%E7%90%86&amp;oldid=65365763</a>.</p>
</blockquote>
<blockquote>
<p>人在回路（Human in the loop)学习中… - 咪咕班克斯的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/343074171">https://zhuanlan.zhihu.com/p/343074171</a></p>
</blockquote>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>科普</tag>
        <tag>杂谈</tag>
        <tag>科幻</tag>
      </tags>
  </entry>
  <entry>
    <title>steamdeck折腾记录番外01-游戏推荐</title>
    <url>/2023/01/13/SteamDeck%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95-%E7%95%AA%E5%A4%9601-%E6%B8%B8%E6%88%8F%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p>说了那么多比较硬核折腾向的东西，还没怎么说steamdeck的本职工作–玩游戏。</p>
<p>今天就推荐几款我个人实际在steamdeck上体验了的游戏。</p>
<h1 id="哈迪斯"><a href="#哈迪斯" class="headerlink" title="哈迪斯"></a>哈迪斯</h1><p><img src="https://cdn.cloudflare.steamstatic.com/steam/apps/1145360/header.jpg?t=1670649855" alt="hades"><br>roguelike游戏，非常适合在移动掌机上游玩，流畅的打斗，跌宕起伏的剧情，风格独特的美术效果，非常推荐在SD上游玩。</p>
<p>steamdeck适配度：完美</p>
<h1 id="只狼"><a href="#只狼" class="headerlink" title="只狼"></a>只狼</h1><p><img src="https://cdn.cloudflare.steamstatic.com/steam/apps/814380/header.jpg?t=1669076148" alt="sekiro"><br>作为19年的TGA最佳游戏，只狼无疑是一款优秀的3A游戏。酣畅淋漓的打斗体验，各种惊心动魄的boss战，感受残酷的日本战国时代。<br>也许你会听说这游戏很难，但是在游戏中玩家会在千百次的失败中吸取教训总结经验，真正成长的是玩家而不是游戏中的角色。</p>
<p>steamdeck适配度：完美</p>
<h1 id="女神异闻录5：皇家版（P5R）"><a href="#女神异闻录5：皇家版（P5R）" class="headerlink" title="女神异闻录5：皇家版（P5R）"></a>女神异闻录5：皇家版（P5R）</h1><p><img src="https://cdn.cloudflare.steamstatic.com/steam/apps/1687950/header.jpg?t=1674487021" alt="p5r"></p>
<p>你可能听说过“P5天下第一！”这句话，P5指的就是女神异闻录5，p5r是p5的增强版。优秀的UI设计，第一眼就抓住了我的心，游玩的过程中我发现这游戏不只是花瓶，极强的沉浸感让我爱不释手。</p>
<p>steamdeck适配度：完美</p>
<h1 id="艾尔登法环"><a href="#艾尔登法环" class="headerlink" title="艾尔登法环"></a>艾尔登法环</h1><p><img src="https://cdn.cloudflare.steamstatic.com/steam/apps/1245620/header.jpg?t=1674441703" alt="eldenring"><br>去年的年度最佳游戏，宫崎英高再次跌上神坛！原汁原味的魂系冒险，体会宫崎英高的险恶，探索地牢，城堡，击败史诗巨龙或杀死传说半神。在开放世界的加持下，老头环达到了魂系游戏中最高的自由度。<br>可惜对于steamdeck来说，优化任然不足，大多数场景都无法60帧运行。<br>steamdeck兼容度：帧率40</p>
<h1 id="星露谷物语"><a href="#星露谷物语" class="headerlink" title="星露谷物语"></a>星露谷物语</h1><p><img src="https://cdn.cloudflare.steamstatic.com/steam/apps/413150/header.jpg?t=1666917466" alt=" Stardew Valley"><br>也行前面的只狼，老头环都难度太高，压力太大，你想找点修仙的游戏，那么星露谷绝对可以一试。慢节奏的生活让我爱不释手，逃避现实的高压，来到星露谷找到一个心灵的归属地。</p>
<p>steamdeck兼容度：完美</p>
<h1 id="逆转裁判"><a href="#逆转裁判" class="headerlink" title="逆转裁判"></a>逆转裁判</h1><p><img src="https://cdn.cloudflare.steamstatic.com/steam/apps/787480/header.jpg?t=1669873859" alt="phoenixWright"><br>曾经在GBA上风靡一时的游戏，因此非常适合小时候没能在GBA上玩到的大男孩补票。也许剧情简单，但是也颇为有趣。</p>
<p>steamdeck兼容性：完美</p>
<h1 id="死亡细胞"><a href="#死亡细胞" class="headerlink" title="死亡细胞"></a>死亡细胞</h1><p><img src="https://cdn.cloudflare.steamstatic.com/steam/apps/588650/header.jpg?t=1670838157" alt="deadCell"><br>又一部肉鸽like游戏，但是又有魂系游戏的元素设计，画面精美，打斗流畅。最初我是在Switch上接触的这款游戏，既然是Switch上的游戏，自然是非常适合在SD上跑了。</p>
<p>steamdeck兼容度：完美</p>
]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>steam</tag>
        <tag>steamdeck</tag>
      </tags>
  </entry>
</search>
